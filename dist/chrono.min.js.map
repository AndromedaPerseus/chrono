{"version":3,"sources":["webpack://chrono/webpack/universalModuleDefinition","webpack://chrono/webpack/bootstrap","webpack://chrono/./src/parsers/parser.js","webpack://chrono/./src/result.js","webpack://chrono/./node_modules/dayjs/dayjs.min.js","webpack://chrono/./src/refiners/refiner.js","webpack://chrono/./src/utils/EN.js","webpack://chrono/./src/refiners/en/ENMergeDateTimeRefiner.js","webpack://chrono/./src/parsers/en/ENWeekdayParser.js","webpack://chrono/./src/utils/ZH-Hant.js","webpack://chrono/./src/utils/DE.js","webpack://chrono/./src/refiners/en/ENMergeDateRangeRefiner.js","webpack://chrono/./src/utils/FR.js","webpack://chrono/./src/utils/NL.js","webpack://chrono/./src/parsers/en/ENISOFormatParser.js","webpack://chrono/./src/parsers/en/ENDeadlineFormatParser.js","webpack://chrono/./src/parsers/en/ENRelativeDateFormatParser.js","webpack://chrono/./src/parsers/en/ENMonthNameLittleEndianParser.js","webpack://chrono/./src/parsers/en/ENMonthNameMiddleEndianParser.js","webpack://chrono/./src/parsers/en/ENMonthNameParser.js","webpack://chrono/./src/parsers/en/ENSlashDateFormatParser.js","webpack://chrono/./src/parsers/en/ENSlashDateFormatStartWithYearParser.js","webpack://chrono/./src/parsers/en/ENSlashMonthFormatParser.js","webpack://chrono/./src/parsers/en/ENTimeAgoFormatParser.js","webpack://chrono/./src/parsers/en/ENTimeExpressionParser.js","webpack://chrono/./src/parsers/en/ENTimeLaterFormatParser.js","webpack://chrono/./src/parsers/en/ENCasualDateParser.js","webpack://chrono/./src/parsers/en/ENCasualTimeParser.js","webpack://chrono/./src/parsers/ja/JPStandardParser.js","webpack://chrono/./src/utils/JP.js","webpack://chrono/./src/parsers/ja/JPCasualDateParser.js","webpack://chrono/./src/parsers/pt/PTCasualDateParser.js","webpack://chrono/./src/parsers/pt/PTDeadlineFormatParser.js","webpack://chrono/./src/parsers/pt/PTMonthNameLittleEndianParser.js","webpack://chrono/./src/utils/PT.js","webpack://chrono/./src/parsers/pt/PTSlashDateFormatParser.js","webpack://chrono/./src/parsers/pt/PTTimeAgoFormatParser.js","webpack://chrono/./src/parsers/pt/PTTimeExpressionParser.js","webpack://chrono/./src/parsers/pt/PTWeekdayParser.js","webpack://chrono/./src/parsers/es/ESCasualDateParser.js","webpack://chrono/./src/parsers/es/ESDeadlineFormatParser.js","webpack://chrono/./src/parsers/es/ESTimeAgoFormatParser.js","webpack://chrono/./src/parsers/es/ESTimeExpressionParser.js","webpack://chrono/./src/parsers/es/ESWeekdayParser.js","webpack://chrono/./src/parsers/es/ESMonthNameLittleEndianParser.js","webpack://chrono/./src/utils/ES.js","webpack://chrono/./src/parsers/es/ESSlashDateFormatParser.js","webpack://chrono/./src/parsers/fr/FRCasualDateParser.js","webpack://chrono/./src/parsers/fr/FRDeadlineFormatParser.js","webpack://chrono/./src/parsers/fr/FRMonthNameLittleEndianParser.js","webpack://chrono/./src/parsers/fr/FRSlashDateFormatParser.js","webpack://chrono/./src/parsers/fr/FRTimeAgoFormatParser.js","webpack://chrono/./src/parsers/fr/FRTimeExpressionParser.js","webpack://chrono/./src/parsers/fr/FRWeekdayParser.js","webpack://chrono/./src/parsers/fr/FRRelativeDateFormatParser.js","webpack://chrono/./node_modules/dayjs/plugin/quarterOfYear.js","webpack://chrono/./src/parsers/zh-Hant/ZHHantDateParser.js","webpack://chrono/./src/parsers/zh-Hant/ZHHantWeekdayParser.js","webpack://chrono/./src/parsers/zh-Hant/ZHHantTimeExpressionParser.js","webpack://chrono/./src/parsers/zh-Hant/ZHHantCasualDateParser.js","webpack://chrono/./src/parsers/zh-Hant/ZHHantDeadlineFormatParser.js","webpack://chrono/./src/parsers/de/DEDeadlineFormatParser.js","webpack://chrono/./src/parsers/de/DEMonthNameLittleEndianParser.js","webpack://chrono/./src/parsers/de/DEMonthNameParser.js","webpack://chrono/./src/parsers/de/DESlashDateFormatParser.js","webpack://chrono/./src/parsers/de/DETimeAgoFormatParser.js","webpack://chrono/./src/parsers/de/DETimeExpressionParser.js","webpack://chrono/./src/parsers/de/DEWeekdayParser.js","webpack://chrono/./src/parsers/de/DECasualDateParser.js","webpack://chrono/./src/parsers/nl/NLMonthNameParser.js","webpack://chrono/./src/parsers/nl/NLMonthNameLittleEndianParser.js","webpack://chrono/./src/parsers/nl/NLSlashDateFormatParser.js","webpack://chrono/./src/parsers/nl/NLWeekdayParser.js","webpack://chrono/./src/parsers/nl/NLTimeExpressionParser.js","webpack://chrono/./src/parsers/nl/NLCasualDateParser.js","webpack://chrono/./src/parsers/nl/NLCasualTimeParser.js","webpack://chrono/./src/refiners/OverlapRemovalRefiner.js","webpack://chrono/./src/refiners/ExtractTimezoneOffsetRefiner.js","webpack://chrono/./src/refiners/ExtractTimezoneAbbrRefiner.js","webpack://chrono/./src/refiners/ForwardDateRefiner.js","webpack://chrono/./src/refiners/UnlikelyFormatFilter.js","webpack://chrono/./src/refiners/en/ENPrioritizeSpecificDateRefiner.js","webpack://chrono/./src/refiners/ja/JPMergeDateRangeRefiner.js","webpack://chrono/./src/refiners/fr/FRMergeDateRangeRefiner.js","webpack://chrono/./src/refiners/fr/FRMergeDateTimeRefiner.js","webpack://chrono/./src/refiners/de/DEMergeDateRangeRefiner.js","webpack://chrono/./src/refiners/de/DEMergeDateTimeRefiner.js","webpack://chrono/./src/refiners/nl/NLMergeDateRangeRefiner.js","webpack://chrono/./src/refiners/nl/NLMergeDateTimeRefiner.js","webpack://chrono/./src/options.js","webpack://chrono/./src/chrono.js"],"names":["root","factory","exports","module","define","amd","this","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","dayjs","require","Parser","config","strictMode","strict","isStrictMode","pattern","extract","text","ref","match","opt","execute","results","regex","remainingText","exec","index","length","result","substring","hasPossibleDates","push","refiners","forEach","refiner","refine","options","findYearClosestToRef","day","month","refMoment","dateMoment","nextYear","date","year","add","lastYear","Math","abs","diff","ENISOFormatParser","ENDeadlineFormatParser","ENRelativeDateFormatParser","ENMonthNameLittleEndianParser","ENMonthNameMiddleEndianParser","ENMonthNameParser","ENSlashDateFormatParser","ENSlashDateFormatStartWithYearParser","ENSlashMonthFormatParser","ENTimeAgoFormatParser","ENTimeExpressionParser","ENTimeLaterFormatParser","ENWeekdayParser","ENCasualDateParser","ENCasualTimeParser","JPStandardParser","JPCasualDateParser","PTCasualDateParser","PTDeadlineFormatParser","PTMonthNameLittleEndianParser","PTSlashDateFormatParser","PTTimeAgoFormatParser","PTTimeExpressionParser","PTWeekdayParser","ESCasualDateParser","ESDeadlineFormatParser","ESTimeAgoFormatParser","ESTimeExpressionParser","ESWeekdayParser","ESMonthNameLittleEndianParser","ESSlashDateFormatParser","FRCasualDateParser","FRDeadlineFormatParser","FRMonthNameLittleEndianParser","FRSlashDateFormatParser","FRTimeAgoFormatParser","FRTimeExpressionParser","FRWeekdayParser","FRRelativeDateFormatParser","ZHHantDateParser","ZHHantWeekdayParser","ZHHantTimeExpressionParser","ZHHantCasualDateParser","ZHHantDeadlineFormatParser","DEDeadlineFormatParser","DEMonthNameLittleEndianParser","DEMonthNameParser","DESlashDateFormatParser","DETimeAgoFormatParser","DETimeExpressionParser","DEWeekdayParser","DECasualDateParser","NLMonthNameParser","NLMonthNameLittleEndianParser","NLSlashDateFormatParser","NLWeekdayParser","NLTimeExpressionParser","NLCasualDateParser","NLCasualTimeParser","ParsedResult","tags","start","ParsedComponents","end","JSON","parse","stringify","clone","isPossibleDate","isOnlyWeekdayComponent","isOnlyDayMonthComponent","components","knownValues","impliedValues","imply","component","isCertain","adjustTimezoneOffset","utcOffset","toDate","currentTimezoneOffset","hour","minute","second","millisecond","undefined","e","u","a","h","f","String","Array","join","z","floor","Number","ceil","M","y","w","D","ms","Q","toLowerCase","replace","$","weekdays","split","months","v","g","args","arguments","locale","$L","utc","$u","$offset","$d","Date","NaN","test","UTC","init","$y","getFullYear","$M","getMonth","$D","getDate","$W","getDay","$H","getHours","$m","getMinutes","$s","getSeconds","$ms","getMilliseconds","$utils","isValid","toString","isSame","startOf","endOf","isAfter","isBefore","$g","set","unix","valueOf","getTime","apply","slice","$locale","weekStart","$set","min","daysInMonth","round","subtract","format","substr","meridiem","YY","YYYY","MM","MMM","monthsShort","MMMM","DD","dd","weekdaysMin","ddd","weekdaysShort","dddd","H","HH","hh","A","mm","ss","SSS","Z","getTimezoneOffset","toJSON","toISOString","toUTCString","extend","isDayjs","en","Ls","Refiner","Filter","filteredResult","OverlapRemovalRefiner","ExtractTimezoneOffsetRefiner","ExtractTimezoneAbbrRefiner","ForwardDateRefiner","UnlikelyFormatFilter","ENMergeDateTimeRefiner","ENMergeDateRangeRefiner","ENPrioritizeSpecificDateRefiner","JPMergeDateRangeRefiner","FRMergeDateRangeRefiner","FRMergeDateTimeRefiner","DEMergeDateRangeRefiner","DEMergeDateTimeRefiner","NLMergeDateRangeRefiner","NLMergeDateTimeRefiner","WEEKDAY_OFFSET","MONTH_OFFSET","MONTH_PATTERN","keys","INTEGER_WORDS","INTEGER_WORDS_PATTERN","ORDINAL_WORDS","ORDINAL_WORDS_PATTERN","TIME_UNIT","PATTERN_TIME_UNIT","RegExp","collectDateTimeFragment","fragments","num","parseFloat","TIME_UNIT_PATTERN","TIME_UNIT_STRICT_PATTERN","extractDateTimeUnitFragments","timeunitText","PATTERN","isDateOnly","isTimeOnly","isAbleToMerge","prevResult","curResult","mergeDateTimeComponent","dateComponent","timeComponent","dateTimeComponent","assign","mergeResult","dateResult","timeResult","beginDate","beginTime","beginDateTime","endDate","endTime","endDateTime","startIndex","endIndex","max","tag","mergedResult","currResult","DAYS_OFFSET","updateParsedComponent","offset","modifier","startMoment","startMomentFixed","refOffset","dayOfWeek","prefix","postfix","norm","NUMBER","zhStringToNumber","number","char","zhStringToYear","string","parseInt","result1","result2","begin","fromResult","toResult","isOnlyWeekday","fromMoment","toMoment","tmp","constructor","WEEKDAY_PATTERN","minuteOffset","hourOffset","util","STRICT_PATTERN","parser","trim","weekday","yearBE","monthName","littleEndian","MONTH_GROUP","DAY_GROUP","indexOf","tday","argument","FIRST_REG_PATTERN","SECOND_REG_PATTERN","ampm","suffix","preamble","lowerText","TIME_MATCH","toHankaku","moment","fromCharCode","alphaNum","token","charCodeAt","toZenkaku","secondMatch","firstMatch","isNaN","quarterOfYear","multiplier","modifierFactor","total","dateFrom","dateTo","relative","dateTmp","quarter","patternString1","patternString2","ZHTimeExpressionParser","day1","day3","zhAMPM1","zhAMPM2","zhAMPM3","endMoment","time1","time2","timeString3","time3","unitAbbr","forwardDate","filteredResults","TIMEZONE_OFFSET_PATTERN","timezoneOffset","TIMEZONE_NAME_PATTERN","DEFAULT_TIMEZONE_ABBR_MAP","timezones","timezoneAbbr","toUpperCase","isMoreSpecific","moreSpecific","textBetween","includesRelativeResult","referToSameDate","specificResult","nonSpecificResult","isWeekdayResult","mergeOptions","addedTypes","mergedOption","parsers","option","commonPostProcessing","strictOption","strictConfig","de","nl","pt","es","fr","ja","zh","casualOption","casual","unshift","en_GB","Chrono","refDate","allResults","concat","sort","b","_options","_parser","_refiner","_result","parseDate"],"mappings":"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","file":"chrono.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"chrono\"] = factory();\n\telse\n\t\troot[\"chrono\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 87);\n","const dayjs = require('dayjs');\n\nexports.Parser = function (config) {\n\n    config = config || {};\n    var strictMode = config.strict;\n\n    this.isStrictMode = function() { return (strictMode == true) };\n\n    this.pattern = function() { return /./i; }\n\n    this.extract = function(text, ref, match, opt){ return null; }\n\n    this.execute = function(text, ref, opt) {\n\n        var results = [];\n        var regex = this.pattern();\n\n        var remainingText = text;\n        var match = regex.exec(remainingText);\n\n        while (match) {\n\n            // Calculate match index on the full text;\n            match.index += text.length - remainingText.length;\n\n            var result = this.extract(text, ref, match, opt);\n            if (result) {\n\n                // If success, start from the end of the result\n                remainingText = text.substring(result.index + result.text.length);\n\n                if (!this.isStrictMode() || result.hasPossibleDates()) {\n                    results.push(result);\n                }\n\n            } else {\n                // If fail, move on by 1\n                remainingText = text.substring(match.index + 1);\n            }\n\n            match = regex.exec(remainingText);\n        }\n\n        if (this.refiners) {\n            this.refiners.forEach(function () {\n                results = refiner.refine(results, text, options);\n            });\n        }\n\n        return results;\n    }\n}\n\nexports.findYearClosestToRef = function (ref, day, month) {\n    //Find the most appropriated year\n    const refMoment = dayjs(ref);\n    var dateMoment = refMoment;\n    dateMoment = dateMoment.month(month - 1);\n    dateMoment = dateMoment.date(day);\n    dateMoment = dateMoment.year(refMoment.year())\n\n    const nextYear = dateMoment.add(1, 'y');\n    const lastYear = dateMoment.add(-1, 'y');\n    if( Math.abs(nextYear.diff(refMoment)) < Math.abs(dateMoment.diff(refMoment)) ){\n        dateMoment = nextYear;\n    }\n    else if( Math.abs(lastYear.diff(refMoment)) < Math.abs(dateMoment.diff(refMoment)) ){\n        dateMoment = lastYear;\n    }\n\n    return dateMoment.year();\n}\n\nexports.ENISOFormatParser = require('./en/ENISOFormatParser').Parser;\nexports.ENDeadlineFormatParser = require('./en/ENDeadlineFormatParser').Parser;\nexports.ENRelativeDateFormatParser = require('./en/ENRelativeDateFormatParser').Parser;\nexports.ENMonthNameLittleEndianParser = require('./en/ENMonthNameLittleEndianParser').Parser;\nexports.ENMonthNameMiddleEndianParser = require('./en/ENMonthNameMiddleEndianParser').Parser;\nexports.ENMonthNameParser = require('./en/ENMonthNameParser').Parser;\nexports.ENSlashDateFormatParser = require('./en/ENSlashDateFormatParser').Parser;\nexports.ENSlashDateFormatStartWithYearParser = require('./en/ENSlashDateFormatStartWithYearParser').Parser;\nexports.ENSlashMonthFormatParser = require('./en/ENSlashMonthFormatParser').Parser;\nexports.ENTimeAgoFormatParser = require('./en/ENTimeAgoFormatParser').Parser;\nexports.ENTimeExpressionParser = require('./en/ENTimeExpressionParser').Parser;\nexports.ENTimeLaterFormatParser = require('./en/ENTimeLaterFormatParser').Parser;\nexports.ENWeekdayParser = require('./en/ENWeekdayParser').Parser;\nexports.ENCasualDateParser = require('./en/ENCasualDateParser').Parser;\nexports.ENCasualTimeParser = require('./en/ENCasualTimeParser').Parser;\n\nexports.JPStandardParser = require('./ja/JPStandardParser').Parser;\nexports.JPCasualDateParser = require('./ja/JPCasualDateParser').Parser;\n\nexports.PTCasualDateParser = require('./pt/PTCasualDateParser').Parser;\nexports.PTDeadlineFormatParser = require('./pt/PTDeadlineFormatParser').Parser;\nexports.PTMonthNameLittleEndianParser = require('./pt/PTMonthNameLittleEndianParser').Parser;\nexports.PTSlashDateFormatParser = require('./pt/PTSlashDateFormatParser').Parser;\nexports.PTTimeAgoFormatParser = require('./pt/PTTimeAgoFormatParser').Parser;\nexports.PTTimeExpressionParser = require('./pt/PTTimeExpressionParser').Parser;\nexports.PTWeekdayParser = require('./pt/PTWeekdayParser').Parser;\n\nexports.ESCasualDateParser = require('./es/ESCasualDateParser').Parser;\nexports.ESDeadlineFormatParser = require('./es/ESDeadlineFormatParser').Parser;\nexports.ESTimeAgoFormatParser = require('./es/ESTimeAgoFormatParser').Parser;\nexports.ESTimeExpressionParser = require('./es/ESTimeExpressionParser').Parser;\nexports.ESWeekdayParser = require('./es/ESWeekdayParser').Parser;\nexports.ESMonthNameLittleEndianParser = require('./es/ESMonthNameLittleEndianParser').Parser;\nexports.ESSlashDateFormatParser = require('./es/ESSlashDateFormatParser').Parser;\n\nexports.FRCasualDateParser = require('./fr/FRCasualDateParser').Parser;\nexports.FRDeadlineFormatParser = require('./fr/FRDeadlineFormatParser').Parser;\nexports.FRMonthNameLittleEndianParser = require('./fr/FRMonthNameLittleEndianParser').Parser;\nexports.FRSlashDateFormatParser = require('./fr/FRSlashDateFormatParser').Parser;\nexports.FRTimeAgoFormatParser = require('./fr/FRTimeAgoFormatParser').Parser;\nexports.FRTimeExpressionParser = require('./fr/FRTimeExpressionParser').Parser;\nexports.FRWeekdayParser = require('./fr/FRWeekdayParser').Parser;\nexports.FRRelativeDateFormatParser = require('./fr/FRRelativeDateFormatParser').Parser;\n\nexports.ZHHantDateParser = require('./zh-Hant/ZHHantDateParser').Parser;\nexports.ZHHantWeekdayParser = require('./zh-Hant/ZHHantWeekdayParser').Parser;\nexports.ZHHantTimeExpressionParser = require('./zh-Hant/ZHHantTimeExpressionParser').Parser;\nexports.ZHHantCasualDateParser = require('./zh-Hant/ZHHantCasualDateParser').Parser;\nexports.ZHHantDeadlineFormatParser = require('./zh-Hant/ZHHantDeadlineFormatParser').Parser;\n\nexports.DEDeadlineFormatParser = require('./de/DEDeadlineFormatParser').Parser;\nexports.DEMonthNameLittleEndianParser = require('./de/DEMonthNameLittleEndianParser').Parser;\nexports.DEMonthNameParser = require('./de/DEMonthNameParser').Parser;\nexports.DESlashDateFormatParser = require('./de/DESlashDateFormatParser').Parser;\nexports.DETimeAgoFormatParser = require('./de/DETimeAgoFormatParser').Parser;\nexports.DETimeExpressionParser = require('./de/DETimeExpressionParser').Parser;\nexports.DEWeekdayParser = require('./de/DEWeekdayParser').Parser;\nexports.DECasualDateParser = require('./de/DECasualDateParser').Parser;\n\nexports.NLMonthNameParser = require('./nl/NLMonthNameParser').Parser;\nexports.NLMonthNameLittleEndianParser = require('./nl/NLMonthNameLittleEndianParser').Parser;\nexports.NLSlashDateFormatParser = require('./nl/NLSlashDateFormatParser').Parser;\nexports.NLWeekdayParser = require('./nl/NLWeekdayParser').Parser;\nexports.NLTimeExpressionParser = require('./nl/NLTimeExpressionParser').Parser;\nexports.NLCasualDateParser = require('./nl/NLCasualDateParser').Parser;\nexports.NLCasualTimeParser = require('./nl/NLCasualTimeParser').Parser;\n","import dayjs from 'dayjs';\n\nexport class ParsedResult {\n\n    constructor(result) {\n        result = result || {};\n\n        this.ref   = result.ref;\n        this.index = result.index;\n        this.text  = result.text;\n        this.tags  = result.tags || {};\n\n        this.start = new ParsedComponents(result.start, result.ref);\n\n        if(result.end){\n            this.end = new ParsedComponents(result.end, result.ref);\n        }\n    }\n\n    clone() {\n        var result = new ParsedResult(this);\n        result.tags = JSON.parse(JSON.stringify(this.tags));\n        result.start = this.start.clone();\n        if (this.end) {\n            result.end = this.end.clone();\n        }\n\n        return result\n    }\n\n    date() {\n        return this.start.date();\n    }\n\n    hasPossibleDates() {\n        return this.start.isPossibleDate() && (!this.end || this.end.isPossibleDate());\n    }\n\n    isOnlyWeekday() {\n        return this.start.isOnlyWeekdayComponent();\n    }\n\n    isOnlyDayMonth() {\n        return this.start.isOnlyDayMonthComponent();\n    }\n}\n\nexport class ParsedComponents {\n\n    constructor(components, ref) {\n        this.knownValues = {};\n        this.impliedValues = {};\n\n        if (components) {\n            for (let key in components) {\n                this.knownValues[key] = components[key];\n            }\n        }\n\n        if (ref) {\n            ref = dayjs(ref);\n            this.imply('day', ref.date());\n            this.imply('month', ref.month() + 1);\n            this.imply('year', ref.year())\n        }\n\n\n        this.imply('hour', 12);\n        this.imply('minute', 0);\n        this.imply('second', 0);\n        this.imply('millisecond', 0);\n    }\n\n    get(component) {\n        if (component in this.knownValues) return this.knownValues[component];\n        if (component in this.impliedValues) return this.impliedValues[component];\n    }\n\n    isCertain(component) {\n        return component in this.knownValues;\n    }\n\n    imply(component, value) {\n        if (component in this.knownValues) return;\n        this.impliedValues[component] = value;\n    }\n\n    assign(component, value) {\n        this.knownValues[component] = value;\n        delete this.impliedValues[component];\n    }\n\n    clone() {\n        const component = new ParsedComponents();\n        component.knownValues = JSON.parse(JSON.stringify(this.knownValues));\n        component.impliedValues = JSON.parse(JSON.stringify(this.impliedValues));\n        return component;\n    }\n\n    isOnlyWeekdayComponent() {\n        return this.isCertain('weekday') && !this.isCertain('day') && !this.isCertain('month');\n    }\n\n    isOnlyDayMonthComponent() {\n        return this.isCertain('day') && this.isCertain('month') && !this.isCertain('year');\n    }\n\n    isPossibleDate() {\n        var dateMoment = this.dayjs();\n        if (this.isCertain('timezoneOffset')) {\n            const adjustTimezoneOffset = this.get('timezoneOffset') - dateMoment.utcOffset();\n            dateMoment = dateMoment.add(adjustTimezoneOffset, 'minutes');\n        }\n\n        if (dateMoment.get('year') != this.get('year')) return false;\n        if (dateMoment.get('month') != this.get('month')-1) return false;\n        if (dateMoment.get('date') != this.get('day')) return false;\n        if (dateMoment.get('hour') != this.get('hour')) return false;\n        if (dateMoment.get('minute') != this.get('minute')) return false;\n\n        return true;\n    }\n\n    date() {\n        const result = this.dayjs();\n        return result.toDate();\n    }\n\n    dayjs() {\n        var result = dayjs();\n\n        result = result.year(this.get('year'));\n        result = result.month(this.get('month') - 1);\n        result = result.date(this.get('day'));\n        result = result.hour(this.get('hour'));\n        result = result.minute(this.get('minute'));\n        result = result.second(this.get('second'));\n        result = result.millisecond(this.get('millisecond'));\n\n        // Javascript Date Object return minus timezone offset\n        var currentTimezoneOffset = result.utcOffset();\n        var targetTimezoneOffset = this.get('timezoneOffset') !== undefined ?\n            this.get('timezoneOffset') : currentTimezoneOffset;\n\n        var adjustTimezoneOffset = targetTimezoneOffset - currentTimezoneOffset;\n        result = result.add(-adjustTimezoneOffset, 'minute');\n\n        return result;\n    }\n\n    moment() {\n        // Keep for compatibility\n        return this.dayjs();\n    }\n}\n","!function(t,e){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=e():\"function\"==typeof define&&define.amd?define(e):t.dayjs=e()}(this,function(){\"use strict\";var t=\"millisecond\",e=\"second\",n=\"minute\",r=\"hour\",i=\"day\",s=\"week\",u=\"month\",o=\"quarter\",a=\"year\",h=/^(\\d{4})-?(\\d{1,2})-?(\\d{0,2})[^0-9]*(\\d{1,2})?:?(\\d{1,2})?:?(\\d{1,2})?.?(\\d{1,3})?$/,f=/\\[([^\\]]+)]|Y{2,4}|M{1,4}|D{1,2}|d{1,4}|H{1,2}|h{1,2}|a|A|m{1,2}|s{1,2}|Z{1,2}|SSS/g,c=function(t,e,n){var r=String(t);return!r||r.length>=e?t:\"\"+Array(e+1-r.length).join(n)+t},d={s:c,z:function(t){var e=-t.utcOffset(),n=Math.abs(e),r=Math.floor(n/60),i=n%60;return(e<=0?\"+\":\"-\")+c(r,2,\"0\")+\":\"+c(i,2,\"0\")},m:function(t,e){var n=12*(e.year()-t.year())+(e.month()-t.month()),r=t.clone().add(n,u),i=e-r<0,s=t.clone().add(n+(i?-1:1),u);return Number(-(n+(e-r)/(i?r-s:s-r))||0)},a:function(t){return t<0?Math.ceil(t)||0:Math.floor(t)},p:function(h){return{M:u,y:a,w:s,d:i,D:\"date\",h:r,m:n,s:e,ms:t,Q:o}[h]||String(h||\"\").toLowerCase().replace(/s$/,\"\")},u:function(t){return void 0===t}},$={name:\"en\",weekdays:\"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday\".split(\"_\"),months:\"January_February_March_April_May_June_July_August_September_October_November_December\".split(\"_\")},l=\"en\",m={};m[l]=$;var y=function(t){return t instanceof v},M=function(t,e,n){var r;if(!t)return l;if(\"string\"==typeof t)m[t]&&(r=t),e&&(m[t]=e,r=t);else{var i=t.name;m[i]=t,r=i}return!n&&r&&(l=r),r||!n&&l},g=function(t,e){if(y(t))return t.clone();var n=\"object\"==typeof e?e:{};return n.date=t,n.args=arguments,new v(n)},D=d;D.l=M,D.i=y,D.w=function(t,e){return g(t,{locale:e.$L,utc:e.$u,$offset:e.$offset})};var v=function(){function c(t){this.$L=this.$L||M(t.locale,null,!0),this.parse(t)}var d=c.prototype;return d.parse=function(t){this.$d=function(t){var e=t.date,n=t.utc;if(null===e)return new Date(NaN);if(D.u(e))return new Date;if(e instanceof Date)return new Date(e);if(\"string\"==typeof e&&!/Z$/i.test(e)){var r=e.match(h);if(r)return n?new Date(Date.UTC(r[1],r[2]-1,r[3]||1,r[4]||0,r[5]||0,r[6]||0,r[7]||0)):new Date(r[1],r[2]-1,r[3]||1,r[4]||0,r[5]||0,r[6]||0,r[7]||0)}return new Date(e)}(t),this.init()},d.init=function(){var t=this.$d;this.$y=t.getFullYear(),this.$M=t.getMonth(),this.$D=t.getDate(),this.$W=t.getDay(),this.$H=t.getHours(),this.$m=t.getMinutes(),this.$s=t.getSeconds(),this.$ms=t.getMilliseconds()},d.$utils=function(){return D},d.isValid=function(){return!(\"Invalid Date\"===this.$d.toString())},d.isSame=function(t,e){var n=g(t);return this.startOf(e)<=n&&n<=this.endOf(e)},d.isAfter=function(t,e){return g(t)<this.startOf(e)},d.isBefore=function(t,e){return this.endOf(e)<g(t)},d.$g=function(t,e,n){return D.u(t)?this[e]:this.set(n,t)},d.year=function(t){return this.$g(t,\"$y\",a)},d.month=function(t){return this.$g(t,\"$M\",u)},d.day=function(t){return this.$g(t,\"$W\",i)},d.date=function(t){return this.$g(t,\"$D\",\"date\")},d.hour=function(t){return this.$g(t,\"$H\",r)},d.minute=function(t){return this.$g(t,\"$m\",n)},d.second=function(t){return this.$g(t,\"$s\",e)},d.millisecond=function(e){return this.$g(e,\"$ms\",t)},d.unix=function(){return Math.floor(this.valueOf()/1e3)},d.valueOf=function(){return this.$d.getTime()},d.startOf=function(t,o){var h=this,f=!!D.u(o)||o,c=D.p(t),d=function(t,e){var n=D.w(h.$u?Date.UTC(h.$y,e,t):new Date(h.$y,e,t),h);return f?n:n.endOf(i)},$=function(t,e){return D.w(h.toDate()[t].apply(h.toDate(\"s\"),(f?[0,0,0,0]:[23,59,59,999]).slice(e)),h)},l=this.$W,m=this.$M,y=this.$D,M=\"set\"+(this.$u?\"UTC\":\"\");switch(c){case a:return f?d(1,0):d(31,11);case u:return f?d(1,m):d(0,m+1);case s:var g=this.$locale().weekStart||0,v=(l<g?l+7:l)-g;return d(f?y-v:y+(6-v),m);case i:case\"date\":return $(M+\"Hours\",0);case r:return $(M+\"Minutes\",1);case n:return $(M+\"Seconds\",2);case e:return $(M+\"Milliseconds\",3);default:return this.clone()}},d.endOf=function(t){return this.startOf(t,!1)},d.$set=function(s,o){var h,f=D.p(s),c=\"set\"+(this.$u?\"UTC\":\"\"),d=(h={},h[i]=c+\"Date\",h.date=c+\"Date\",h[u]=c+\"Month\",h[a]=c+\"FullYear\",h[r]=c+\"Hours\",h[n]=c+\"Minutes\",h[e]=c+\"Seconds\",h[t]=c+\"Milliseconds\",h)[f],$=f===i?this.$D+(o-this.$W):o;if(f===u||f===a){var l=this.clone().set(\"date\",1);l.$d[d]($),l.init(),this.$d=l.set(\"date\",Math.min(this.$D,l.daysInMonth())).toDate()}else d&&this.$d[d]($);return this.init(),this},d.set=function(t,e){return this.clone().$set(t,e)},d.get=function(t){return this[D.p(t)]()},d.add=function(t,o){var h,f=this;t=Number(t);var c=D.p(o),d=function(e){var n=g(f);return D.w(n.date(n.date()+Math.round(e*t)),f)};if(c===u)return this.set(u,this.$M+t);if(c===a)return this.set(a,this.$y+t);if(c===i)return d(1);if(c===s)return d(7);var $=(h={},h[n]=6e4,h[r]=36e5,h[e]=1e3,h)[c]||1,l=this.$d.getTime()+t*$;return D.w(l,this)},d.subtract=function(t,e){return this.add(-1*t,e)},d.format=function(t){var e=this;if(!this.isValid())return\"Invalid Date\";var n=t||\"YYYY-MM-DDTHH:mm:ssZ\",r=D.z(this),i=this.$locale(),s=this.$H,u=this.$m,o=this.$M,a=i.weekdays,h=i.months,c=function(t,r,i,s){return t&&(t[r]||t(e,n))||i[r].substr(0,s)},d=function(t){return D.s(s%12||12,t,\"0\")},$=i.meridiem||function(t,e,n){var r=t<12?\"AM\":\"PM\";return n?r.toLowerCase():r},l={YY:String(this.$y).slice(-2),YYYY:this.$y,M:o+1,MM:D.s(o+1,2,\"0\"),MMM:c(i.monthsShort,o,h,3),MMMM:c(h,o),D:this.$D,DD:D.s(this.$D,2,\"0\"),d:String(this.$W),dd:c(i.weekdaysMin,this.$W,a,2),ddd:c(i.weekdaysShort,this.$W,a,3),dddd:a[this.$W],H:String(s),HH:D.s(s,2,\"0\"),h:d(1),hh:d(2),a:$(s,u,!0),A:$(s,u,!1),m:String(u),mm:D.s(u,2,\"0\"),s:String(this.$s),ss:D.s(this.$s,2,\"0\"),SSS:D.s(this.$ms,3,\"0\"),Z:r};return n.replace(f,function(t,e){return e||l[t]||r.replace(\":\",\"\")})},d.utcOffset=function(){return 15*-Math.round(this.$d.getTimezoneOffset()/15)},d.diff=function(t,h,f){var c,d=D.p(h),$=g(t),l=6e4*($.utcOffset()-this.utcOffset()),m=this-$,y=D.m(this,$);return y=(c={},c[a]=y/12,c[u]=y,c[o]=y/3,c[s]=(m-l)/6048e5,c[i]=(m-l)/864e5,c[r]=m/36e5,c[n]=m/6e4,c[e]=m/1e3,c)[d]||m,f?y:D.a(y)},d.daysInMonth=function(){return this.endOf(u).$D},d.$locale=function(){return m[this.$L]},d.locale=function(t,e){if(!t)return this.$L;var n=this.clone(),r=M(t,e,!0);return r&&(n.$L=r),n},d.clone=function(){return D.w(this.$d,this)},d.toDate=function(){return new Date(this.valueOf())},d.toJSON=function(){return this.isValid()?this.toISOString():null},d.toISOString=function(){return this.$d.toISOString()},d.toString=function(){return this.$d.toUTCString()},c}();return g.prototype=v.prototype,g.extend=function(t,e){return t(e,v,g),g},g.locale=M,g.isDayjs=y,g.unix=function(t){return g(1e3*t)},g.en=m[l],g.Ls=m,g});\n","\nexports.Refiner = function Refiner() { \n\n    this.refine = function(text, results, opt) { return results; };\n}\n\nexports.Filter = function Filter() { \n    \n    exports.Refiner.call(this);\n\n    this.isValid = function(text, result, opt) { return true; }\n    this.refine = function(text, results, opt) { \n\n        var filteredResult = [];\n        for (var i=0; i < results.length; i++) {\n\n            var result = results[i];\n            if (this.isValid(text, result, opt)) {\n                filteredResult.push(result);\n            }\n        }\n\n        return filteredResult;\n    }\n}\n\n\n// Common refiners\nexports.OverlapRemovalRefiner = require('./OverlapRemovalRefiner').Refiner;\nexports.ExtractTimezoneOffsetRefiner = require('./ExtractTimezoneOffsetRefiner').Refiner;\nexports.ExtractTimezoneAbbrRefiner = require('./ExtractTimezoneAbbrRefiner').Refiner;\nexports.ForwardDateRefiner = require('./ForwardDateRefiner').Refiner;\nexports.UnlikelyFormatFilter = require('./UnlikelyFormatFilter').Refiner;\n\n// en refiners\nexports.ENMergeDateTimeRefiner = require('./en/ENMergeDateTimeRefiner').Refiner;\nexports.ENMergeDateRangeRefiner = require('./en/ENMergeDateRangeRefiner').Refiner;\nexports.ENPrioritizeSpecificDateRefiner = require('./en/ENPrioritizeSpecificDateRefiner').Refiner;\n\n// ja refiners\nexports.JPMergeDateRangeRefiner = require('./ja/JPMergeDateRangeRefiner').Refiner;\n\n// fr refiners\nexports.FRMergeDateRangeRefiner = require('./fr/FRMergeDateRangeRefiner').Refiner;\nexports.FRMergeDateTimeRefiner = require('./fr/FRMergeDateTimeRefiner').Refiner;\n\n// de refiners\nexports.DEMergeDateRangeRefiner = require('./de/DEMergeDateRangeRefiner').Refiner;\nexports.DEMergeDateTimeRefiner = require('./de/DEMergeDateTimeRefiner').Refiner;\n\n// nl refiners\nexports.NLMergeDateRangeRefiner = require('./nl/NLMergeDateRangeRefiner').Refiner;\nexports.NLMergeDateTimeRefiner = require('./nl/NLMergeDateTimeRefiner').Refiner;\n","exports.WEEKDAY_OFFSET = { \n    'sunday': 0, \n    'sun': 0, \n    'monday': 1, \n    'mon': 1,\n    'tuesday': 2, \n    'tue':2, \n    'wednesday': 3, \n    'wed': 3, \n    'thursday': 4, \n    'thur': 4, \n    'thu': 4,\n    'friday': 5, \n    'fri': 5,\n    'saturday': 6, \n    'sat': 6\n};\n    \nexports.MONTH_OFFSET = { \n    'january': 1,\n    'jan': 1,\n    'jan.': 1,\n    'february': 2,\n    'feb': 2,\n    'feb.': 2,\n    'march': 3,\n    'mar': 3,\n    'mar.': 3,\n    'april': 4,\n    'apr': 4,\n    'apr.': 4,\n    'may': 5,\n    'june': 6,\n    'jun': 6,\n    'jun.': 6,\n    'july': 7,\n    'jul': 7,\n    'jul.': 7,\n    'august': 8,\n    'aug': 8,\n    'aug.': 8,\n    'september': 9,\n    'sep': 9,\n    'sep.': 9,\n    'sept': 9,\n    'sept.': 9,\n    'october': 10,\n    'oct': 10,\n    'oct.': 10,\n    'november': 11,\n    'nov': 11,\n    'nov.': 11,\n    'december': 12,\n    'dec': 12,\n    'dec.': 12\n};\n\nexports.MONTH_PATTERN = '(?:' \n    + Object.keys(exports.MONTH_OFFSET).join('|').replace(/\\./g, '\\\\.')\n    + ')';\n\nexports.INTEGER_WORDS = {\n    'one' : 1,\n    'two' : 2,\n    'three' : 3,\n    'four' : 4,\n    'five' : 5,\n    'six' : 6,\n    'seven' : 7,\n    'eight' : 8,\n    'nine' : 9,\n    'ten' : 10,\n    'eleven' : 11,\n    'twelve' : 12\n};\nexports.INTEGER_WORDS_PATTERN = '(?:' \n    + Object.keys(exports.INTEGER_WORDS).join('|') \n    +')';\n\nexports.ORDINAL_WORDS = {\n    'first' : 1,\n    'second': 2,\n    'third': 3,\n    'fourth': 4,\n    'fifth': 5,\n    'sixth': 6,\n    'seventh': 7,\n    'eighth': 8,\n    'ninth': 9,\n    'tenth': 10,\n    'eleventh': 11,\n    'twelfth': 12,\n    'thirteenth': 13,\n    'fourteenth': 14,\n    'fifteenth': 15,\n    'sixteenth': 16,\n    'seventeenth': 17,\n    'eighteenth': 18,\n    'nineteenth': 19,\n    'twentieth': 20,\n    'twenty first': 21,\n    'twenty second': 22,\n    'twenty third': 23,\n    'twenty fourth': 24,\n    'twenty fifth': 25,\n    'twenty sixth': 26,\n    'twenty seventh': 27,\n    'twenty eighth': 28,\n    'twenty ninth': 29,\n    'thirtieth': 30,\n    'thirty first': 31\n};\nexports.ORDINAL_WORDS_PATTERN = '(?:' \n    + Object.keys(exports.ORDINAL_WORDS).join('|').replace(/ /g, '[ -]') \n    + ')';\n\nvar TIME_UNIT = \n    '(' + exports.INTEGER_WORDS_PATTERN + '|[0-9]+|[0-9]+\\.[0-9]+|an?(?:\\\\s*few)?|half(?:\\\\s*an?)?)\\\\s*' +\n    '(sec(?:onds?)?|min(?:ute)?s?|h(?:r|rs|our|ours)?|weeks?|days?|months?|years?)\\\\s*';\n\nvar TIME_UNIT_STRICT = \n    '(?:[0-9]+|an?)\\\\s*' +\n    '(?:seconds?|minutes?|hours?|days?)\\\\s*';\n\nvar PATTERN_TIME_UNIT = new RegExp(TIME_UNIT, 'i');\n\nexports.TIME_UNIT_PATTERN = '(?:' + TIME_UNIT + ')+';\nexports.TIME_UNIT_STRICT_PATTERN = '(?:' + TIME_UNIT_STRICT + ')+';\n\nexports.extractDateTimeUnitFragments = function (timeunitText) {\n    var fragments = {};\n    var remainingText = timeunitText;\n    var match = PATTERN_TIME_UNIT.exec(remainingText);\n    while (match) {\n        collectDateTimeFragment(match, fragments);\n        remainingText = remainingText.substring(match[0].length);\n        match = PATTERN_TIME_UNIT.exec(remainingText);\n    }\n    return fragments;\n};\n\nfunction collectDateTimeFragment(match, fragments) {\n    var num = match[1].toLowerCase() ;\n    if (exports.INTEGER_WORDS[num] !== undefined) {\n        num = exports.INTEGER_WORDS[num];\n    } else if(num === 'a' || num === 'an'){\n        num = 1;\n    } else if (num.match(/few/)) {\n        num = 3;\n    } else if (num.match(/half/)) {\n        num = 0.5;\n    } else {\n        num = parseFloat(num);\n    }\n\n    if (match[2].match(/^h/i)) {\n        fragments['hour'] = num;\n    } else if (match[2].match(/min/i)) {\n        fragments['minute'] = num;\n    } else if (match[2].match(/sec/i)) {\n        fragments['second'] = num;\n    } else if (match[2].match(/week/i)) {\n        fragments['week'] = num;\n    } else if (match[2].match(/day/i)) {\n        fragments['d'] = num;\n    } else if (match[2].match(/month/i)) {\n        fragments['month'] = num;\n    } else if (match[2].match(/year/i)) {\n        fragments['year'] = num;\n    }\n\n    return fragments;\n}","/*\n    \n*/\nvar ParsedComponents = require('../../result').ParsedComponents;\nvar Refiner = require('../refiner').Refiner;\n\nvar PATTERN = new RegExp(\"^[ ]*(T|at|after|before|on|of|,|-)?[ ]*$\");\n\nvar isDateOnly = exports.isDateOnly = function(result) {\n    return !result.start.isCertain('hour');\n}\n    \nvar isTimeOnly = exports.isTimeOnly = function(result) {\n    return !result.start.isCertain('month') && !result.start.isCertain('weekday');\n}\n\nvar isAbleToMerge = exports.isAbleToMerge = function(text, prevResult, curResult) {\n    var textBetween = text.substring(prevResult.index + prevResult.text.length, curResult.index);\n    return textBetween.match(PATTERN);\n}\n\nvar mergeDateTimeComponent = exports.mergeDateTimeComponent = function(dateComponent, timeComponent) {\n    var dateTimeComponent = dateComponent.clone();\n\n    if (timeComponent.isCertain('hour')) {\n        dateTimeComponent.assign('hour', timeComponent.get('hour'));\n        dateTimeComponent.assign('minute', timeComponent.get('minute'));\n\n        if (timeComponent.isCertain('second')) {\n            dateTimeComponent.assign('second', timeComponent.get('second'));\n\n            if (timeComponent.isCertain('millisecond')) {\n                dateTimeComponent.assign('millisecond', timeComponent.get('millisecond'));\n            } else {\n                dateTimeComponent.imply('millisecond', timeComponent.get('millisecond'));\n            }\n        } else {\n            dateTimeComponent.imply('second', timeComponent.get('second'));\n            dateTimeComponent.imply('millisecond', timeComponent.get('millisecond'));\n        }\n        \n    } else {\n        dateTimeComponent.imply('hour', timeComponent.get('hour'));\n        dateTimeComponent.imply('minute', timeComponent.get('minute'));\n        dateTimeComponent.imply('second', timeComponent.get('second'));\n        dateTimeComponent.imply('millisecond', timeComponent.get('millisecond'));\n    }\n\n    if (timeComponent.isCertain('meridiem')) {\n        dateTimeComponent.assign('meridiem', timeComponent.get('meridiem'));\n    } else if (\n        timeComponent.get('meridiem') !== undefined &&\n        dateTimeComponent.get('meridiem') === undefined\n    ) {\n        dateTimeComponent.imply('meridiem', timeComponent.get('meridiem'));\n    }\n\n    if (dateTimeComponent.get('meridiem') == 1 && dateTimeComponent.get('hour') < 12) {\n        if (timeComponent.isCertain('hour')) {\n            dateTimeComponent.assign('hour', dateTimeComponent.get('hour') + 12);\n        } else {\n            dateTimeComponent.imply('hour', dateTimeComponent.get('hour') + 12);\n        }\n    }\n\n    return dateTimeComponent;\n}\n\n\nfunction mergeResult(text, dateResult, timeResult){\n\n    var beginDate = dateResult.start;\n    var beginTime = timeResult.start;\n    var beginDateTime = mergeDateTimeComponent(beginDate, beginTime);\n    \n    if (dateResult.end != null || timeResult.end != null) {\n        \n        var endDate   = dateResult.end == null ? dateResult.start : dateResult.end;            \n        var endTime   = timeResult.end == null ? timeResult.start : timeResult.end;\n        var endDateTime = mergeDateTimeComponent(endDate, endTime);\n        \n        if (dateResult.end == null && endDateTime.date().getTime() < beginDateTime.date().getTime()) {\n            // Ex. 9pm - 1am\n            if (endDateTime.isCertain('day')) {\n                endDateTime.assign('day', endDateTime.get('day') + 1);\n            } else {\n                endDateTime.imply('day', endDateTime.get('day') + 1);\n            }\n        }\n\n        dateResult.end = endDateTime;\n    }\n\n    dateResult.start = beginDateTime;    \n\n    var startIndex = Math.min(dateResult.index, timeResult.index);\n    var endIndex = Math.max(\n            dateResult.index + dateResult.text.length, \n            timeResult.index + timeResult.text.length);\n    \n    dateResult.index = startIndex;\n    dateResult.text  = text.substring(startIndex, endIndex);\n\n    for (var tag in timeResult.tags) {\n        dateResult.tags[tag] = true;\n    }\n    dateResult.tags['ENMergeDateAndTimeRefiner'] = true;\n    return dateResult;\n}\n\nexports.Refiner = function ENMergeDateTimeRefiner() {\n    Refiner.call(this);\n\n\n    this.refine = function(text, results, opt) { \n\n        if (results.length < 2) return results;\n\n        var mergedResult = [];\n        var currResult = null;\n        var prevResult = null;\n\n        for (var i = 1; i < results.length; i++) {\n\n            currResult = results[i];\n            prevResult = results[i-1];\n            \n            if (isDateOnly(prevResult) && isTimeOnly(currResult) \n                    && isAbleToMerge(text, prevResult, currResult)) {\n                \n                prevResult = mergeResult(text, prevResult, currResult);\n                currResult = results[i + 1];\n                i += 1;\n                \n            } else if (isDateOnly(currResult) && isTimeOnly(prevResult)\n                    && isAbleToMerge(text, prevResult, currResult)) {\n                \n                prevResult = mergeResult(text, currResult, prevResult);\n                currResult = results[i + 1];\n                i += 1;\n            }\n            \n            mergedResult.push(prevResult);\n        }\n\n        if (currResult != null) {\n            mergedResult.push(currResult);\n        }\n\n        return mergedResult;\n    }\n}","const dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar DAYS_OFFSET = { 'sunday': 0, 'sun': 0, 'monday': 1, 'mon': 1,'tuesday': 2, 'tues':2, 'tue':2, 'wednesday': 3, 'wed': 3,\n    'thursday': 4, 'thurs':4, 'thur': 4, 'thu': 4,'friday': 5, 'fri': 5,'saturday': 6, 'sat': 6};\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(?:(?:\\\\,|\\\\(|\\\\（)\\\\s*)?' +\n    '(?:on\\\\s*?)?' +\n    '(?:(this|last|past|next)\\\\s*)?' +\n    '(' + Object.keys(DAYS_OFFSET).join('|') + ')' +\n    '(?:\\\\s*(?:\\\\,|\\\\)|\\\\）))?' +\n    '(?:\\\\s*(this|last|past|next)\\\\s*week)?' +\n    '(?=\\\\W|$)', 'i');\n\nvar PREFIX_GROUP = 2;\nvar WEEKDAY_GROUP = 3;\nvar POSTFIX_GROUP = 4;\n\n\nexports.updateParsedComponent = function updateParsedComponent(result, ref, offset, modifier) {\n\n    var startMoment = dayjs(ref);\n    var startMomentFixed = false;\n    var refOffset = startMoment.day();\n\n    if(modifier == 'last' || modifier == 'past') {\n        startMoment =startMoment.day(offset - 7);\n        startMomentFixed = true;\n    } else if(modifier == 'next') {\n        startMoment = startMoment.day(offset + 7);\n        startMomentFixed = true;\n    } else if(modifier == 'this') {\n        startMoment = startMoment.day(offset);\n    } else {\n        if (Math.abs(offset - 7 - refOffset) < Math.abs(offset - refOffset)) {\n            startMoment = startMoment.day(offset - 7);\n        } else if (Math.abs(offset + 7 - refOffset) < Math.abs(offset - refOffset)) {\n            startMoment = startMoment.day(offset + 7);\n        } else {\n            startMoment = startMoment.day(offset);\n        }\n    }\n\n    result.start.assign('weekday', offset);\n    if (startMomentFixed) {\n        result.start.assign('day', startMoment.date());\n        result.start.assign('month', startMoment.month() + 1);\n        result.start.assign('year', startMoment.year());\n    } else {\n        result.start.imply('day', startMoment.date());\n        result.start.imply('month', startMoment.month() + 1);\n        result.start.imply('year', startMoment.year());\n    }\n\n    return result;\n};\n\n\nexports.Parser = function ENWeekdayParser() {\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; };\n\n    this.extract = function(text, ref, match, opt){\n        var index = match.index + match[1].length;\n        var text = match[0].substr(match[1].length, match[0].length - match[1].length);\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref\n        });\n\n        var dayOfWeek = match[WEEKDAY_GROUP].toLowerCase();\n        var offset = DAYS_OFFSET[dayOfWeek];\n        if(offset === undefined) {\n            return null;\n        }\n\n        var prefix = match[PREFIX_GROUP];\n        var postfix = match[POSTFIX_GROUP];\n        var norm = prefix || postfix;\n        norm = norm || '';\n        norm = norm.toLowerCase();\n\n        exports.updateParsedComponent(result, ref, offset, norm);\n        result.tags['ENWeekdayParser'] = true;\n\n        return result;\n    }\n};\n","var NUMBER ={\n  '零':0,\n  '一':1,\n  '二':2,\n  '兩':2,\n  '三':3,\n  '四':4,\n  '五':5,\n  '六':6,\n  '七':7,\n  '八':8,\n  '九':9,\n  '十':10,\n  '廿':20,\n  '卅':30,\n};\n\nvar WEEKDAY_OFFSET ={\n  '天':0,\n  '日':0,\n  '一':1,\n  '二':2,\n  '三':3,\n  '四':4,\n  '五':5,\n  '六':6,\n};\n\nexports.NUMBER = NUMBER;\nexports.WEEKDAY_OFFSET = WEEKDAY_OFFSET;\n\nexports.zhStringToNumber=function(text){\n  var number = 0;\n  for(var i=0; i<text.length ;i++){\n    var char = text[i];\n    if(char === '十'){\n      number = number=== 0 ? NUMBER[char] : (number * NUMBER[char]);\n    }else{\n      number += NUMBER[char];\n    }\n  }\n  return number;\n};\n\nexports.zhStringToYear=function(text){\n  var string = '';\n  for(var i=0; i<text.length ;i++){\n    var char = text[i];\n    string = string + NUMBER[char];\n  }\n  return parseInt(string);\n};\n","exports.WEEKDAY_OFFSET = { \n    'sonntag': 0, \n    'so': 0, \n    'montag': 1, \n    'mo': 1,\n    'dienstag': 2, \n    'di':2, \n    'mittwoch': 3, \n    'mi': 3, \n    'donnerstag': 4, \n    'do': 4, \n    'freitag': 5, \n    'fr': 5,\n    'samstag': 6, \n    'sa': 6\n};\n    \nexports.MONTH_OFFSET = { \n    'januar': 1,\n    'jan': 1,\n    'jan.': 1,\n    'februar': 2,\n    'feb': 2,\n    'feb.': 2,\n    'märz': 3,\n    'maerz': 3,\n    'mär': 3,\n    'mär.': 3,\n    'mrz': 3,\n    'mrz.': 3,\n    'april': 4,\n    'apr': 4,\n    'apr.': 4,\n    'mai': 5,\n    'juni': 6,\n    'jun': 6,\n    'jun.': 6,\n    'juli': 7,\n    'jul': 7,\n    'jul.': 7,\n    'august': 8,\n    'aug': 8,\n    'aug.': 8,\n    'september': 9,\n    'sep': 9,\n    'sep.': 9,\n    'sept': 9,\n    'sept.': 9,\n    'oktober': 10,\n    'okt': 10,\n    'okt.': 10,\n    'november': 11,\n    'nov': 11,\n    'nov.': 11,\n    'dezember': 12,\n    'dez': 12,\n    'dez.': 12\n};\n\nexports.INTEGER_WORDS_PATTERN = '(?:eins|zwei|drei|vier|fünf|fuenf|sechs|sieben|acht|neun|zehn|elf|zwölf|zwoelf)';\nexports.INTEGER_WORDS = {\n    'eins' : 1,\n    'zwei' : 2,\n    'drei' : 3,\n    'vier' : 4,\n    'fünf' : 5,\n    'fuenf': 5,\n    'sechs' : 6,\n    'sieben' : 7,\n    'acht' : 8,\n    'neun' : 9,\n    'zehn' : 10,\n    'elf' : 11,\n    'zwölf' : 12,\n    'zwoelf' : 12\n};\n","/*\n  \n*/\nvar Refiner = require('../refiner').Refiner;\n\nexports.Refiner = function ENMergeDateRangeRefiner() {\n    Refiner.call(this);\n\n    this.pattern = function () { return /^\\s*(to|\\-)\\s*$/i };\n\n    this.refine = function(text, results, opt) {\n\n        if (results.length < 2) return results;\n        \n        var mergedResult = [];\n        var currResult = null;\n        var prevResult = null;\n        \n        for (var i=1; i<results.length; i++){\n            \n            currResult = results[i];\n            prevResult = results[i-1];\n            \n            if (!prevResult.end && !currResult.end \n                && this.isAbleToMerge(text, prevResult, currResult)) {\n              \n                prevResult = this.mergeResult(text, prevResult, currResult);\n                currResult = null;\n                i += 1;\n            }\n            \n            mergedResult.push(prevResult);\n        }\n        \n        if (currResult != null) {\n            mergedResult.push(currResult);\n        }\n\n\n        return mergedResult;\n    };\n\n    this.isAbleToMerge = function(text, result1, result2) {\n        var begin = result1.index + result1.text.length;\n        var end   = result2.index;\n        var textBetween = text.substring(begin,end);\n\n        return textBetween.match(this.pattern());\n    };\n\n    this.mergeResult = function(text, fromResult, toResult) {\n\n        if (!fromResult.isOnlyWeekday() && !toResult.isOnlyWeekday()) {\n            \n            var timeKeys = {'hour': true, 'minute': true, 'second': true};\n\n            for (var key in toResult.start.knownValues) {\n                if (!fromResult.start.isCertain(key)) {\n                    fromResult.start.assign(key, toResult.start.get(key));\n                }\n            }\n\n            for (var key in fromResult.start.knownValues) {\n                if (!toResult.start.isCertain(key)) {\n                    toResult.start.assign(key, fromResult.start.get(key));\n                }\n            }\n        }\n\n        if (fromResult.start.date().getTime() > toResult.start.date().getTime()) {\n            \n            var fromMoment = fromResult.start.dayjs();\n            var toMoment = toResult.start.dayjs();\n\n            if (fromResult.isOnlyWeekday() && fromMoment.add(-7, 'days').isBefore(toMoment)) {\n                fromMoment = fromMoment.add(-7, 'days');\n                fromResult.start.imply('day', fromMoment.date());\n                fromResult.start.imply('month', fromMoment.month() + 1);\n                fromResult.start.imply('year', fromMoment.year());\n            } else if (toResult.isOnlyWeekday() && toMoment.add(7, 'days').isAfter(fromMoment)) {\n                toMoment = toMoment.add(7, 'days');\n                toResult.start.imply('day', toMoment.date());\n                toResult.start.imply('month', toMoment.month() + 1);\n                toResult.start.imply('year', toMoment.year());\n            } else {\n                var tmp = toResult;\n                toResult = fromResult;\n                fromResult = tmp;\n            }\n        }\n        \n        fromResult.end = toResult.start;\n\n        \n\n        for (var tag in toResult.tags) {\n            fromResult.tags[tag] = true;\n        }\n\n            \n        var startIndex = Math.min(fromResult.index, toResult.index);\n        var endIndex = Math.max(\n            fromResult.index + fromResult.text.length, \n            toResult.index + toResult.text.length);\n            \n        fromResult.index = startIndex;\n        fromResult.text  = text.substring(startIndex, endIndex);\n        fromResult.tags[this.constructor.name] = true;\n        return fromResult;\n    }\n};\n\n","exports.WEEKDAY_OFFSET = { \r\n    'dimanche': 0, \r\n    'dim': 0, \r\n    'lundi': 1, \r\n    'lun': 1,\r\n    'mardi': 2, \r\n    'mar':2, \r\n    'mercredi': 3, \r\n    'mer': 3, \r\n    'jeudi': 4, \r\n    'jeu': 4, \r\n    'vendredi': 5, \r\n    'ven': 5,\r\n    'samedi': 6, \r\n    'sam': 6\r\n};\r\n    \r\nexports.MONTH_OFFSET = { \r\n    'janvier': 1,\r\n    'jan': 1,\r\n    'jan.': 1,\r\n    'février': 2,\r\n    'fév': 2,\r\n    'fév.': 2,\r\n    'fevrier': 2,\r\n    'fev': 2,\r\n    'fev.': 2,\r\n    'mars': 3,\r\n    'mar': 3,\r\n    'mar.': 3,\r\n    'avril': 4,\r\n    'avr': 4,\r\n    'avr.': 4,\r\n    'mai': 5,\r\n    'juin': 6,\r\n    'jun': 6,\r\n    'juillet': 7,\r\n    'jul': 7,\r\n    'jul.': 7,\r\n    'août': 8,\r\n    'aout': 8,\r\n    'septembre': 9,\r\n    'sep': 9,\r\n    'sep.': 9,\r\n    'sept': 9,\r\n    'sept.': 9,\r\n    'octobre': 10,\r\n    'oct': 10,\r\n    'oct.': 10,\r\n    'novembre': 11,\r\n    'nov': 11,\r\n    'nov.': 11,\r\n    'décembre': 12,\r\n    'decembre': 12,\r\n    'dec': 12,\r\n    'dec.': 12\r\n};\r\n\r\nexports.INTEGER_WORDS_PATTERN = '(?:un|deux|trois|quatre|cinq|six|sept|huit|neuf|dix|onze|douze|treize)';\r\nexports.INTEGER_WORDS = {\r\n    'un' : 1,\r\n    'deux' : 2,\r\n    'trois' : 3,\r\n    'quatre' : 4,\r\n    'cinq' : 5,\r\n    'six' : 6,\r\n    'sept' : 7,\r\n    'huit' : 8,\r\n    'neuf' : 9,\r\n    'dix' : 10,\r\n    'onze' : 11,\r\n    'douze' : 12,\r\n    'treize' : 13,\r\n};\r\n","exports.WEEKDAY_OFFSET = {\n    'zondag': 0,\n    'zo': 0,\n    'zo.': 0,\n    'maandag': 1,\n    'ma': 1,\n    'ma.': 1,\n    'dinsdag': 2,\n    'di':2,\n    'di.':2,\n    'woensdag': 3,\n    'wo': 3,\n    'wo.': 3,\n    'donderdag': 4,\n    'do': 4,\n    'do.': 4,\n    'vrijdag': 5,\n    'vr': 5,\n    'vr.': 5,\n    'zaterdag': 6,\n    'za': 6,\n    'za.': 6\n};\n\nexports.WEEKDAY_PATTERN = '(?:'\n    + Object.keys(exports.WEEKDAY_OFFSET).join('|').replace(/\\./g, '\\\\.')\n    + ')';\n\nexports.MONTH_OFFSET = {\n    'januari': 1,\n    'jan': 1,\n    'jan.': 1,\n    'februari': 2,\n    'feb': 2,\n    'feb.': 2,\n    'maart': 3,\n    'mrt': 3,\n    'mrt.': 3,\n    'april': 4,\n    'apr': 4,\n    'apr.': 4,\n    'mei': 5,\n    'juni': 6,\n    'jun': 6,\n    'jun.': 6,\n    'juli': 7,\n    'jul': 7,\n    'jul.': 7,\n    'augustus': 8,\n    'aug': 8,\n    'aug.': 8,\n    'september': 9,\n    'sep': 9,\n    'sep.': 9,\n    'sept': 9,\n    'sept.': 9,\n    'oktober': 10,\n    'okt': 10,\n    'okt.': 10,\n    'november': 11,\n    'nov': 11,\n    'nov.': 11,\n    'december': 12,\n    'dec': 12,\n    'dec.': 12\n};\n\nexports.MONTH_PATTERN = '(?:'\n    + Object.keys(exports.MONTH_OFFSET).join('|').replace(/\\./g, '\\\\.')\n    + ')';\n\nexports.INTEGER_WORDS = {\n    'een' : 1,\n    'één' : 1,\n    'twee' : 2,\n    'drie' : 3,\n    'vier' : 4,\n    'vijf' : 5,\n    'zes' : 6,\n    'zeven' : 7,\n    'acht' : 8,\n    'negen' : 9,\n    'tien' : 10,\n    'elf' : 11,\n    'twaalf' : 12\n};\nexports.INTEGER_WORDS_PATTERN = '(?:'\n    + Object.keys(exports.INTEGER_WORDS).join('|')\n    +')';\n\nexports.ORDINAL_WORDS = {\n    'eerste' : 1,\n    'tweede': 2,\n    'derde': 3,\n    'vierde': 4,\n    'vijfde': 5,\n    'zesde': 6,\n    'zevende': 7,\n    'achste': 8,\n    'negende': 9,\n    'tiende': 10,\n    'elfde': 11,\n    'twaalfde': 12,\n    'dertiende': 13,\n    'veertiende': 14,\n    'vijftiende': 15,\n    'zestiende': 16,\n    'zeventiende': 17,\n    'achttiende': 18,\n    'negentiende': 19,\n    'twintigste': 20,\n    'eenentwintigste': 21,\n    'tweeëntwintigste': 22,\n    'drieëntwintigste': 23,\n    'vierentwintigste': 24,\n    'vijfentwintigste': 25,\n    'zesentwintigste': 26,\n    'zevenentwintigste': 27,\n    'achtentwintigste': 28,\n    'negenentwintigste': 29,\n    'dertigste': 30,\n    'eenendertigste': 31\n};\nexports.ORDINAL_WORDS_PATTERN = '(?:'\n    + Object.keys(exports.ORDINAL_WORDS).join('|').replace(/ /g, '[ -]')\n    + ')';\n\nvar TIME_UNIT =\n    '(' + exports.INTEGER_WORDS_PATTERN + '|[0-9]+|[0-9]+\\.[0-9]+|en(?:\\\\s*few)?|half)\\\\s*' +\n    '(sec(?:onde?)?|min(?:uten)?s?|(?:uur|uren)?|weken?|dagen?|maanden?|jaren?)\\\\s*';\n\nvar TIME_UNIT_STRICT =\n    '(?:[0-9]+?)\\\\s*' +\n    '(?:seconden?|(?:minuut|minuten)|(?:uur|uren)|(?:dag|dagen))\\\\s*';\n\nvar PATTERN_TIME_UNIT = new RegExp(TIME_UNIT, 'i');\n\nexports.TIME_UNIT_PATTERN = '(?:' + TIME_UNIT + ')+';\nexports.TIME_UNIT_STRICT_PATTERN = '(?:' + TIME_UNIT_STRICT + ')+';\n\nexports.extractDateTimeUnitFragments = function (timeunitText) {\n    var fragments = {};\n    var remainingText = timeunitText;\n    var match = PATTERN_TIME_UNIT.exec(remainingText);\n    while (match) {\n        collectDateTimeFragment(match, fragments);\n        remainingText = remainingText.substring(match[0].length);\n        match = PATTERN_TIME_UNIT.exec(remainingText);\n    }\n    return fragments;\n};\n\nfunction collectDateTimeFragment(match, fragments) {\n    var num = match[1].toLowerCase() ;\n    if (exports.INTEGER_WORDS[num] !== undefined) {\n        num = exports.INTEGER_WORDS[num];\n    } else if (num.match(/half/)) {\n        num = 0.5;\n    } else {\n        num = parseFloat(num);\n    }\n\n    if (match[2].match(/^(?:uur|uren)/i)) {\n        fragments['hour'] = num;\n    } else if (match[2].match(/min/i)) {\n        fragments['minute'] = num;\n    } else if (match[2].match(/sec/i)) {\n        fragments['second'] = num;\n    } else if (match[2].match(/week/i)) {\n        fragments['week'] = num;\n    } else if (match[2].match(/dag/i)) {\n        fragments['d'] = num;\n    } else if (match[2].match(/maand/i)) {\n        fragments['month'] = num;\n    } else if (match[2].match(/jaar/i)) {\n        fragments['year'] = num;\n    }\n\n    return fragments;\n}\n","/*\n    ISO 8601\n    http://www.w3.org/TR/NOTE-datetime\n    - YYYY-MM-DD\n    - YYYY-MM-DDThh:mmTZD\n    - YYYY-MM-DDThh:mm:ssTZD\n    - YYYY-MM-DDThh:mm:ss.sTZD \n    - TZD = (Z or +hh:mm or -hh:mm)\n*/\nconst dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = new RegExp('(\\\\W|^)' \n            + '([0-9]{4})\\\\-([0-9]{1,2})\\\\-([0-9]{1,2})'\n            + '(?:T' //..\n                + '([0-9]{1,2}):([0-9]{1,2})' // hh:mm\n                + '(?::([0-9]{1,2})(?:\\\\.(\\\\d{1,4}))?)?' // :ss.s\n                + '(?:Z|([+-]\\\\d{2}):?(\\\\d{2})?)?' // TZD (Z or ±hh:mm or ±hhmm or ±hh)\n            + ')?'  //..\n            + '(?=\\\\W|$)', 'i');\n\nvar YEAR_NUMBER_GROUP = 2;\nvar MONTH_NUMBER_GROUP = 3;\nvar DATE_NUMBER_GROUP  = 4;\nvar HOUR_NUMBER_GROUP  = 5;\nvar MINUTE_NUMBER_GROUP = 6;\nvar SECOND_NUMBER_GROUP = 7;\nvar MILLISECOND_NUMBER_GROUP = 8;\nvar TZD_HOUR_OFFSET_GROUP = 9;\nvar TZD_MINUTE_OFFSET_GROUP = 10;\n\nexports.Parser = function ENISOFormatParser(){\n    Parser.apply(this, arguments);\n    \n    this.pattern = function() { return PATTERN; }\n    \n    this.extract = function(text, ref, match, opt){ \n        \n        var text = match[0].substr(match[1].length);\n        var index = match.index + match[1].length;\n\n        var result = new ParsedResult({\n            text: text,\n            index: index,\n            ref: ref,\n        })\n        \n        result.start.assign('year', parseInt(match[YEAR_NUMBER_GROUP]));\n        result.start.assign('month', parseInt(match[MONTH_NUMBER_GROUP]));\n        result.start.assign('day', parseInt(match[DATE_NUMBER_GROUP]));\n\n        if (dayjs(result.start.get('month')) > 12 || dayjs(result.start.get('month')) < 1 ||\n            dayjs(result.start.get('day')) > 31 || dayjs(result.start.get('day')) < 1) {\n            return null;\n        }\n\n        if (match[HOUR_NUMBER_GROUP] != null) {\n            \n            result.start.assign('hour',\n                    parseInt(match[HOUR_NUMBER_GROUP]));\n            result.start.assign('minute',\n                    parseInt(match[MINUTE_NUMBER_GROUP]));\n\n            if (match[SECOND_NUMBER_GROUP] != null) {\n\n                result.start.assign('second',\n                        parseInt(match[SECOND_NUMBER_GROUP]));\n            }\n\n            if (match[MILLISECOND_NUMBER_GROUP] != null) {\n\n                result.start.assign('millisecond',\n                        parseInt(match[MILLISECOND_NUMBER_GROUP]));\n            }\n\n            if (match[TZD_HOUR_OFFSET_GROUP] == null) {\n\n                result.start.assign('timezoneOffset', 0);\n            } else {\n\n                var minuteOffset = 0;\n                var hourOffset = parseInt(match[TZD_HOUR_OFFSET_GROUP]);\n                if (match[TZD_MINUTE_OFFSET_GROUP] != null)\n                    minuteOffset = parseInt(match[TZD_MINUTE_OFFSET_GROUP]);\n\n                var offset = hourOffset * 60;\n                if (offset < 0) {\n                    offset -= minuteOffset;\n                } else {\n                    offset += minuteOffset;\n                }\n\n                result.start.assign('timezoneOffset', offset);\n            }\n        }\n        \n        result.tags['ENISOFormatParser'] = true;\n        return result;\n    };\n\n}\n\n","const dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar util  = require('../../utils/EN');\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(within|in)\\\\s*' +\n    '('+ util.INTEGER_WORDS_PATTERN + '|[0-9]+|an?(?:\\\\s*few)?|half(?:\\\\s*an?)?)\\\\s*' +\n    '(seconds?|min(?:ute)?s?|hours?|days?|weeks?|months?|years?)\\\\s*' +\n    '(?=\\\\W|$)', 'i'\n);\n\nvar STRICT_PATTERN = new RegExp('(\\\\W|^)' +\n    '(within|in)\\\\s*' +\n    '('+ util.INTEGER_WORDS_PATTERN + '|[0-9]+|an?)\\\\s*' +\n    '(seconds?|minutes?|hours?|days?)\\\\s*' +\n    '(?=\\\\W|$)', 'i'\n);\n\nexports.Parser = function ENDeadlineFormatParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return this.isStrictMode()? STRICT_PATTERN : PATTERN;\n    };\n\n    this.extract = function(text, ref, match, opt){\n\n        var index = match.index + match[1].length;\n        var text  = match[0];\n        text  = match[0].substr(match[1].length, match[0].length - match[1].length);\n\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref\n        });\n\n        var num = match[3].toLowerCase();\n        if (util.INTEGER_WORDS[num] !== undefined) {\n            num = util.INTEGER_WORDS[num];\n        } else if (num === 'a' || num === 'an'){\n            num = 1;\n        } else if (num.match(/few/i)){\n            num = 3;\n        } else if (num.match(/half/i)) {\n            num = 0.5;\n        } else {\n            num = parseInt(num);\n        }\n\n        var date = dayjs(ref);\n        if (match[4].match(/day|week|month|year/i)) {\n\n            if (match[4].match(/day/i)) {\n                date = date.add(num, 'd');\n            } else if (match[4].match(/week/i)) {\n                date = date.add(num * 7, 'd');\n            } else if (match[4].match(/month/i)) {\n                date = date.add(num, 'month');\n            } else if (match[4].match(/year/i)) {\n                date = date.add(num, 'year');\n            }\n\n            result.start.imply('year', date.year());\n            result.start.imply('month', date.month() + 1);\n            result.start.imply('day', date.date());\n            return result;\n        }\n\n        if (match[4].match(/hour/i)) {\n\n            date = date.add(num, 'hour');\n\n        } else if (match[4].match(/min/i)) {\n\n            date = date.add(num, 'minute');\n\n        } else if (match[4].match(/second/i)) {\n\n            date = date.add(num, 'second');\n        }\n\n        result.start.imply('year', date.year());\n        result.start.imply('month', date.month() + 1);\n        result.start.imply('day', date.date());\n        result.start.imply('hour', date.hour());\n        result.start.imply('minute', date.minute());\n        result.start.imply('second', date.second());\n        result.tags['ENDeadlineFormatParser'] = true;\n        return result;\n    };\n};\n","const dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar util  = require('../../utils/EN');\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(this|next|last|past)\\\\s*' +\n    '('+ util.INTEGER_WORDS_PATTERN + '|[0-9]+|few|half(?:\\\\s*an?)?)?\\\\s*' +\n    '(seconds?|min(?:ute)?s?|hours?|days?|weeks?|months?|years?)(?=\\\\s*)' +\n    '(?=\\\\W|$)', 'i'\n);\n\nvar MODIFIER_WORD_GROUP = 2;\nvar MULTIPLIER_WORD_GROUP = 3;\nvar RELATIVE_WORD_GROUP = 4;\n\nexports.Parser = function ENRelativeDateFormatParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; };\n\n    this.extract = function(text, ref, match, opt){\n\n        var index = match.index + match[1].length;\n        var modifier = match[MODIFIER_WORD_GROUP].toLowerCase().match(/^next/) ? 1 : -1;\n        var text  = match[0];\n        text  = match[0].substr(match[1].length, match[0].length - match[1].length);\n\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref\n        });\n        result.tags['ENRelativeDateFormatParser'] = true;\n\n        var num = match[MULTIPLIER_WORD_GROUP] === undefined ? '' : match[3].toLowerCase();\n        if (util.INTEGER_WORDS[num] !== undefined) {\n            num = util.INTEGER_WORDS[num];\n        } else if (num === ''){\n            num = 1;\n        } else if (num.match(/few/i)){\n            num = 3;\n        } else if (num.match(/half/i)) {\n            num = 0.5;\n        } else {\n            num = parseInt(num);\n        }\n\n        num *= modifier;\n        var date = dayjs(ref);\n\n        if (match[MODIFIER_WORD_GROUP].toLowerCase().match(/^this/)) {\n\n            if (match[MULTIPLIER_WORD_GROUP]) {\n                return null;\n            }\n\n            if (match[RELATIVE_WORD_GROUP].match(/day|week|month|year/i)) {\n                \n                // This week\n                if (match[RELATIVE_WORD_GROUP].match(/week/i)) {\n                    date = date.add(-date.get('d'), 'd');\n                    result.start.imply('day', date.date());\n                    result.start.imply('month', date.month() + 1);\n                    result.start.imply('year', date.year());\n                } \n                \n                // This month\n                else if (match[RELATIVE_WORD_GROUP].match(/month/i)) {\n                    date = date.add(-date.date() + 1, 'd');\n                    result.start.imply('day', date.date());\n                    result.start.assign('year', date.year());\n                    result.start.assign('month', date.month() + 1);\n                } \n\n                // This year\n                else if (match[RELATIVE_WORD_GROUP].match(/year/i)) {\n                    date = date.add(-date.date() + 1, 'd');\n                    date = date.add(-date.month(), 'month');\n\n                    result.start.imply('day', date.date());\n                    result.start.imply('month', date.month() + 1);\n                    result.start.assign('year', date.year());\n                } \n\n                return result;\n            }\n        }\n        \n        if (match[RELATIVE_WORD_GROUP].match(/day|week|month|year/i)) {\n\n            if (match[RELATIVE_WORD_GROUP].match(/day/i)) {\n                date = date.add(num, 'd');\n                result.start.assign('year', date.year());\n                result.start.assign('month', date.month() + 1);\n                result.start.assign('day', date.date());\n            } else if (match[RELATIVE_WORD_GROUP].match(/week/i)) {\n                date = date.add(num * 7, 'd');\n                // We don't know the exact date for next/last week so we imply\n                // them\n                result.start.imply('day', date.date());\n                result.start.imply('month', date.month() + 1);\n                result.start.imply('year', date.year());\n            } else if (match[RELATIVE_WORD_GROUP].match(/month/i)) {\n                date = date.add(num, 'month');\n                // We don't know the exact day for next/last month\n                result.start.imply('day', date.date());\n                result.start.assign('year', date.year());\n                result.start.assign('month', date.month() + 1);\n            } else if (match[RELATIVE_WORD_GROUP].match(/year/i)) {\n                date = date.add(num, 'year');\n                // We don't know the exact day for month on next/last year\n                result.start.imply('day', date.date());\n                result.start.imply('month', date.month() + 1);\n                result.start.assign('year', date.year());\n            }\n\n            return result;\n        }\n\n        if (match[RELATIVE_WORD_GROUP].match(/hour/i)) {\n\n            date = date.add(num, 'hour');\n            result.start.imply('minute', date.minute());\n            result.start.imply('second', date.second());\n\n        } else if (match[RELATIVE_WORD_GROUP].match(/min/i)) {\n\n            date = date.add(num, 'minute');\n            result.start.assign('minute', date.minute());\n            result.start.imply('second', date.second());\n\n        } else if (match[RELATIVE_WORD_GROUP].match(/second/i)) {\n\n            date = date.add(num, 'second');\n            result.start.assign('second', date.second());\n            result.start.assign('minute', date.minute());\n        }\n\n        result.start.assign('hour', date.hour());\n        result.start.assign('year', date.year());\n        result.start.assign('month', date.month() + 1);\n        result.start.assign('day', date.date());\n        return result;\n    };\n};\n","const parser = require('../parser');\nvar ParsedResult = require('../../result').ParsedResult;\nvar util  = require('../../utils/EN');\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n        '(?:on\\\\s*?)?' +\n        '(?:(Sunday|Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sun|Mon|Tue|Wed|Thu|Fri|Sat)\\\\s*,?\\\\s*)?' +\n        '(([0-9]{1,2})(?:st|nd|rd|th)?|' + util.ORDINAL_WORDS_PATTERN + ')' +\n        '(?:\\\\s*' +\n            '(?:to|\\\\-|\\\\–|until|through|till|\\\\s)\\\\s*' +\n            '(([0-9]{1,2})(?:st|nd|rd|th)?|' + util.ORDINAL_WORDS_PATTERN + ')' +\n        ')?' + \n        '(?:-|\\/|\\\\s*(?:of)?\\\\s*)' +\n        '(' + util.MONTH_PATTERN + ')' +\n        '(?:' +\n            '(?:-|\\/|,?\\\\s*)' +\n            '((?:' + \n                '[1-9][0-9]{0,3}\\\\s*(?:BE|AD|BC)|' +\n                '[1-2][0-9]{3}|' +\n                '[5-9][0-9]' +\n            ')(?![^\\\\s]\\\\d))' +\n        ')?' +\n        '(?=\\\\W|$)', 'i'\n    );\n\nvar WEEKDAY_GROUP = 2;\nvar DATE_GROUP = 3;\nvar DATE_NUM_GROUP = 4;\nvar DATE_TO_GROUP = 5;\nvar DATE_TO_NUM_GROUP = 6;\nvar MONTH_NAME_GROUP = 7;\nvar YEAR_GROUP = 8;\n\nexports.Parser = function ENMonthNameLittleEndianParser(){\n    parser.Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n\n        var result = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index: match.index + match[1].length,\n            ref: ref\n        });\n\n        var month = match[MONTH_NAME_GROUP];\n        month = util.MONTH_OFFSET[month.toLowerCase()];\n\n        var day = match[DATE_NUM_GROUP] ?\n            parseInt(match[DATE_NUM_GROUP]):\n            util.ORDINAL_WORDS[match[DATE_GROUP].trim().replace('-', ' ').toLowerCase()];\n\n        var year = null;\n        if (match[YEAR_GROUP]) {\n            year = match[YEAR_GROUP];\n            \n            if (/BE/i.test(year)) {\n                // Buddhist Era\n                year = year.replace(/BE/i, '');\n                year = parseInt(year) - 543;\n            } else if (/BC/i.test(year)){\n                // Before Christ\n                year = year.replace(/BC/i, '');\n                year = -parseInt(year);\n            } else if (/AD/i.test(year)){\n                year = year.replace(/AD/i, '');\n                year = parseInt(year);\n            } else {\n                year = parseInt(year);\n                if (year < 100){\n                    if (year > 50) {\n                        year = year + 1900;\n                    } else {\n                        year = year + 2000;\n                    }\n                }\n            }\n        }\n\n        if(year){\n            result.start.assign('day', day);\n            result.start.assign('month', month);\n            result.start.assign('year', year);\n        } else {\n            year = parser.findYearClosestToRef(ref, day, month);\n            result.start.assign('day', day);\n            result.start.assign('month', month);\n            result.start.imply('year', year);\n        }\n\n        // Weekday component\n        if (match[WEEKDAY_GROUP]) {\n            var weekday = match[WEEKDAY_GROUP];\n            weekday = util.WEEKDAY_OFFSET[weekday.toLowerCase()]\n            result.start.assign('weekday', weekday);\n        }\n\n        // Text can be 'range' value. Such as '12 - 13 January 2012'\n        if (match[DATE_TO_GROUP]) {\n            var endDate = match[DATE_TO_NUM_GROUP] ?\n                parseInt(match[DATE_TO_NUM_GROUP]):\n                util.ORDINAL_WORDS[match[DATE_TO_GROUP].trim().replace('-', ' ').toLowerCase()];\n\n            result.end = result.start.clone();\n            result.end.assign('day', endDate);\n        }\n\n        result.tags['ENMonthNameLittleEndianParser'] = true;\n        return result;\n    };\n};\n","/*\n\n    The parser for parsing US's date format that begin with month's name.\n\n    EX.\n        - January 13\n        - January 13, 2012\n        - January 13 - 15, 2012\n        - Tuesday, January 13, 2012\n\n    Watch out for:\n        - January 12:00\n        - January 12.44\n        - January 1222344\n*/\nvar parser = require('../parser');\nvar ParsedResult = require('../../result').ParsedResult;\nvar util  = require('../../utils/EN');\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(?:' +\n        '(?:on\\\\s*?)?' +\n        '(Sunday|Monday|Tuesday|Wednesday|Thursday|Friday|Saturday|Sun\\\\.?|Mon\\\\.?|Tue\\\\.?|Wed\\\\.?|Thu\\\\.?|Fri\\\\.?|Sat\\\\.?)' +\n    '\\\\s*,?\\\\s*)?' +\n    '(' + util.MONTH_PATTERN + ')' +\n    '(?:-|\\/|\\\\s*,?\\\\s*)' +\n    '(([0-9]{1,2})(?:st|nd|rd|th)?|' + util.ORDINAL_WORDS_PATTERN +')(?!\\\\s*(?:am|pm))\\\\s*' + '' + \n    '(?:' +\n        '(?:to|\\\\-)\\\\s*' +\n        '(([0-9]{1,2})(?:st|nd|rd|th)?| ' + util.ORDINAL_WORDS_PATTERN + ')\\\\s*' +\n    ')?' +\n    '(?:' +\n        '(?:-|\\/|\\\\s*,?\\\\s*)' +\n        '(?:([0-9]{4})\\\\s*(BE|AD|BC)?|([0-9]{1,4})\\\\s*(AD|BC))\\\\s*' +\n    ')?' +\n    '(?=\\\\W|$)(?!\\\\:\\\\d)', 'i');\n\nvar WEEKDAY_GROUP = 2;\nvar MONTH_NAME_GROUP = 3;\nvar DATE_GROUP = 4;\nvar DATE_NUM_GROUP = 5;\nvar DATE_TO_GROUP = 6;\nvar DATE_TO_NUM_GROUP = 7;\nvar YEAR_GROUP = 8;\nvar YEAR_BE_GROUP = 9;\nvar YEAR_GROUP2 = 10;\nvar YEAR_BE_GROUP2 = 11;\n\nexports.Parser = function ENMonthNameMiddleEndianParser(){\n    parser.Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n\n        var result = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index: match.index + match[1].length,\n            ref: ref,\n        });\n\n\n        var month = match[MONTH_NAME_GROUP];\n        month = util.MONTH_OFFSET[month.toLowerCase()];\n        var day = match[DATE_NUM_GROUP] ?\n            parseInt(match[DATE_NUM_GROUP]) :\n            util.ORDINAL_WORDS[match[DATE_GROUP].trim().replace('-', ' ').toLowerCase()];\n\n        var year = null;\n        if (match[YEAR_GROUP] || match[YEAR_GROUP2]) {\n            year = match[YEAR_GROUP] || match[YEAR_GROUP2];\n            year = parseInt(year);\n\n            var yearBE = match[YEAR_BE_GROUP] || match[YEAR_BE_GROUP2];\n            if (yearBE) {\n                if (/BE/i.test(yearBE)) {\n                    // Buddhist Era\n                    year = year - 543;\n                } else if (/BC/i.test(yearBE)) {\n                    // Before Christ\n                    year = -year;\n                }\n            } else if (year < 100){\n\n                year = year + 2000;\n            }\n        }\n\n        if(year){\n            result.start.assign('day', day);\n            result.start.assign('month', month);\n            result.start.assign('year', year);\n        } else {\n            year = parser.findYearClosestToRef(ref, day, month)\n            result.start.assign('day', day);\n            result.start.assign('month', month);\n            result.start.imply('year', year);\n        }\n\n        // Weekday component\n        if (match[WEEKDAY_GROUP]) {\n            var weekday = match[WEEKDAY_GROUP];\n            weekday = util.WEEKDAY_OFFSET[weekday.toLowerCase()]\n            result.start.assign('weekday', weekday);\n        }\n\n        // Text can be 'range' value. Such as 'January 12 - 13, 2012'\n        if (match[DATE_TO_GROUP]) {\n            var endDate = match[DATE_TO_NUM_GROUP] ?\n                endDate = parseInt(match[DATE_TO_NUM_GROUP]) :\n                util.ORDINAL_WORDS[match[DATE_TO_GROUP].replace('-', ' ').trim().toLowerCase()];\n\n            result.end = result.start.clone();\n            result.end.assign('day', endDate);\n        }\n\n        result.tags['ENMonthNameMiddleEndianParser'] = true;\n        return result;\n    }\n};","/*\n    \n    The parser for parsing month name and year.\n    \n    EX. \n        - January\n        - January 2012\n        - January, 2012\n*/\nvar parser = require('../parser');\nvar ParsedResult = require('../../result').ParsedResult;\nvar util  = require('../../utils/EN');\n\nvar PATTERN = new RegExp('(^|\\\\D\\\\s+|[^\\\\w\\\\s])' +\n    '('+ util.MONTH_PATTERN +')' + \n    '\\\\s*' +\n    '(?:' +\n        '[,-]?\\\\s*([0-9]{4})(\\\\s*BE|AD|BC)?' +\n    ')?' +\n    '(?=[^\\\\s\\\\w]|\\\\s+[^0-9]|\\\\s+$|$)', 'i');\n\nvar MONTH_NAME_GROUP = 2;\nvar YEAR_GROUP = 3;\nvar YEAR_BE_GROUP = 4;\n\nexports.Parser = function ENMonthNameParser(){\n    parser.Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n    \n    this.extract = function(text, ref, match, opt){\n        const result = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index: match.index + match[1].length,\n            ref: ref,\n        });\n\n        const day = 1;\n        const monthName = match[MONTH_NAME_GROUP];\n        const month = util.MONTH_OFFSET[monthName.toLowerCase()];\n\n        var year = null;\n        if (match[YEAR_GROUP]) {\n            year = match[YEAR_GROUP];\n            year = parseInt(year);\n\n            if(match[YEAR_BE_GROUP]){\n                if (match[YEAR_BE_GROUP].match(/BE/)) {\n                    // Buddhist Era\n                    year = year - 543;\n                } else if (match[YEAR_BE_GROUP].match(/BC/)) {\n                    // Before Christ\n                    year = -year;\n                }\n\n            } else if (year < 100){ \n\n                year = year + 2000;\n            }\n        }\n\n        if(year){\n            result.start.imply('day', day);\n            result.start.assign('month', month);\n            result.start.assign('year', year);\n        } else {\n            year = parser.findYearClosestToRef(ref, day, month)\n            result.start.imply('day', day);\n            result.start.assign('month', month);\n            result.start.imply('year', year);\n        }\n\n        if (result.text.match(/^\\w{3}$/)) {\n            return false;\n        }\n\n        result.tags['ENMonthNameParser'] = true;\n        return result;\n    }\n}\n","/*\n    Date format with slash \"/\" (also \"-\" and \".\") between numbers\n    - Tuesday 11/3/2015 \n    - 11/3/2015\n    - 11/3\n\n    By default the paser us \"middle-endien\" format (US English),\n    then fallback to little-endian if failed.\n    - 11/3/2015 = November 3rd, 2015\n    - 23/4/2015 = April 23th, 2015\n\n    If \"littleEndian\" config is set, the parser will try the little-endian first. \n    - 11/3/2015 = March 11th, 2015\n*/\nconst dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(?:' +\n        '(?:on\\\\s*?)?' +\n        '((?:sun|mon|tues?|wed(?:nes)?|thu(?:rs?)?|fri|sat(?:ur)?)(?:day)?)' +\n        '\\\\s*\\\\,?\\\\s*' +\n    ')?' +\n    '([0-3]{0,1}[0-9]{1})[\\\\/\\\\.\\\\-]([0-3]{0,1}[0-9]{1})' +\n    '(?:' +\n        '[\\\\/\\\\.\\\\-]' +\n        '([0-9]{4}\\s*\\,?\\s*|[0-9]{2}\\s*\\,?\\s*)' +\n    ')?' +\n    '(\\\\W|$)', 'i');\n\nvar DAYS_OFFSET = { 'sunday': 0, 'sun': 0, 'monday': 1, 'mon': 1,'tuesday': 2, 'wednesday': 3, 'wed': 3,\n    'thursday': 4, 'thur': 4,'friday': 5, 'fri': 5,'saturday': 6, 'sat': 6,}\n\n\nvar OPENNING_GROUP = 1;\nvar ENDING_GROUP = 6;\n\nvar WEEKDAY_GROUP = 2;\n\n\nvar FIRST_NUMBERS_GROUP = 3;\nvar SECOND_NUMBERS_GROUP = 4;\n\nvar YEAR_GROUP = 5;\n\nexports.Parser = function ENSlashDateFormatParser(config) {\n    Parser.apply(this, arguments);\n    config = config || {};\n    var littleEndian  = config.littleEndian;\n    var MONTH_GROUP = littleEndian ? SECOND_NUMBERS_GROUP : FIRST_NUMBERS_GROUP;\n    var DAY_GROUP = littleEndian ? FIRST_NUMBERS_GROUP : SECOND_NUMBERS_GROUP;\n\n    this.pattern = function () { return PATTERN; };\n    this.extract = function(text, ref, match, opt){\n\n        if(match[OPENNING_GROUP] == '/' || match[ENDING_GROUP] == '/') {\n            // Long skip, if there is some overlapping like:\n            // XX[/YY/ZZ]\n            // [XX/YY/]ZZ\n            match.index += match[0].length\n            return;\n        }\n\n        var index = match.index + match[OPENNING_GROUP].length;\n        var text = match[0].substr(match[OPENNING_GROUP].length, match[0].length - match[ENDING_GROUP].length);\n\n\n        var result = new ParsedResult({\n            text: text,\n            index: index,\n            ref: ref,\n        });\n\n        if(text.match(/^\\d\\.\\d$/)) return;\n        if(text.match(/^\\d\\.\\d{1,2}\\.\\d{1,2}$/)) return;\n\n        // MM/dd -> OK\n        // MM.dd -> NG\n        if(!match[YEAR_GROUP] && match[0].indexOf('/') < 0) return;\n\n        var date = null;\n        var year = match[YEAR_GROUP] || dayjs(ref).year() + '';\n        var month = match[MONTH_GROUP];\n        var day   = match[DAY_GROUP];\n\n        month = parseInt(month);\n        day  = parseInt(day);\n        year = parseInt(year);\n\n        if(month < 1 || month > 12) {\n            if(month > 12) {\n                // dd/mm/yyyy date format if day looks like a month, and month\n                // looks like a day.\n                if (day >= 1 && day <= 12 && month >= 13 && month <= 31) {\n                    // unambiguous\n                    var tday = month;\n                    month = day;\n                    day = tday;\n                }\n                else {\n                    // both month and day are <= 12\n                    return null;\n                }\n            }\n        }\n        if(day < 1 || day > 31) return null;\n\n        if(year < 100){\n            if (year > 50) {\n                year = year + 1900;\n            } else {\n                year = year + 2000;\n            }\n        }\n\n        result.start.assign('day', day);\n        result.start.assign('month', month);\n        if (match[YEAR_GROUP]) {\n            result.start.assign('year', year);\n        } else {\n            result.start.imply('year', year);\n        }\n\n        //Day of week\n        if(match[WEEKDAY_GROUP]) {\n            result.start.assign('weekday', DAYS_OFFSET[match[WEEKDAY_GROUP].toLowerCase()]);\n        }\n\n        result.tags['ENSlashDateFormatParser'] = true;\n        return result;\n    };\n};\n","/*\n    Date format with slash \"/\" between numbers like ENSlashDateFormatParser,\n    but this parser expect year before month and date. \n    - YYYY/MM/DD\n    - YYYY-MM-DD\n    - YYYY.MM.DD\n*/\nconst dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar util  = require('../../utils/EN');\n\nvar PATTERN = new RegExp('(\\\\W|^)' \n            + '([0-9]{4})[\\\\-\\\\.\\\\/]'\n            + '((?:' + util.MONTH_PATTERN + '|[0-9]{1,2}))[\\\\-\\\\.\\\\/]'\n            + '([0-9]{1,2})'\n            + '(?=\\\\W|$)', 'i');\n\nvar YEAR_NUMBER_GROUP = 2;\nvar MONTH_NUMBER_GROUP = 3;\nvar DATE_NUMBER_GROUP  = 4;\n\nexports.Parser = function ENSlashDateFormatStartWithYearParser(){\n    Parser.apply(this, arguments);\n    \n    this.pattern = function() { return PATTERN; }\n    \n    this.extract = function(text, ref, match, opt){\n\n        var text = match[0].substr(match[1].length);\n        var index = match.index + match[1].length;\n\n        var result = new ParsedResult({\n            text: text,\n            index: index,\n            ref: ref,\n        })\n        \n        var month = match[MONTH_NUMBER_GROUP].toLowerCase();\n        month = util.MONTH_OFFSET[month] | month;\n\n        result.start.assign('year', parseInt(match[YEAR_NUMBER_GROUP]));\n        result.start.assign('month', parseInt(month));\n        result.start.assign('day', parseInt(match[DATE_NUMBER_GROUP]));\n\n        if (\n            dayjs(result.start.get('month')) > 12 || dayjs(result.start.get('month')) < 1 || \n            dayjs(result.start.get('day')) > 31 || dayjs(result.start.get('day')) < 1) {\n            return null;\n        }\n        \n        result.tags['ENDateFormatParser'] = true;\n        return result;\n    };\n}\n","/*\n    Month/Year date format with slash \"/\" (also \"-\" and \".\") between numbers \n    - 11/05\n    - 06/2005\n*/\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = new RegExp('(^|[^\\\\d/]\\\\s+|[^\\\\w\\\\s])' +\n    '([0-9]|0[1-9]|1[012])/([0-9]{4})' + \n    '(?=[^\\\\d/]|$)', 'i');\n\nvar OPENNING_GROUP = 1;\n\nvar MONTH_GROUP = 2;\nvar YEAR_GROUP = 3;\n\nexports.Parser = function ENSlashMonthFormatParser(argument) {\n    Parser.apply(this, arguments);\n\n    this.pattern = function () { return PATTERN; };\n    this.extract = function(text, ref, match, opt){\n        \n        var index = match.index + match[OPENNING_GROUP].length;\n        var text = match[0].substr(match[OPENNING_GROUP].length, match[0].length).trim();\n\n        var result = new ParsedResult({\n            text: text,\n            index: index,\n            ref: ref,\n        });\n\n        var year = match[YEAR_GROUP] ;\n        var month = match[MONTH_GROUP];\n        var day   = 1;\n        \n        month = parseInt(month);\n        year = parseInt(year);\n\n        result.start.imply('day', day);\n        result.start.assign('month', month);\n        result.start.assign('year', year);\n\n        result.tags['ENSlashMonthFormatParser'] = true;\n        return result;\n    };\n};\n","const dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar util  = require('../../utils/EN');\n\nvar PATTERN = new RegExp('' +\n    '(\\\\W|^)' +\n    '(?:within\\\\s*)?' +\n    '(' + util.TIME_UNIT_PATTERN + ')' +\n    '(?:ago|before|earlier)(?=(?:\\\\W|$))', 'i');\n\nvar STRICT_PATTERN = new RegExp('' +\n    '(\\\\W|^)' +\n    '(?:within\\\\s*)?' +\n    '(' + util.TIME_UNIT_STRICT_PATTERN + ')' +\n    'ago(?=(?:\\\\W|$))', 'i');\n\nexports.Parser = function ENTimeAgoFormatParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return this.isStrictMode()? STRICT_PATTERN : PATTERN;\n    };\n\n    this.extract = function(text, ref, match, opt){\n\n        if (match.index > 0 && text[match.index-1].match(/\\w/)) return null;\n\n        var text = match[0];\n        text  = match[0].substr(match[1].length, match[0].length - match[1].length);\n        var index = match.index + match[1].length;\n\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref\n        });\n\n        var fragments = util.extractDateTimeUnitFragments(match[2]);\n        var date = dayjs(ref);\n\n        for (var key in fragments) {\n            date = date.add(-fragments[key], key);\n        }\n\n        if (fragments['hour'] > 0 || fragments['minute'] > 0 || fragments['second'] > 0) {\n            result.start.assign('hour', date.hour());\n            result.start.assign('minute', date.minute());\n            result.start.assign('second', date.second());\n            result.tags['ENTimeAgoFormatParser'] = true;\n        } \n        \n        if (fragments['d'] > 0 || fragments['month'] > 0 || fragments['year'] > 0) {\n            result.start.assign('day', date.date());\n            result.start.assign('month', date.month() + 1);\n            result.start.assign('year', date.year());\n        } else {\n            if (fragments['week'] > 0) {\n                result.start.imply('weekday', date.day());\n            }\n\n            result.start.imply('day', date.date());\n            result.start.imply('month', date.month() + 1);\n            result.start.imply('year', date.year());\n        }\n\n        return result;\n    };\n}\n","const dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar ParsedComponents = require('../../result').ParsedComponents;\n\nvar FIRST_REG_PATTERN  = new RegExp(\"(^|\\\\s|T)\" +\n    \"(?:(?:at|from)\\\\s*)??\" + \n    \"(\\\\d{1,4}|noon|midnight)\" + \n    \"(?:\" + \n        \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" + \n        \"(?:\" + \n            \"(?:\\\\:|\\\\：)(\\\\d{2})(?:\\\\.(\\\\d{1,6}))?\" + \n        \")?\" + \n    \")?\" + \n    \"(?:\\\\s*(A\\\\.M\\\\.|P\\\\.M\\\\.|AM?|PM?|O\\\\W*CLOCK))?\" + \n    \"(?=\\\\W|$)\", 'i');\n\n\nvar SECOND_REG_PATTERN = new RegExp(\"^\\\\s*\" + \n    \"(\\\\-|\\\\–|\\\\~|\\\\〜|to|\\\\?)\\\\s*\" + \n    \"(\\\\d{1,4})\" +\n    \"(?:\" + \n        \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" + \n        \"(?:\" + \n            \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})(?:\\\\.(\\\\d{1,6}))?\" + \n        \")?\" + \n    \")?\" + \n    \"(?:\\\\s*(A\\\\.M\\\\.|P\\\\.M\\\\.|AM?|PM?|O\\\\W*CLOCK))?\" + \n    \"(?=\\\\W|$)\", 'i');\n\nvar HOUR_GROUP    = 2;\nvar MINUTE_GROUP  = 3;\nvar SECOND_GROUP  = 4;\nvar MILLI_SECOND_GROUP  = 5;\nvar AM_PM_HOUR_GROUP = 6;\n\n\nexports.Parser = function ENTimeExpressionParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return FIRST_REG_PATTERN; }\n    \n    this.extract = function(text, ref, match, opt){ \n        \n        // This pattern can be overlapped Ex. [12] AM, 1[2] AM\n        if (match.index > 0 && text[match.index-1].match(/\\w/)) return null;\n        var refMoment = dayjs(ref);\n        var result = new ParsedResult();\n        result.ref = ref;\n        result.index = match.index + match[1].length;\n        result.text  = match[0].substring(match[1].length);\n        result.tags['ENTimeExpressionParser'] = true;\n\n        result.start.imply('day',   refMoment.date());\n        result.start.imply('month', refMoment.month()+1);\n        result.start.imply('year',  refMoment.year());\n        \n        var hour = 0;\n        var minute = 0;\n        var meridiem = -1;\n\n        // ----- Millisecond\n        if(match[MILLI_SECOND_GROUP] != null){ \n            var millisecond = parseInt(match[MILLI_SECOND_GROUP].substring(0, 3));\n            if(millisecond >= 1000) return null;\n            \n            result.start.assign('millisecond', millisecond);\n        }\n\n        // ----- Second\n        if(match[SECOND_GROUP] != null){ \n            var second = parseInt(match[SECOND_GROUP]);\n            if(second >= 60) return null;\n\n            result.start.assign('second', second);\n        }\n        \n        // ----- Hours\n        if (match[HOUR_GROUP].toLowerCase() == \"noon\"){\n            meridiem = 1; \n            hour = 12;\n        } else if (match[HOUR_GROUP].toLowerCase() == \"midnight\") {\n            meridiem = 0; \n            hour = 0;\n        } else {\n            hour = parseInt(match[HOUR_GROUP]);\n        }\n        \n        // ----- Minutes\n        if(match[MINUTE_GROUP] != null){ \n            minute = parseInt(match[MINUTE_GROUP]);\n        } else if(hour > 100) { \n            minute = hour%100;\n            hour   = parseInt(hour/100);\n        } \n        \n        if(minute >= 60) {\n            return null;\n        }\n\n        if(hour > 24) {\n            return null;\n        }\n        if (hour >= 12) { \n            meridiem = 1;\n        }\n\n        // ----- AM & PM  \n        if(match[AM_PM_HOUR_GROUP] != null) {\n            if(hour > 12) return null;\n            var ampm = match[AM_PM_HOUR_GROUP][0].toLowerCase();\n            if(ampm == \"a\"){\n                meridiem = 0; \n                if(hour == 12) hour = 0;\n            }\n            \n            if(ampm == \"p\"){\n                meridiem = 1; \n                if(hour != 12) hour += 12;\n            }\n        } \n\n        result.start.assign('hour', hour);\n        result.start.assign('minute', minute);\n\n        if (meridiem >= 0) {\n            result.start.assign('meridiem', meridiem);\n        } else {\n            if (hour < 12) {\n                result.start.imply('meridiem', 0);\n            } else {\n                result.start.imply('meridiem', 1);\n            }\n        }\n\n        // ==============================================================\n        //                  Extracting the 'to' chunk\n        // ==============================================================\n        match = SECOND_REG_PATTERN.exec(text.substring(result.index + result.text.length));\n        if (!match) {\n            return result;\n        }\n\n\n\n        // Pattern \"YY.YY -XXXX\" is more like timezone offset\n        if (match[0].match(/^\\s*(\\+|\\-)\\s*\\d{3,4}$/)) {\n            return result;\n        }\n\n        if(result.end == null){\n            result.end = new ParsedComponents(null, result.start.date());\n        }\n\n        var hour = 0;\n        var minute = 0;\n        var meridiem = -1;\n\n        // ----- Millisecond\n        if(match[MILLI_SECOND_GROUP] != null){ \n            var millisecond = parseInt(match[MILLI_SECOND_GROUP].substring(0, 3));\n            if(millisecond >= 1000) return null;\n            \n            result.end.assign('millisecond', millisecond);\n        }\n        \n        // ----- Second\n        if(match[SECOND_GROUP] != null){ \n            var second = parseInt(match[SECOND_GROUP]);\n            if(second >= 60) return null;\n\n            result.end.assign('second', second);\n        }\n\n        hour = parseInt(match[2]);\n        \n        // ----- Minute\n        if (match[MINUTE_GROUP]!= null) {\n            \n            minute = parseInt(match[MINUTE_GROUP]);\n            if(minute >= 60) return result;\n            \n        } else if (hour > 100) {\n\n            minute = hour%100;\n            hour   = parseInt(hour/100);\n        }\n\n        if(minute >= 60) {\n            return null;\n        }\n\n        if(hour > 24) {\n            return null;\n        }\n        if (hour >= 12) { \n            meridiem = 1;\n        }\n        \n        // ----- AM & PM \n        if (match[AM_PM_HOUR_GROUP] != null){\n\n            if (hour > 12) return null;\n\n            var ampm = match[AM_PM_HOUR_GROUP][0].toLowerCase();\n            if(ampm == \"a\"){\n                meridiem = 0; \n                if(hour == 12) {\n                    hour = 0;\n                    if (!result.end.isCertain('day')) {\n                        result.end.imply('day', result.end.get('day') + 1);\n                    }\n                }\n            }\n            \n            if(ampm == \"p\"){\n                meridiem = 1; \n                if(hour != 12) hour += 12;\n            }\n            \n            if (!result.start.isCertain('meridiem')) {\n                if (meridiem == 0) {\n                    \n                    result.start.imply('meridiem', 0);\n                    \n                    if (result.start.get('hour') == 12) {\n                        result.start.assign('hour', 0);\n                    }\n\n                } else {\n\n                    result.start.imply('meridiem', 1);\n                    \n                    if (result.start.get('hour') != 12) {\n                        result.start.assign('hour', result.start.get('hour') + 12); \n                    }\n                }\n            }\n        }\n\n        result.text = result.text + match[0];\n        result.end.assign('hour', hour);\n        result.end.assign('minute', minute);\n        if (meridiem >= 0) {\n            result.end.assign('meridiem', meridiem);\n        } else {\n            var startAtPM = result.start.isCertain('meridiem') && result.start.get('meridiem') == 1;\n            if (startAtPM && result.start.get('hour') > hour) {\n                // 10pm - 1 (am)\n                result.end.imply('meridiem', 0);\n\n            } else if (hour > 12) {\n                result.end.imply('meridiem', 1);\n            }\n        }\n\n        if (result.end.date().getTime() < result.start.date().getTime()) {\n            result.end.imply('day', result.end.get('day') + 1)\n        }\n        \n        return result;\n    }\n}\n","const dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar util  = require('../../utils/EN');\n\nvar PATTERN = new RegExp('' +\n    /*match[1]*/ '(\\\\W|^)' +\n    /*match[2]*/ '(in )?' +\n    /*match[3]*/ '(' + util.TIME_UNIT_PATTERN + ')' +\n    /*match[4]*/ '(later|after|from now|henceforth|forward|out)?' +\n    /*match[5]*/ '(?=(?:\\\\W|$))',\n'i');\n\nvar STRICT_PATTERN = new RegExp('' +\n    /*match[1]*/ '(\\\\W|^)' +\n    /*match[2]*/ '(in )?' +\n    /*match[3]*/ '(' + util.TIME_UNIT_STRICT_PATTERN + ')' +\n    /*match[4]*/ '(later|from now)?' +\n    /*match[5]*/ '(?=(?:\\\\W|$))',\n'i');\n\nexports.Parser = function ENTimeLaterFormatParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return this.isStrictMode()? STRICT_PATTERN : PATTERN;\n    };\n\n    this.extract = function(text, ref, match, opt){\n        if (match.index > 0 && text[match.index-1].match(/\\w/)) return null;\n\n        var prefix = match[2];\n        var suffix = match[4];\n        if (!prefix && !suffix) return null;\n\n        var preamble = match[1];\n        var text  = match[0].substr(preamble.length, match[0].length - preamble.length);\n        var index = match.index + preamble.length;\n\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref\n        });\n\n        var fragments = util.extractDateTimeUnitFragments(match[3]);\n        var date = dayjs(ref);\n        for (var key in fragments) {\n            date = date.add(fragments[key], key);\n        }\n\n        if (fragments['hour'] > 0 || fragments['minute'] > 0 || fragments['second'] > 0) {\n            result.start.assign('hour', date.hour());\n            result.start.assign('minute', date.minute());\n            result.start.assign('second', date.second());\n            result.tags['ENTimeAgoFormatParser'] = true;\n        } \n        \n        if (fragments['d'] > 0 || fragments['month'] > 0 || fragments['year'] > 0) {\n            result.start.assign('day', date.date());\n            result.start.assign('month', date.month() + 1);\n            result.start.assign('year', date.year());\n        } else {\n            if (fragments['week'] > 0) {\n                result.start.imply('weekday', date.day());\n            }\n\n            result.start.imply('day', date.date());\n            result.start.imply('month', date.month() + 1);\n            result.start.imply('year', date.year());\n        }\n\n        return result;\n    };\n}\n","const dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = /(\\W|^)(now|today|tonight|last\\s*night|(?:tomorrow|tmr|yesterday)\\s*|tomorrow|tmr|yesterday)(?=\\W|$)/i;\n\nexports.Parser = function ENCasualDateParser(){\n\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n\n        var text = match[0].substr(match[1].length);\n        var index = match.index + match[1].length;\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref,\n        });\n\n        var refMoment = dayjs(ref);\n        var startMoment = refMoment;\n        var lowerText = text.toLowerCase();\n\n        if(lowerText == 'tonight'){\n            // Normally means this coming midnight\n            result.start.imply('hour', 22);\n            result.start.imply('meridiem', 1);\n\n        } else if (/^tomorrow|^tmr/.test(lowerText)) {\n\n            // Check not \"Tomorrow\" on late night\n            if(refMoment.hour() > 1) {\n                startMoment = startMoment.add(1, 'day');\n            }\n\n        } else if (/^yesterday/.test(lowerText)) {\n\n            startMoment = startMoment.add(-1, 'day');\n\n        } else if(lowerText.match(/last\\s*night/)) {\n\n            result.start.imply('hour', 0);\n            if (refMoment.hour() > 6) {\n                startMoment = startMoment.add(-1, 'day');\n            }\n\n        } else if (lowerText.match(\"now\")) {\n\n          result.start.assign('hour', refMoment.hour());\n          result.start.assign('minute', refMoment.minute());\n          result.start.assign('second', refMoment.second());\n          result.start.assign('millisecond', refMoment.millisecond());\n\n        }\n\n        result.start.assign('day', startMoment.date())\n        result.start.assign('month', startMoment.month() + 1)\n        result.start.assign('year', startMoment.year())\n        result.tags['ENCasualDateParser'] = true;\n        return result;\n    }\n}\n","var Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = /(\\W|^)((this)?\\s*(morning|afternoon|evening|noon|night))/i;\n\nvar TIME_MATCH = 4;\n\nexports.Parser = function ENCasualTimeParser(){\n\n    Parser.apply(this, arguments);\n\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n\n        var text = match[0].substr(match[1].length);\n        var index = match.index + match[1].length;\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref,\n        });\n\n        if(!match[TIME_MATCH]) TIME_MATCH = 3;\n        \n        switch (match[TIME_MATCH].toLowerCase()) {\n\n            case 'afternoon':\n                result.start.imply('meridiem', 1);\n                result.start.imply('hour', 15);\n                break;\n\n            case 'evening':\n            case 'night':\n                result.start.imply('meridiem', 1);\n                result.start.imply('hour', 20);\n                break;\n\n            case 'morning':\n                result.start.imply('meridiem', 0);\n                result.start.imply('hour', 6);\n                break;\n\n            case 'noon':\n                result.start.imply('meridiem', 0);\n                result.start.imply('hour', 12);\n                break;\n        }\n        \n        result.tags['ENCasualTimeParser'] = true;\n        return result;\n    };\n};\n","const dayjs = require('dayjs');\nconst parser = require('../parser');\nconst ParsedResult = require('../../result').ParsedResult;\n\nconst util  = require('../../utils/JP'); \n\nconst PATTERN = /(?:(同|今|本|((昭和|平成|令和)?([0-9０-９]{1,4}|元)))年\\s*)?([0-9０-９]{1,2})月\\s*([0-9０-９]{1,2})日/i;\nconst SPECIAL_YEAR_GROUP  = 1;\nconst TYPICAL_YEAR_GROUP  = 2;\nconst ERA_GROUP         = 3;\nconst YEAR_NUMBER_GROUP = 4;\nconst MONTH_GROUP       = 5;\nconst DAY_GROUP         = 6;\n\nexports.Parser = function JPStandardParser(){\n    parser.Parser.apply(this, arguments);\n    \n    this.pattern = function() { return PATTERN; }\n    \n    this.extract = function(text, ref, match, opt){ \n        var result = new ParsedResult({\n            text: match[0],\n            index: match.index,\n            ref: ref,\n        });\n        \n        var month = match[MONTH_GROUP];\n        month = util.toHankaku(month);\n        month = parseInt(month);\n\n        var day = match[DAY_GROUP];\n        day = util.toHankaku(day);\n        day = parseInt(day);\n\n        result.start.assign('day', day);\n        result.start.assign('month', month);\n            \n        if (match[TYPICAL_YEAR_GROUP]) {\n\n            var year = match[YEAR_NUMBER_GROUP];\n            if (year == '元') {\n                year = 1;\n            } else {\n                year = util.toHankaku(year);\n                year = parseInt(year);\n            }\n\n            if (match[ERA_GROUP] == '令和') {\n                year += 2018;\n            } else if (match[ERA_GROUP] == '平成') {\n                year += 1988;\n            } else if (match[ERA_GROUP] == '昭和') {\n                year += 1925;\n            }\n\n            result.start.assign('year', year);\n\n        } else if (match[SPECIAL_YEAR_GROUP] && match[SPECIAL_YEAR_GROUP].match('同|今|本')) {\n            const moment = dayjs(ref)\n            result.start.assign('year', moment.year());\n        } else {\n            const year = parser.findYearClosestToRef(ref, day, month);\n            result.start.imply('year', year);\n        }\n        \n        result.tags['JPStandardParser'] = true;\n        return result;\n    };\n\n}\n\n","\n\n/**\n * to-hankaku.js\n * convert to ascii code strings.\n *\n * @version 1.0.1\n * @author think49\n * @url https://gist.github.com/964592\n * @license http://www.opensource.org/licenses/mit-license.php (The MIT License)\n */\n \nexports.toHankaku = (function (String, fromCharCode) {\n \n    function toHankaku (string) {\n        return String(string).replace(/\\u2019/g, '\\u0027').replace(/\\u201D/g, '\\u0022').replace(/\\u3000/g, '\\u0020').replace(/\\uFFE5/g, '\\u00A5').replace(/[\\uFF01\\uFF03-\\uFF06\\uFF08\\uFF09\\uFF0C-\\uFF19\\uFF1C-\\uFF1F\\uFF21-\\uFF3B\\uFF3D\\uFF3F\\uFF41-\\uFF5B\\uFF5D\\uFF5E]/g, alphaNum);\n    }\n \n    function alphaNum (token) {\n        return fromCharCode(token.charCodeAt(0) - 65248);\n    }\n \n    return toHankaku;\n})(String, String.fromCharCode);\n\n/**\n * to-zenkaku.js\n * convert to multi byte strings.\n *\n * @version 1.0.2\n * @author think49\n * @url https://gist.github.com/964592\n * @license http://www.opensource.org/licenses/mit-license.php (The MIT License)\n */\nexports.toZenkaku = (function (String, fromCharCode) {\n \n    function toZenkaku (string) {\n        return String(string).replace(/\\u0020/g, '\\u3000').replace(/\\u0022/g, '\\u201D').replace(/\\u0027/g, '\\u2019').replace(/\\u00A5/g, '\\uFFE5').replace(/[!#-&(),-9\\u003C-?A-[\\u005D_a-{}~]/g, alphaNum);\n    }\n \n    function alphaNum (token) {\n        return fromCharCode(token.charCodeAt(0) + 65248);\n    }\n \n    return toZenkaku;\n})(String, String.fromCharCode);","const dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = /今日|当日|昨日|明日|今夜|今夕|今晩|今朝/i;\n\nexports.Parser = function JPCasualDateParser(){\n    \n    Parser.apply(this, arguments);\n        \n    this.pattern = function() { return PATTERN; }\n    \n    this.extract = function(text, ref, match, opt){ \n        \n        var index = match.index;\n        var text = match[0];\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref,\n        });\n\n        var refMoment = dayjs(ref);\n        var startMoment = refMoment;\n\n        if(text == '今夜' || text == '今夕' || text == '今晩'){\n            // Normally means this coming midnight \n            result.start.imply('hour', 22);\n            result.start.imply('meridiem', 1);\n\n        } else if(text == '明日'){\n\n            // Check not \"Tomorrow\" on late night\n            if(refMoment.hour() > 4) {\n                startMoment = startMoment.add(1, 'day');\n            }\n\n        } else if(text == '昨日') {\n\n            startMoment = startMoment.add(-1, 'day');\n\n        } else if (text.match(\"今朝\")) {\n\n            result.start.imply('hour', 6);\n            result.start.imply('meridiem', 0);\n        }\n\n        result.start.assign('day', startMoment.date())\n        result.start.assign('month', startMoment.month() + 1)\n        result.start.assign('year', startMoment.year())\n        result.tags['JPCasualDateParser'] = true;\n        return result;\n    }\n}\n\n","const dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\n/*\n  Valid patterns:\n  - esta manhã -> today in the morning\n  - esta tarde -> today in the afternoon/evening\n  - esta noite -> tonight\n  - ontem de -> yesterday in the morning\n  - ontem a tarde -> yesterday in the afternoon/evening\n  - ontem a noite -> yesterday at night\n  - amanhã de manhã -> tomorrow in the morning\n  - amanhã a tarde -> tomorrow in the afternoon/evening\n  - amanhã a noite -> tomorrow at night\n  - hoje -> today\n  - ontem -> yesterday\n  - amanhã -> tomorrow\n */\nvar PATTERN = /(\\W|^)(agora|esta\\s*(manhã|tarde|noite)|(ontem|amanhã)\\s*(de|à)\\s*(manhã|tarde|noite)|hoje|amanhã|ontem|noite)(?=\\W|$)/i;\n\nexports.Parser = function PTCasualDateParser(){\n\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n\n        var text = match[0].substr(match[1].length);\n        var index = match.index + match[1].length;\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref,\n        });\n\n        var refMoment = dayjs(ref);\n        var startMoment = refMoment;\n        var lowerText = text.toLowerCase().replace(/\\s+/g, ' ');\n\n        if(lowerText == 'amanhã'){\n\n            // Check not \"Tomorrow\" on late night\n            if(refMoment.hour() > 1) {\n                startMoment = startMoment.add(1, 'day');\n            }\n\n        } else if(lowerText == 'ontem') {\n\n            startMoment = startMoment.add(-1, 'day');\n        }\n        else if(lowerText == 'noite') {\n\n            result.start.imply('hour', 0);\n            if (refMoment.hour() > 6) {\n                startMoment = startMoment.add(-1, 'day');\n            }\n\n        } else if (lowerText.match(\"esta\")) {\n\n            var secondMatch = match[3].toLowerCase();\n            if (secondMatch == \"tarde\") {\n\n                result.start.imply('hour', 18);\n\n            } else if (secondMatch == \"manhã\") {\n\n                result.start.imply('hour', 6);\n\n            } else if (secondMatch == \"noite\") {\n\n              // Normally means this coming midnight\n              result.start.imply('hour', 22);\n              result.start.imply('meridiem', 1);\n\n            }\n        } else if (lowerText.match(/de|à/)) {\n\n            var firstMatch = match[4].toLowerCase();\n            if (firstMatch === 'ontem') {\n\n                startMoment = startMoment.add(-1, 'day');\n\n            } else if (firstMatch === 'amanhã') {\n\n                startMoment = startMoment.add(1, 'day');\n\n            }\n\n            var secondMatch = match[6].toLowerCase();\n            if (secondMatch == \"tarde\") {\n\n                result.start.imply('hour', 18);\n\n            } else if (secondMatch == \"manhã\") {\n\n                result.start.imply('hour', 9);\n\n            } else if (secondMatch == \"noite\") {\n\n              // Normally means this coming midnight\n              result.start.imply('hour', 22);\n              result.start.imply('meridiem', 1);\n\n            }\n\n        } else if (lowerText.match(\"agora\")) {\n\n          result.start.imply('hour', refMoment.hour());\n          result.start.imply('minute', refMoment.minute());\n          result.start.imply('second', refMoment.second());\n          result.start.imply('millisecond', refMoment.millisecond());\n\n        }\n\n        result.start.assign('day', startMoment.date())\n        result.start.assign('month', startMoment.month() + 1)\n        result.start.assign('year', startMoment.year())\n        result.tags['PTCasualDateParser'] = true;\n        return result;\n    }\n}\n","const dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = /(\\W|^)(dentro\\s*de|em|em*até)\\s*([0-9]+|mei[oa]|uma?)\\s*(minutos?|horas?|dias?)\\s*(?=(?:\\W|$))/i;\n\nexports.Parser = function PTDeadlineFormatParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n\n        var index = match.index + match[1].length;\n        var text  = match[0];\n        text  = match[0].substr(match[1].length, match[0].length - match[1].length);\n\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref,\n        });\n\n        var num = parseInt(match[3]);\n        if (isNaN(num)) {\n          if (match[3].match(/(meio|meia)/)) {\n            num = 0.5;\n          } else {\n            num = 1;\n          }\n        }\n\n        var date = dayjs(ref);\n        if (match[4].match(/dia/)) {\n            date = date.add(num, 'd');\n\n            result.start.assign('year', date.year());\n            result.start.assign('month', date.month() + 1);\n            result.start.assign('day', date.date());\n            return result;\n        }\n\n\n        if (match[4].match(/hora/)) {\n\n            date = date.add(num, 'hour');\n\n        } else if (match[4].match(/minuto/)) {\n\n            date = date.add(num, 'minute');\n        }\n\n        result.start.imply('year', date.year());\n        result.start.imply('month', date.month() + 1);\n        result.start.imply('day', date.date());\n        result.start.assign('hour', date.hour());\n        result.start.assign('minute', date.minute());\n        result.tags['PTDeadlineFormatParser'] = true;\n        return result;\n    };\n}\n","var parser = require('../parser');\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar util  = require('../../utils/PT');\n\nvar DAYS_OFFSET = util.WEEKDAY_OFFSET;\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n        '(?:(domingo|segunda|segunda-feira|terça|terça-feira|quarta|quarta-feira|quinta|quinta-feira|sexta|sexta-feira|sábado|sabado|dom|seg|ter|qua|qui|sex|sab)\\\\s*,?\\\\s*)?' +\n        '([0-9]{1,2})(?:º|ª|°)?' +\n        '(?:\\\\s*(?:desde|de|\\\\-|\\\\–|ao?|\\\\s)\\\\s*([0-9]{1,2})(?:º|ª|°)?)?\\\\s*(?:de)?\\\\s*' +\n        '(Jan(?:eiro|\\\\.)?|Fev(?:ereiro|\\\\.)?|Mar(?:ço|\\\\.)?|Abr(?:il|\\\\.)?|Mai(?:o|\\\\.)?|Jun(?:ho|\\\\.)?|Jul(?:ho|\\\\.)?|Ago(?:sto|\\\\.)?|Set(?:embro|\\\\.)?|Out(?:ubro|\\\\.)?|Nov(?:embro|\\\\.)?|Dez(?:embro|\\\\.)?)' +\n        '(?:\\\\s*(?:de?)?(\\\\s*[0-9]{1,4}(?![^\\\\s]\\\\d))(\\\\s*[ad]\\\\.?\\\\s*c\\\\.?|a\\\\.?\\\\s*d\\\\.?)?)?' +\n        '(?=\\\\W|$)', 'i'\n    );\n\nvar WEEKDAY_GROUP = 2;\nvar DATE_GROUP = 3;\nvar DATE_TO_GROUP = 4;\nvar MONTH_NAME_GROUP = 5;\nvar YEAR_GROUP = 6;\nvar YEAR_BE_GROUP = 7;\n\nexports.Parser = function PTMonthNameLittleEndianParser(){\n    parser.Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n\n        var result = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index: match.index + match[1].length,\n            ref: ref,\n        });\n\n        var month = match[MONTH_NAME_GROUP];\n        month = util.MONTH_OFFSET[month.toLowerCase()];\n\n        var day = match[DATE_GROUP];\n        day = parseInt(day);\n\n        var year = null;\n        if (match[YEAR_GROUP]) {\n            year = match[YEAR_GROUP];\n            year = parseInt(year);\n\n            if(match[YEAR_BE_GROUP]){\n                if (/a\\.?\\s*c\\.?/i.test(match[YEAR_BE_GROUP])) {\n                    // antes de Cristo\n                    year = -year;\n                }\n            } else if (year < 100){\n\n                year = year + 2000;\n            }\n        }\n\n        if(year){\n            result.start.assign('day', day);\n            result.start.assign('month', month);\n            result.start.assign('year', year);\n        } else {\n            year = parser.findYearClosestToRef(ref, day, month);\n            result.start.assign('day', day);\n            result.start.assign('month', month);\n            result.start.imply('year', year);\n        }\n\n        // Weekday component\n        if (match[WEEKDAY_GROUP]) {\n            var weekday = match[WEEKDAY_GROUP];\n            weekday = util.WEEKDAY_OFFSET[weekday.toLowerCase()]\n            result.start.assign('weekday', weekday);\n        }\n\n        // Text can be 'range' value. Such as '12 - 13 January 2012'\n        if (match[DATE_TO_GROUP]) {\n            result.end = result.start.clone();\n            result.end.assign('day', parseInt(match[DATE_TO_GROUP]));\n        }\n\n        result.tags['PTMonthNameLittleEndianParser'] = true;\n        return result;\n    };\n}\n","exports.WEEKDAY_OFFSET = {\n    'domingo': 0,\n    'dom': 0,\n    'segunda': 1,\n    'segunda-feira': 1,\n    'seg': 1,\n    'terça': 2,\n    'terca': 2,\n    'terça-feira': 2,\n    'terca-feira': 2,\n    'ter':2,\n    'quarta': 3,\n    'quarta-feira': 3,\n    'qua': 3,\n    'quinta': 4,\n    'quinta-feira': 4,\n    'qui': 4,\n    'sexta': 5,\n    'sexta-feira': 5,\n    'sex': 5,\n    'sábado': 6,\n    'sabado': 6,\n    'sab': 6,}\n  \n  exports.MONTH_OFFSET = {\n    'janeiro': 1,\n    'jan': 1,\n    'jan.': 1,\n    'fevereiro': 2,\n    'fev': 2,\n    'fev.': 2,\n    'março': 3,\n    'mar': 3,\n    'mar.': 3,\n    'abril': 4,\n    'abr': 4,\n    'abr.': 4,\n    'maio': 5,\n    'mai': 5,\n    'mai.': 5,\n    'junho': 6,\n    'jun': 6,\n    'jun.': 6,\n    'julho': 7,\n    'jul': 7,\n    'jul.': 7,\n    'agosto': 8,\n    'ago': 8,\n    'ago.': 8,\n    'setembro': 9,\n    'set': 9,\n    'set.': 9,\n    'outubro': 10,\n    'out': 10,\n    'out.': 10,\n    'novembro': 11,\n    'nov': 11,\n    'nov.': 11,\n    'dezembro': 12,\n    'dez': 12,\n    'dez.': 12,\n  }","/*\n    Date format with slash \"/\" (also \"-\" and \".\") between numbers\n    - Martes 3/11/2015\n    - 3/11/2015\n    - 3/11\n*/\nconst dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(?:' +\n        '((?:domingo|dom|segunda|segunda-feira|seg|terça|terça-feira|ter|quarta|quarta-feira|qua|quinta|quinta-feira|qui|sexta|sexta-feira|sex|s[áa]bado|sab))' +\n        '\\\\s*\\\\,?\\\\s*' +\n    ')?' +\n    '([0-1]{0,1}[0-9]{1})[\\\\/\\\\.\\\\-]([0-3]{0,1}[0-9]{1})' +\n    '(?:' +\n        '[\\\\/\\\\.\\\\-]' +\n        '([0-9]{4}\\s*\\,?\\s*|[0-9]{2}\\s*\\,?\\s*)' +\n    ')?' +\n    '(\\\\W|$)', 'i');\n\nvar DAYS_OFFSET = { 'domingo': 0, 'dom': 0, 'segunda': 1, 'segunda-feira': 1, 'seg': 1, 'terça': 2, 'terça-feira': 2, 'ter': 2, 'quarta': 3, 'quarta-feira': 3, 'qua': 3,\n    'quinta': 4, 'quinta-feira': 4, 'qui': 4, 'sexta': 5, 'sexta-feira': 5, 'sex': 5, 'sábado': 6, 'sabado': 6, 'sab': 6,}\n\n\nvar OPENNING_GROUP = 1;\nvar ENDING_GROUP = 6;\n\n// in Spanish we use day/month/year\nvar WEEKDAY_GROUP = 2;\nvar MONTH_GROUP = 4;\nvar DAY_GROUP = 3;\nvar YEAR_GROUP = 5;\n\nexports.Parser = function PTSlashDateFormatParser(argument) {\n    Parser.apply(this, arguments);\n\n    this.pattern = function () { return PATTERN; };\n    this.extract = function(text, ref, match, opt){\n\n        if(match[OPENNING_GROUP] == '/' || match[ENDING_GROUP] == '/') {\n            // Long skip, if there is some overlapping like:\n            // XX[/YY/ZZ]\n            // [XX/YY/]ZZ\n            match.index += match[0].length\n            return;\n        }\n\n        var index = match.index + match[OPENNING_GROUP].length;\n        var text = match[0].substr(match[OPENNING_GROUP].length, match[0].length - match[ENDING_GROUP].length);\n\n\n        var result = new ParsedResult({\n            text: text,\n            index: index,\n            ref: ref,\n        });\n\n        if(text.match(/^\\d\\.\\d$/)) return;\n        if(text.match(/^\\d\\.\\d{1,2}\\.\\d{1,2}$/)) return;\n\n        // MM/dd -> OK\n        // MM.dd -> NG\n        if(!match[YEAR_GROUP] && match[0].indexOf('/') < 0) return;\n\n        var date = null;\n        var year = match[YEAR_GROUP] || dayjs(ref).year() + '';\n        var month = match[MONTH_GROUP];\n        var day   = match[DAY_GROUP];\n\n        month = parseInt(month);\n        day  = parseInt(day);\n        year = parseInt(year);\n\n        if(month < 1 || month > 12) {\n            if(month > 12) {\n                // dd/mm/yyyy date format if day looks like a month, and month\n                // looks like a day.\n                if (day >= 1 && day <= 12 && month >= 13 && month <= 31) {\n                    // unambiguous\n                    var tday = month;\n                    month = day;\n                    day = tday;\n                }\n                else {\n                    // both month and day are <= 12\n                    return null;\n                }\n            }\n        }\n        if(day < 1 || day > 31) return null;\n\n        if(year < 100){\n            if(year > 50){\n                year = year + 1900;\n            }else{\n                year = year + 2000;\n            }\n        }\n\n        result.start.assign('day', day);\n        result.start.assign('month', month);\n        result.start.assign('year', year);\n\n        //Day of week\n        if(match[WEEKDAY_GROUP]) {\n            result.start.assign('weekday', DAYS_OFFSET[match[WEEKDAY_GROUP].toLowerCase()]);\n        }\n\n        result.tags['PTSlashDateFormatParser'] = true;\n        return result;\n    };\n};","const dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = /(\\W|^)há\\s*([0-9]+|mei[oa]|uma?)\\s*(minutos?|horas?|semanas?|dias?|mes(es)?|anos?)(?=(?:\\W|$))/i;\n\nexports.Parser = function PTTimeAgoFormatParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return PATTERN;\n    }\n\n    this.extract = function(text, ref, match, opt){\n\n        if (match.index > 0 && text[match.index-1].match(/\\w/)) return null;\n\n        var text = match[0];\n        text  = match[0].substr(match[1].length, match[0].length - match[1].length);\n        let index = match.index + match[1].length;\n\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref,\n        });\n\n        var num = parseInt(match[2]);\n        if (isNaN(num)) {\n          if (match[2].match(/mei/)) {\n            num = 0.5;\n          } else {\n            num = 1;\n          }\n        }\n\n        var date = dayjs(ref);\n\n        if (match[3].match(/hora/) || match[3].match(/minuto/)) {\n            if (match[3].match(/hora/)) {\n\n                date = date.add(-num, 'hour');\n\n            } else if (match[3].match(/minuto/)) {\n\n                date = date.add(-num, 'minute');\n            }\n\n            result.start.imply('day', date.date());\n            result.start.imply('month', date.month() + 1);\n            result.start.imply('year', date.year());\n            result.start.assign('hour', date.hour());\n            result.start.assign('minute', date.minute());\n            result.tags['PTTimeAgoFormatParser'] = true;\n            return result;\n        }\n\n        if (match[3].match(/semana/)) {\n            date = date.add(-num, 'week');\n\n            result.start.imply('day', date.date());\n            result.start.imply('month', date.month() + 1);\n            result.start.imply('year', date.year());\n            result.start.imply('weekday', date.day());\n            return result;\n        }\n\n        if (match[3].match(/dia/)) {\n            date = date.add(-num, 'd');\n        }\n\n        if (match[3].match(/mes/)) {\n            date = date.add(-num, 'month');\n        }\n\n        if (match[3].match(/ano/)) {\n\n            date = date.add(-num, 'year');\n        }\n\n        result.start.assign('day', date.date());\n        result.start.assign('month', date.month() + 1);\n        result.start.assign('year', date.year());\n        return result;\n\n    };\n}\n","const dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar ParsedComponents = require('../../result').ParsedComponents;\n\nvar FIRST_REG_PATTERN  = new RegExp(\"(^|\\\\s|T)\" +\n    \"(?:(?:ao?|às?|das|da|de|do)\\\\s*)?\" +\n    \"(\\\\d{1,4}|meio-dia|meia-noite|meio dia|meia noite)\" +\n    \"(?:\" +\n        \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" +\n        \"(?:\" +\n            \"(?:\\\\:|\\\\：)(\\\\d{2})\" +\n        \")?\" +\n    \")?\" +\n    \"(?:\\\\s*(A\\\\.M\\\\.|P\\\\.M\\\\.|AM?|PM?))?\" +\n    \"(?=\\\\W|$)\", 'i');\n\n\nvar SECOND_REG_PATTERN = new RegExp(\"^\\\\s*\" +\n    \"(\\\\-|\\\\–|\\\\~|\\\\〜|a(?:o)?|\\\\?)\\\\s*\" +\n    \"(\\\\d{1,4})\" +\n    \"(?:\" +\n        \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" +\n        \"(?:\" +\n            \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" +\n        \")?\" +\n    \")?\" +\n    \"(?:\\\\s*(A\\\\.M\\\\.|P\\\\.M\\\\.|AM?|PM?))?\" +\n    \"(?=\\\\W|$)\", 'i');\n\nvar HOUR_GROUP    = 2;\nvar MINUTE_GROUP  = 3;\nvar SECOND_GROUP  = 4;\nvar AM_PM_HOUR_GROUP = 5;\n\nexports.Parser = function PTTimeExpressionParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return FIRST_REG_PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n\n        // This pattern can be overlaped Ex. [12] AM, 1[2] AM\n        if (match.index > 0 && text[match.index-1].match(/\\w/)) return null;\n        var refMoment = dayjs(ref);\n        var result = new ParsedResult();\n        result.ref = ref;\n        result.index = match.index + match[1].length;\n        result.text  = match[0].substring(match[1].length);\n        result.tags['PTTimeExpressionParser'] = true;\n\n        result.start.imply('day',   refMoment.date());\n        result.start.imply('month', refMoment.month()+1);\n        result.start.imply('year',  refMoment.year());\n\n        var hour = 0;\n        var minute = 0;\n        var meridiem = -1;\n\n        // ----- Second\n        if(match[SECOND_GROUP] != null){\n            var second = parseInt(match[SECOND_GROUP]);\n            if(second >= 60) return null;\n\n            result.start.assign('second', second);\n        }\n\n        // ----- Hours\n        if (match[HOUR_GROUP].toLowerCase().match(/meio\\-di/)){\n            meridiem = 1;\n            hour = 12;\n        } else if (match[HOUR_GROUP].toLowerCase() == \"meia-noite\") {\n            meridiem = 0;\n            hour = 0;\n        } else {\n            hour = parseInt(match[HOUR_GROUP]);\n        }\n\n        // ----- Minutes\n        if(match[MINUTE_GROUP] != null){\n            minute = parseInt(match[MINUTE_GROUP]);\n        } else if(hour > 100) {\n            minute = hour%100;\n            hour   = parseInt(hour/100);\n        }\n\n        if(minute >= 60) {\n            return null;\n        }\n\n        if(hour > 24) {\n            return null;\n        }\n        if (hour >= 12) {\n            meridiem = 1;\n        }\n\n        // ----- AM & PM\n        if(match[AM_PM_HOUR_GROUP] != null) {\n            if(hour > 12) return null;\n            var ampm = match[AM_PM_HOUR_GROUP][0].toLowerCase();\n            if(ampm == \"a\"){\n                meridiem = 0;\n                if(hour == 12) hour = 0;\n            }\n\n            if(ampm == \"p\"){\n                meridiem = 1;\n                if(hour != 12) hour += 12;\n            }\n        }\n        result.start.assign('hour', hour);\n        result.start.assign('minute', minute);\n        if (meridiem >= 0) {\n            result.start.assign('meridiem', meridiem);\n        }\n\n        // ==============================================================\n        //                  Extracting the 'to' chunk\n        // ==============================================================\n        match = SECOND_REG_PATTERN.exec(text.substring(result.index + result.text.length));\n        if (!match) {\n            // Not accept number only result\n            if (result.text.match(/^\\d+$/)) {\n                return null;\n            }\n            return result;\n        }\n\n\n\n        // Pattern \"YY.YY -XXXX\" is more like timezone offset\n        if (match[0].match(/^\\s*(\\+|\\-)\\s*\\d{3,4}$/)) {\n            return result;\n        }\n\n        if(result.end == null){\n            result.end = new ParsedComponents(null, result.start.date());\n        }\n\n        var hour = 0;\n        var minute = 0;\n        var meridiem = -1;\n\n        // ----- Second\n        if(match[SECOND_GROUP] != null){\n            var second = parseInt(match[SECOND_GROUP]);\n            if(second >= 60) return null;\n\n            result.end.assign('second', second);\n        }\n\n        hour = parseInt(match[2]);\n\n        // ----- Minute\n        if (match[MINUTE_GROUP]!= null) {\n\n            minute = parseInt(match[MINUTE_GROUP]);\n            if(minute >= 60) return result;\n\n        } else if (hour > 100) {\n\n            minute = hour%100;\n            hour   = parseInt(hour/100);\n        }\n\n        if(minute >= 60) {\n            return null;\n        }\n\n        if(hour > 24) {\n            return null;\n        }\n        if (hour >= 12) {\n            meridiem = 1;\n        }\n\n        // ----- AM & PM\n        if (match[AM_PM_HOUR_GROUP] != null){\n\n            if (hour > 12) return null;\n\n            if(match[AM_PM_HOUR_GROUP][0].toLowerCase() == \"a\"){\n                meridiem = 0;\n                if(hour == 12) {\n                    hour = 0;\n                    if (!result.end.isCertain('day')) {\n                        result.end.imply('day', result.end.get('day') + 1);\n                    }\n                }\n            }\n\n            if(match[AM_PM_HOUR_GROUP][0].toLowerCase() == \"p\"){\n                meridiem = 1;\n                if(hour != 12) hour += 12;\n            }\n\n            if (!result.start.isCertain('meridiem')) {\n                if (meridiem == 0) {\n\n                    result.start.imply('meridiem', 0);\n\n                    if (result.start.get('hour') == 12) {\n                        result.start.assign('hour', 0);\n                    }\n\n                } else {\n\n                    result.start.imply('meridiem', 1);\n\n                    if (result.start.get('hour') != 12) {\n                        result.start.assign('hour', result.start.get('hour') + 12);\n                    }\n                }\n            }\n\n        } else if(hour >= 12) {\n            meridiem = 1;\n        }\n\n        result.text = result.text + match[0];\n        result.end.assign('hour', hour);\n        result.end.assign('minute', minute);\n        if (meridiem >= 0) {\n            result.end.assign('meridiem', meridiem);\n        }\n\n        if (result.end.date().getTime() < result.start.date().getTime()) {\n            result.end.imply('day', result.end.get('day') + 1)\n        }\n\n        return result;\n    }\n}\n","var Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar updateParsedComponent = require('../en/ENWeekdayParser').updateParsedComponent;\n\nvar DAYS_OFFSET = { 'domingo': 0, 'dom': 0, 'segunda': 1, 'segunda-feira': 1, 'seg': 1, 'terça': 2, 'terça-feira': 2, 'ter': 2, 'quarta': 3, 'quarta-feira': 3, 'qua': 3,\n    'quinta': 4, 'quinta-feira': 4, 'qui': 4, 'sexta': 5, 'sexta-feira': 5, 'sex': 5, 'sábado': 6, 'sabado': 6, 'sab': 6,}\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(?:(?:\\\\,|\\\\(|\\\\（)\\\\s*)?' +\n    '(?:(este|esta|passado|pr[oó]ximo)\\\\s*)?' +\n    '(' + Object.keys(DAYS_OFFSET).join('|') + ')' +\n    '(?:\\\\s*(?:\\\\,|\\\\)|\\\\）))?' +\n    '(?:\\\\s*(este|esta|passado|pr[óo]ximo)\\\\s*semana)?' +\n    '(?=\\\\W|$)', 'i');\n\nvar PREFIX_GROUP = 2;\nvar WEEKDAY_GROUP = 3;\nvar POSTFIX_GROUP = 4;\n\nexports.Parser = function PTWeekdayParser() {\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n        var index = match.index + match[1].length;\n        var text = match[0].substr(match[1].length, match[0].length - match[1].length);\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref\n        });\n\n        var dayOfWeek = match[WEEKDAY_GROUP].toLowerCase();\n        var offset = DAYS_OFFSET[dayOfWeek];\n        if(offset === undefined) return null;\n\n        var modifier = null;\n        var prefix = match[PREFIX_GROUP];\n        var postfix = match[POSTFIX_GROUP];\n        if (prefix || postfix) {\n            var norm = prefix || postfix;\n            norm = norm.toLowerCase();\n\n            if(norm == 'passado') {\n                modifier = 'this';\n            }\n            else if(norm == 'próximo' || norm == 'proximo') {\n                modifier = 'next';\n            }\n            else if(norm== 'este') {\n                modifier =  'this';\n            }\n        }\n\n        updateParsedComponent(result, ref, offset, modifier);\n        result.tags['PTWeekdayParser'] = true;\n        return result;\n    }\n}\n","const dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\n/*\n  Valid patterns:\n  - esta mañana -> today in the morning\n  - esta tarde -> today in the afternoon/evening\n  - esta noche -> tonight\n  - ayer por la mañana -> yesterday in the morning\n  - ayer por la tarde -> yesterday in the afternoon/evening\n  - ayer por la noche -> yesterday at night\n  - mañana por la mañana -> tomorrow in the morning\n  - mañana por la tarde -> tomorrow in the afternoon/evening\n  - mañana por la noche -> tomorrow at night\n  - anoche -> tomorrow at night\n  - hoy -> today\n  - ayer -> yesterday\n  - mañana -> tomorrow\n */\nvar PATTERN = /(\\W|^)(ahora|esta\\s*(mañana|tarde|noche)|(ayer|mañana)\\s*por\\s*la\\s*(mañana|tarde|noche)|hoy|mañana|ayer|anoche)(?=\\W|$)/i;\n\nexports.Parser = function ESCasualDateParser(){\n\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n\n        var text = match[0].substr(match[1].length);\n        var index = match.index + match[1].length;\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref,\n        });\n\n        var refMoment = dayjs(ref);\n        var startMoment = refMoment;\n        var lowerText = text.toLowerCase().replace(/\\s+/g, ' ');\n\n        if(lowerText == 'mañana'){\n\n            // Check not \"Tomorrow\" on late night\n            if(refMoment.hour() > 1) {\n                startMoment = startMoment.add(1, 'day');\n            }\n\n        } else if(lowerText == 'ayer') {\n\n            startMoment = startMoment.add(-1, 'day');\n        }\n        else if(lowerText == 'anoche') {\n\n            result.start.imply('hour', 0);\n            if (refMoment.hour() > 6) {\n                startMoment = startMoment.add(-1, 'day');\n            }\n\n        } else if (lowerText.match(\"esta\")) {\n\n            var secondMatch = match[3].toLowerCase();\n            if (secondMatch == \"tarde\") {\n\n                result.start.imply('hour', 18);\n\n            } else if (secondMatch == \"mañana\") {\n\n                result.start.imply('hour', 6);\n\n            } else if (secondMatch == \"noche\") {\n\n              // Normally means this coming midnight\n              result.start.imply('hour', 22);\n              result.start.imply('meridiem', 1);\n\n            }\n        } else if (lowerText.match(/por\\s*la/)) {\n\n            var firstMatch = match[4].toLowerCase();\n            if (firstMatch === 'ayer') {\n\n                startMoment = startMoment.add(-1, 'day');\n\n            } else if (firstMatch === 'mañana') {\n\n                startMoment = startMoment.add(1, 'day');\n\n            }\n\n            var secondMatch = match[5].toLowerCase();\n            if (secondMatch == \"tarde\") {\n\n                result.start.imply('hour', 18);\n\n            } else if (secondMatch == \"mañana\") {\n\n                result.start.imply('hour', 9);\n\n            } else if (secondMatch == \"noche\") {\n\n              // Normally means this coming midnight\n              result.start.imply('hour', 22);\n              result.start.imply('meridiem', 1);\n\n            }\n\n        } else if (lowerText.match(\"ahora\")) {\n\n          result.start.imply('hour', refMoment.hour());\n          result.start.imply('minute', refMoment.minute());\n          result.start.imply('second', refMoment.second());\n          result.start.imply('millisecond', refMoment.millisecond());\n\n        }\n\n        result.start.assign('day', startMoment.date())\n        result.start.assign('month', startMoment.month() + 1)\n        result.start.assign('year', startMoment.year())\n        result.tags['ESCasualDateParser'] = true;\n        return result;\n    }\n}\n","const dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = /(\\W|^)(dentro\\s*de|en)\\s*([0-9]+|medi[oa]|una?)\\s*(minutos?|horas?|d[ií]as?)\\s*(?=(?:\\W|$))/i;\n\nexports.Parser = function ESDeadlineFormatParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n\n        var index = match.index + match[1].length;\n        var text  = match[0];\n        text  = match[0].substr(match[1].length, match[0].length - match[1].length);\n\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref,\n        });\n\n        var num = parseInt(match[3]);\n        if (isNaN(num)) {\n          if (match[3].match(/medi/)) {\n            num = 0.5;\n          } else {\n            num = 1;\n          }\n        }\n\n        var date = dayjs(ref);\n        if (match[4].match(/d[ií]a/)) {\n            date = date.add(num, 'd');\n            result.start.assign('year', date.year());\n            result.start.assign('month', date.month() + 1);\n            result.start.assign('day', date.date());\n            return result;\n        }\n\n\n        if (match[4].match(/hora/)) {\n\n            date = date.add(num, 'hour');\n\n        } else if (match[4].match(/minuto/)) {\n\n            date = date.add(num, 'minute');\n        }\n\n        result.start.imply('year', date.year());\n        result.start.imply('month', date.month() + 1);\n        result.start.imply('day', date.date());\n        result.start.assign('hour', date.hour());\n        result.start.assign('minute', date.minute());\n        result.tags['ESDeadlineFormatParser'] = true;\n        return result;\n    };\n}\n","const dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = /(\\W|^)hace\\s*([0-9]+|medi[oa]|una?)\\s*(minutos?|horas?|semanas?|d[ií]as?|mes(es)?|años?)(?=(?:\\W|$))/i;\n\nexports.Parser = function ESTimeAgoFormatParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return PATTERN;\n    }\n\n    this.extract = function(text, ref, match, opt){\n\n        if (match.index > 0 && text[match.index-1].match(/\\w/)) return null;\n\n        var text = match[0];\n        text  = match[0].substr(match[1].length, match[0].length - match[1].length);\n        let index = match.index + match[1].length;\n\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref,\n        });\n\n        var num = parseInt(match[2]);\n        if (isNaN(num)) {\n          if (match[2].match(/medi/)) {\n            num = 0.5;\n          } else {\n            num = 1;\n          }\n        }\n\n        var date = dayjs(ref);\n\n        if (match[3].match(/hora/) || match[3].match(/minuto/)) {\n            if (match[3].match(/hora/)) {\n\n                date = date.add(-num, 'hour');\n\n            } else if (match[3].match(/minuto/)) {\n\n                date = date.add(-num, 'minute');\n            }\n\n            result.start.imply('day', date.date());\n            result.start.imply('month', date.month() + 1);\n            result.start.imply('year', date.year());\n            result.start.assign('hour', date.hour());\n            result.start.assign('minute', date.minute());\n            result.tags['ESTimeAgoFormatParser'] = true;\n            return result;\n        }\n\n        if (match[3].match(/semana/)) {\n            date = date.add(-num, 'week');\n\n            result.start.imply('day', date.date());\n            result.start.imply('month', date.month() + 1);\n            result.start.imply('year', date.year());\n            result.start.imply('weekday', date.day());\n            return result;\n        }\n\n        if (match[3].match(/d[ií]a/)) {\n            date = date.add(-num, 'd');\n        }\n\n        if (match[3].match(/mes/)) {\n            date = date.add(-num, 'month');\n        }\n\n        if (match[3].match(/año/)) {\n\n            date = date.add(-num, 'year');\n        }\n\n        result.start.assign('day', date.date());\n        result.start.assign('month', date.month() + 1);\n        result.start.assign('year', date.year());\n        return result;\n\n    };\n}\n","const dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar ParsedComponents = require('../../result').ParsedComponents;\n\nvar FIRST_REG_PATTERN  = new RegExp(\"(^|\\\\s|T)\" +\n    \"(?:(?:a las?|al?|desde|de)\\\\s*)?\" +\n    \"(\\\\d{1,4}|mediod[ií]a|medianoche)\" +\n    \"(?:\" +\n        \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" +\n        \"(?:\" +\n            \"(?:\\\\:|\\\\：)(\\\\d{2})\" +\n        \")?\" +\n    \")?\" +\n    \"(?:\\\\s*(A\\\\.M\\\\.|P\\\\.M\\\\.|AM?|PM?))?\" +\n    \"(?=\\\\W|$)\", 'i');\n\n\nvar SECOND_REG_PATTERN = new RegExp(\"^\\\\s*\" +\n    \"(\\\\-|\\\\–|\\\\~|\\\\〜|a(?:\\s*las)?|\\\\?)\\\\s*\" +\n    \"(\\\\d{1,4})\" +\n    \"(?:\" +\n        \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" +\n        \"(?:\" +\n            \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" +\n        \")?\" +\n    \")?\" +\n    \"(?:\\\\s*(A\\\\.M\\\\.|P\\\\.M\\\\.|AM?|PM?))?\" +\n    \"(?=\\\\W|$)\", 'i');\n\nvar HOUR_GROUP    = 2;\nvar MINUTE_GROUP  = 3;\nvar SECOND_GROUP  = 4;\nvar AM_PM_HOUR_GROUP = 5;\n\nexports.Parser = function ESTimeExpressionParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return FIRST_REG_PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n\n        // This pattern can be overlaped Ex. [12] AM, 1[2] AM\n        if (match.index > 0 && text[match.index-1].match(/\\w/)) return null;\n        var refMoment = dayjs(ref);\n        var result = new ParsedResult();\n        result.ref = ref;\n        result.index = match.index + match[1].length;\n        result.text  = match[0].substring(match[1].length);\n        result.tags['ESTimeExpressionParser'] = true;\n\n        result.start.imply('day',   refMoment.date());\n        result.start.imply('month', refMoment.month()+1);\n        result.start.imply('year',  refMoment.year());\n\n        var hour = 0;\n        var minute = 0;\n        var meridiem = -1;\n\n        // ----- Second\n        if(match[SECOND_GROUP] != null){\n            var second = parseInt(match[SECOND_GROUP]);\n            if(second >= 60) return null;\n\n            result.start.assign('second', second);\n        }\n\n        // ----- Hours\n        if (match[HOUR_GROUP].toLowerCase().match(/mediod/)){\n            meridiem = 1;\n            hour = 12;\n        } else if (match[HOUR_GROUP].toLowerCase() == \"medianoche\") {\n            meridiem = 0;\n            hour = 0;\n        } else {\n            hour = parseInt(match[HOUR_GROUP]);\n        }\n\n        // ----- Minutes\n        if(match[MINUTE_GROUP] != null){\n            minute = parseInt(match[MINUTE_GROUP]);\n        } else if(hour > 100) {\n            minute = hour%100;\n            hour   = parseInt(hour/100);\n        }\n\n        if(minute >= 60) {\n            return null;\n        }\n\n        if(hour > 24) {\n            return null;\n        }\n        if (hour >= 12) {\n            meridiem = 1;\n        }\n\n        // ----- AM & PM\n        if(match[AM_PM_HOUR_GROUP] != null) {\n            if(hour > 12) return null;\n            var ampm = match[AM_PM_HOUR_GROUP][0].toLowerCase();\n            if(ampm == \"a\"){\n                meridiem = 0;\n                if(hour == 12) hour = 0;\n            }\n\n            if(ampm == \"p\"){\n                meridiem = 1;\n                if(hour != 12) hour += 12;\n            }\n        }\n        result.start.assign('hour', hour);\n        result.start.assign('minute', minute);\n        if (meridiem >= 0) {\n            result.start.assign('meridiem', meridiem);\n        }\n\n        // ==============================================================\n        //                  Extracting the 'to' chunk\n        // ==============================================================\n        match = SECOND_REG_PATTERN.exec(text.substring(result.index + result.text.length));\n        if (!match) {\n            // Not accept number only result\n            if (result.text.match(/^\\d+$/)) {\n                return null;\n            }\n            return result;\n        }\n\n\n\n        // Pattern \"YY.YY -XXXX\" is more like timezone offset\n        if (match[0].match(/^\\s*(\\+|\\-)\\s*\\d{3,4}$/)) {\n            return result;\n        }\n\n        if(result.end == null){\n            result.end = new ParsedComponents(null, result.start.date());\n        }\n\n        var hour = 0;\n        var minute = 0;\n        var meridiem = -1;\n\n        // ----- Second\n        if(match[SECOND_GROUP] != null){\n            var second = parseInt(match[SECOND_GROUP]);\n            if(second >= 60) return null;\n\n            result.end.assign('second', second);\n        }\n\n        hour = parseInt(match[2]);\n\n        // ----- Minute\n        if (match[MINUTE_GROUP]!= null) {\n\n            minute = parseInt(match[MINUTE_GROUP]);\n            if(minute >= 60) return result;\n\n        } else if (hour > 100) {\n\n            minute = hour%100;\n            hour   = parseInt(hour/100);\n        }\n\n        if(minute >= 60) {\n            return null;\n        }\n\n        if(hour > 24) {\n            return null;\n        }\n        if (hour >= 12) {\n            meridiem = 1;\n        }\n\n        // ----- AM & PM\n        if (match[AM_PM_HOUR_GROUP] != null){\n\n            if (hour > 12) return null;\n\n            if(match[AM_PM_HOUR_GROUP][0].toLowerCase() == \"a\"){\n                meridiem = 0;\n                if(hour == 12) {\n                    hour = 0;\n                    if (!result.end.isCertain('day')) {\n                        result.end.imply('day', result.end.get('day') + 1);\n                    }\n                }\n            }\n\n            if(match[AM_PM_HOUR_GROUP][0].toLowerCase() == \"p\"){\n                meridiem = 1;\n                if(hour != 12) hour += 12;\n            }\n\n            if (!result.start.isCertain('meridiem')) {\n                if (meridiem == 0) {\n\n                    result.start.imply('meridiem', 0);\n\n                    if (result.start.get('hour') == 12) {\n                        result.start.assign('hour', 0);\n                    }\n\n                } else {\n\n                    result.start.imply('meridiem', 1);\n\n                    if (result.start.get('hour') != 12) {\n                        result.start.assign('hour', result.start.get('hour') + 12);\n                    }\n                }\n            }\n\n        } else if(hour >= 12) {\n            meridiem = 1;\n        }\n\n        result.text = result.text + match[0];\n        result.end.assign('hour', hour);\n        result.end.assign('minute', minute);\n        if (meridiem >= 0) {\n            result.end.assign('meridiem', meridiem);\n        }\n\n        if (result.end.date().getTime() < result.start.date().getTime()) {\n            result.end.imply('day', result.end.get('day') + 1)\n        }\n\n        return result;\n    }\n}\n","var Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar updateParsedComponent = require('../en/ENWeekdayParser').updateParsedComponent;\n\nvar DAYS_OFFSET = { 'domingo': 0, 'dom': 0, 'lunes': 1, 'lun': 1, 'martes': 2, 'mar':2, 'miercoles': 3, 'miércoles': 3, 'mie': 3,\n    'jueves': 4, 'jue': 4, 'viernes': 5, 'vier': 5, 'sabado': 6, 'sábado': 6, 'sab': 6,}\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(?:(?:\\\\,|\\\\(|\\\\（)\\\\s*)?' +\n    '(?:(este|pasado|pr[oó]ximo)\\\\s*)?' +\n    '(' + Object.keys(DAYS_OFFSET).join('|') + ')' +\n    '(?:\\\\s*(?:\\\\,|\\\\)|\\\\）))?' +\n    '(?:\\\\s*(este|pasado|pr[óo]ximo)\\\\s*week)?' +\n    '(?=\\\\W|$)', 'i');\n\nvar PREFIX_GROUP = 2;\nvar WEEKDAY_GROUP = 3;\nvar POSTFIX_GROUP = 4;\n\nexports.Parser = function ESWeekdayParser() {\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n        var index = match.index + match[1].length;\n        var text = match[0].substr(match[1].length, match[0].length - match[1].length);\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref\n        });\n\n        var dayOfWeek = match[WEEKDAY_GROUP].toLowerCase();\n        var offset = DAYS_OFFSET[dayOfWeek];\n        if(offset === undefined) return null;\n\n        var modifier = null;\n        var prefix = match[PREFIX_GROUP];\n        var postfix = match[POSTFIX_GROUP];\n        if (prefix || postfix) {\n            var norm = prefix || postfix;\n            norm = norm.toLowerCase();\n\n            if(norm == 'pasado') {\n                modifier = 'this';\n            }\n            else if(norm == 'próximo' || norm == 'proximo') {\n                modifier = 'next';\n            }\n            else if(norm== 'este') {\n                modifier =  'this';\n            }\n        }\n\n        updateParsedComponent(result, ref, offset, modifier);\n        result.tags['ESWeekdayParser'] = true;\n        return result;\n    }\n}\n","var parser = require('../parser');\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar util  = require('../../utils/ES');\n\nvar DAYS_OFFSET = util.WEEKDAY_OFFSET;\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n        '(?:(Domingo|Lunes|Martes|Miércoles|Miercoles|Jueves|Viernes|Sábado|Sabado|Dom|Lun|Mar|Mie|Jue|Vie|Sab)\\\\s*,?\\\\s*)?' +\n        '([0-9]{1,2})(?:º|ª|°)?' +\n        '(?:\\\\s*(?:desde|de|\\\\-|\\\\–|al?|hasta|\\\\s)\\\\s*([0-9]{1,2})(?:º|ª|°)?)?\\\\s*(?:de)?\\\\s*' +\n        '(Ene(?:ro|\\\\.)?|Feb(?:rero|\\\\.)?|Mar(?:zo|\\\\.)?|Abr(?:il|\\\\.)?|May(?:o|\\\\.)?|Jun(?:io|\\\\.)?|Jul(?:io|\\\\.)?|Ago(?:sto|\\\\.)?|Sep(?:tiembre|\\\\.)?|Set(?:iembre|\\\\.)?|Oct(?:ubre|\\\\.)?|Nov(?:iembre|\\\\.)?|Dic(?:iembre|\\\\.)?)' +\n        '(?:\\\\s*(?:del?)?(\\\\s*[0-9]{1,4}(?![^\\\\s]\\\\d))(\\\\s*[ad]\\\\.?\\\\s*c\\\\.?|a\\\\.?\\\\s*d\\\\.?)?)?' +\n        '(?=\\\\W|$)', 'i'\n    );\n\nvar WEEKDAY_GROUP = 2;\nvar DATE_GROUP = 3;\nvar DATE_TO_GROUP = 4;\nvar MONTH_NAME_GROUP = 5;\nvar YEAR_GROUP = 6;\nvar YEAR_BE_GROUP = 7;\n\nexports.Parser = function ESMonthNameLittleEndianParser(){\n    parser.Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n\n        var result = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index: match.index + match[1].length,\n            ref: ref,\n        });\n\n        var month = match[MONTH_NAME_GROUP];\n        month = util.MONTH_OFFSET[month.toLowerCase()];\n\n        var day = match[DATE_GROUP];\n        day = parseInt(day);\n\n        var year = null;\n        if (match[YEAR_GROUP]) {\n            year = match[YEAR_GROUP];\n            year = parseInt(year);\n\n            if(match[YEAR_BE_GROUP]){\n                if (/a\\.?\\s*c\\.?/i.test(match[YEAR_BE_GROUP])) {\n                    // antes de Cristo\n                    year = -year;\n                }\n            } else if (year < 100){\n\n                year = year + 2000;\n            }\n        }\n\n        if(year){\n            result.start.assign('day', day);\n            result.start.assign('month', month);\n            result.start.assign('year', year);\n        } else {\n            year = parser.findYearClosestToRef(ref, day, month);\n            result.start.assign('day', day);\n            result.start.assign('month', month);\n            result.start.imply('year', year);\n        }\n\n        // Weekday component\n        if (match[WEEKDAY_GROUP]) {\n            var weekday = match[WEEKDAY_GROUP];\n            weekday = util.WEEKDAY_OFFSET[weekday.toLowerCase()]\n            result.start.assign('weekday', weekday);\n        }\n\n        // Text can be 'range' value. Such as '12 - 13 January 2012'\n        if (match[DATE_TO_GROUP]) {\n            result.end = result.start.clone();\n            result.end.assign('day', parseInt(match[DATE_TO_GROUP]));\n        }\n\n        result.tags['ESMonthNameLittleEndianParser'] = true;\n        return result;\n    };\n}\n","exports.WEEKDAY_OFFSET = {\n    'domingo': 0,\n    'dom': 0,\n    'lunes': 1,\n    'lun': 1,\n    'martes': 2,\n    'mar':2,\n    'miércoles': 3,\n    'miercoles': 3,\n    'mie': 3,\n    'jueves': 4,\n    'jue': 4,\n    'viernes': 5,\n    'vie': 5,\n    'sábado': 6,\n    'sabado': 6,\n    'sab': 6,}\n\nexports.MONTH_OFFSET = {\n    'enero': 1,\n    'ene': 1,\n    'ene.': 1,\n    'febrero': 2,\n    'feb': 2,\n    'feb.': 2,\n    'marzo': 3,\n    'mar': 3,\n    'mar.': 3,\n    'abril': 4,\n    'abr': 4,\n    'abr.': 4,\n    'mayo': 5,\n    'may': 5,\n    'may.': 5,\n    'junio': 6,\n    'jun': 6,\n    'jun.': 6,\n    'julio': 7,\n    'jul': 7,\n    'jul.': 7,\n    'agosto': 8,\n    'ago': 8,\n    'ago.': 8,\n    'septiembre': 9,\n    'sep': 9,\n    'sept': 9,\n    'sep.': 9,\n    'sept.': 9,\n    'octubre': 10,\n    'oct': 10,\n    'oct.': 10,\n    'noviembre': 11,\n    'nov': 11,\n    'nov.': 11,\n    'diciembre': 12,\n    'dic': 12,\n    'dic.': 12,\n}\n","/*\n    Date format with slash \"/\" (also \"-\" and \".\") between numbers\n    - Martes 3/11/2015\n    - 3/11/2015\n    - 3/11\n*/\nconst dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(?:' +\n        '((?:domingo|dom|lunes|lun|martes|mar|mi[ée]rcoles|mie|jueves|jue|viernes|vie|s[áa]bado|sab))' +\n        '\\\\s*\\\\,?\\\\s*' +\n    ')?' +\n    '([0-1]{0,1}[0-9]{1})[\\\\/\\\\.\\\\-]([0-3]{0,1}[0-9]{1})' +\n    '(?:' +\n        '[\\\\/\\\\.\\\\-]' +\n        '([0-9]{4}\\s*\\,?\\s*|[0-9]{2}\\s*\\,?\\s*)' +\n    ')?' +\n    '(\\\\W|$)', 'i');\n\nvar DAYS_OFFSET = { 'domingo': 0, 'dom': 0, 'lunes': 1, 'lun': 1, 'martes': 2, 'mar': 2, 'miercoles': 3, 'miércoles': 3, 'mie': 3,\n    'jueves': 4, 'jue': 4, 'viernes': 5, 'vier': 5, 'sábado': 6, 'sabado': 6, 'sab': 6,}\n\n\nvar OPENNING_GROUP = 1;\nvar ENDING_GROUP = 6;\n\n// in Spanish we use day/month/year\nvar WEEKDAY_GROUP = 2;\nvar MONTH_GROUP = 4;\nvar DAY_GROUP = 3;\nvar YEAR_GROUP = 5;\n\nexports.Parser = function ESSlashDateFormatParser(argument) {\n    Parser.apply(this, arguments);\n\n    this.pattern = function () { return PATTERN; };\n    this.extract = function(text, ref, match, opt){\n\n        if(match[OPENNING_GROUP] == '/' || match[ENDING_GROUP] == '/') {\n            // Long skip, if there is some overlapping like:\n            // XX[/YY/ZZ]\n            // [XX/YY/]ZZ\n            match.index += match[0].length\n            return;\n        }\n\n        var index = match.index + match[OPENNING_GROUP].length;\n        var text = match[0].substr(match[OPENNING_GROUP].length, match[0].length - match[ENDING_GROUP].length);\n\n\n        var result = new ParsedResult({\n            text: text,\n            index: index,\n            ref: ref,\n        });\n\n        if(text.match(/^\\d\\.\\d$/)) return;\n        if(text.match(/^\\d\\.\\d{1,2}\\.\\d{1,2}$/)) return;\n\n        // MM/dd -> OK\n        // MM.dd -> NG\n        if(!match[YEAR_GROUP] && match[0].indexOf('/') < 0) return;\n\n        var date = null;\n        var year = match[YEAR_GROUP] || dayjs(ref).year() + '';\n        var month = match[MONTH_GROUP];\n        var day   = match[DAY_GROUP];\n\n        month = parseInt(month);\n        day  = parseInt(day);\n        year = parseInt(year);\n\n        if(month < 1 || month > 12) {\n            if(month > 12) {\n                // dd/mm/yyyy date format if day looks like a month, and month\n                // looks like a day.\n                if (day >= 1 && day <= 12 && month >= 13 && month <= 31) {\n                    // unambiguous\n                    var tday = month;\n                    month = day;\n                    day = tday;\n                }\n                else {\n                    // both month and day are <= 12\n                    return null;\n                }\n            }\n        }\n        if(day < 1 || day > 31) return null;\n\n        if(year < 100){\n            if(year > 50){\n                year = year + 1900;\n            }else{\n                year = year + 2000;\n            }\n        }\n\n        result.start.assign('day', day);\n        result.start.assign('month', month);\n        result.start.assign('year', year);\n\n        //Day of week\n        if(match[WEEKDAY_GROUP]) {\n            result.start.assign('weekday', DAYS_OFFSET[match[WEEKDAY_GROUP].toLowerCase()]);\n        }\n\n        result.tags['ESSlashDateFormatParser'] = true;\n        return result;\n    };\n};","const dayjs = require('dayjs');\r\nvar Parser = require('../parser').Parser;\r\nvar ParsedResult = require('../../result').ParsedResult;\r\n\r\nvar PATTERN = /(\\W|^)(maintenant|aujourd'hui|ajd|cette\\s*nuit|la\\s*veille|(demain|hier)(\\s*(matin|soir|aprem|après-midi))?|ce\\s*(matin|soir)|cet\\s*(après-midi|aprem))(?=\\W|$)/i;\r\n\r\nexports.Parser = function FRCasualDateParser(){\r\n\r\n    Parser.apply(this, arguments);\r\n\r\n    this.pattern = function() { return PATTERN; }\r\n\r\n    this.extract = function(text, ref, match, opt){\r\n\r\n        var text = match[0].substr(match[1].length);\r\n        var index = match.index + match[1].length;\r\n        var result = new ParsedResult({\r\n            index: index,\r\n            text: text,\r\n            ref: ref,\r\n        });\r\n\r\n        var refMoment = dayjs(ref);\r\n        var startMoment = refMoment;\r\n        var lowerText = text.toLowerCase();\r\n\r\n        if(lowerText.match(/demain/)){\r\n            // Check not \"Tomorrow\" on late night\r\n            if(refMoment.hour() > 1) {\r\n                startMoment = startMoment.add(1, 'day');\r\n            }\r\n        } \r\n\r\n        if(lowerText.match(/hier/)) {\r\n            startMoment = startMoment.add(-1, 'day');\r\n        }\r\n\r\n        if(lowerText.match(/cette\\s*nuit/)){\r\n            // Normally means this coming midnight\r\n            result.start.imply('hour', 22);\r\n            result.start.imply('meridiem', 1);\r\n\r\n        } else if(lowerText.match(/la\\s*veille/)) {\r\n\r\n            result.start.imply('hour', 0);\r\n            if (refMoment.hour() > 6) {\r\n                startMoment = startMoment.add(-1, 'day');\r\n            }\r\n\r\n        } else if (lowerText.match(/(après-midi|aprem)/)) {\r\n\r\n            result.start.imply('hour', 14);\r\n\r\n        } else if (lowerText.match(/(soir)/)) {\r\n\r\n            result.start.imply('hour', 18);\r\n\r\n        } else if (lowerText.match(/matin/)) {\r\n\r\n            result.start.imply('hour', 8);\r\n\r\n        }  else if (lowerText.match(\"maintenant\")) {\r\n\r\n          result.start.imply('hour', refMoment.hour());\r\n          result.start.imply('minute', refMoment.minute());\r\n          result.start.imply('second', refMoment.second());\r\n          result.start.imply('millisecond', refMoment.millisecond());\r\n\r\n        }\r\n\r\n        result.start.assign('day', startMoment.date())\r\n        result.start.assign('month', startMoment.month() + 1)\r\n        result.start.assign('year', startMoment.year())\r\n        result.tags['FRCasualDateParser'] = true;\r\n        return result;\r\n    }\r\n}\r\n","const dayjs = require('dayjs');\r\nvar Parser = require('../parser').Parser;\r\nvar ParsedResult = require('../../result').ParsedResult;\r\nvar util  = require('../../utils/FR');\r\n\r\nvar PATTERN = new RegExp('(\\\\W|^)' +\r\n    '(dans|en)\\\\s*' +\r\n    '('+ util.INTEGER_WORDS_PATTERN + '|[0-9]+|une?|(?:\\\\s*quelques)?|demi(?:\\\\s*|-?)?)\\\\s*' +\r\n    '(secondes?|min(?:ute)?s?|heures?|jours?|semaines?|mois|années?)\\\\s*' +\r\n    '(?=\\\\W|$)', 'i'\r\n);\r\n\r\nvar STRICT_PATTERN = new RegExp('(\\\\W|^)' +\r\n    '(dans|en)\\\\s*' +\r\n    '('+ util.INTEGER_WORDS_PATTERN + '|[0-9]+|un?)\\\\s*' +\r\n    '(secondes?|minutes?|heures?|jours?)\\\\s*' +\r\n    '(?=\\\\W|$)', 'i'\r\n);\r\n\r\nexports.Parser = function FRDeadlineFormatParser(){\r\n    Parser.apply(this, arguments);\r\n\r\n    this.pattern = function() {\r\n        return this.isStrictMode()? STRICT_PATTERN : PATTERN;\r\n    };\r\n\r\n    this.extract = function(text, ref, match, opt){\r\n\r\n        var index = match.index + match[1].length;\r\n        var text  = match[0];\r\n        text  = match[0].substr(match[1].length, match[0].length - match[1].length);\r\n\r\n        var result = new ParsedResult({\r\n            index: index,\r\n            text: text,\r\n            ref: ref\r\n        });\r\n\r\n        var num = match[3];\r\n        if (util.INTEGER_WORDS[num] !== undefined) {\r\n            num = util.INTEGER_WORDS[num];\r\n        } else if (num === 'un' || num === 'une'){\r\n            num = 1;\r\n        } else if (num.match(/quelques?/i)){\r\n            num = 3;\r\n        } else if (num.match(/demi-?/i)) {\r\n            num = 0.5;\r\n        } else {\r\n            num = parseInt(num);\r\n        }\r\n\r\n        var date = dayjs(ref);\r\n        if (match[4].match(/jour|semaine|mois|année/i)) {\r\n\r\n            if (match[4].match(/jour/)) {\r\n                date = date.add(num, 'd');\r\n            } else if (match[4].match(/semaine/i)) {\r\n                date = date.add(num * 7, 'd');\r\n            } else if (match[4].match(/mois/i)) {\r\n                date = date.add(num, 'month');\r\n            } else if (match[4].match(/année/i)) {\r\n                date = date.add(num, 'year');\r\n            }\r\n\r\n            result.start.assign('year', date.year());\r\n            result.start.assign('month', date.month() + 1);\r\n            result.start.assign('day', date.date());\r\n            return result;\r\n        }\r\n\r\n        if (match[4].match(/heure/i)) {\r\n\r\n            date = date.add(num, 'hour');\r\n\r\n        } else if (match[4].match(/min/i)) {\r\n\r\n            date = date.add(num, 'minutes');\r\n\r\n        } else if (match[4].match(/secondes/i)) {\r\n\r\n            date = date.add(num, 'second');\r\n        }\r\n\r\n        result.start.imply('year', date.year());\r\n        result.start.imply('month', date.month() + 1);\r\n        result.start.imply('day', date.date());\r\n        result.start.assign('hour', date.hour());\r\n        result.start.assign('minute', date.minute());\r\n        result.start.assign('second', date.second());\r\n        result.tags['FRDeadlineFormatParser'] = true;\r\n        return result;\r\n    };\r\n};\r\n","const parser = require('../parser');\r\nvar ParsedResult = require('../../result').ParsedResult;\r\n\r\nvar util  = require('../../utils/FR');\r\n\r\nvar DAYS_OFFSET = util.WEEKDAY_OFFSET;\r\n\r\nvar PATTERN = new RegExp('(\\\\W|^)' +\r\n        '(?:(Dimanche|Lundi|Mardi|mercredi|Jeudi|Vendredi|Samedi|Dim|Lun|Mar|Mer|Jeu|Ven|Sam)\\\\s*,?\\\\s*)?' +\r\n        '([0-9]{1,2}|1er)' +\r\n        '(?:\\\\s*(?:au|\\\\-|\\\\–|jusqu\\'au?|\\\\s)\\\\s*([0-9]{1,2})(?:er)?)?\\\\s*(?:de)?\\\\s*' +\r\n        '(Jan(?:vier|\\\\.)?|F[ée]v(?:rier|\\\\.)?|Mars|Avr(?:il|\\\\.)?|Mai|Juin|Juil(?:let|\\\\.)?|Ao[uû]t|Sept(?:embre|\\\\.)?|Oct(?:obre|\\\\.)?|Nov(?:embre|\\\\.)?|d[ée]c(?:embre|\\\\.)?)' +\r\n        '(?:\\\\s*(\\\\s*[0-9]{1,4}(?![^\\\\s]\\\\d))(?:\\\\s*(AC|[ap]\\\\.?\\\\s*c(?:h(?:r)?)?\\\\.?\\\\s*n\\\\.?))?)?' +\r\n        '(?=\\\\W|$)', 'i'\r\n    );\r\n\r\nvar WEEKDAY_GROUP = 2;\r\nvar DATE_GROUP = 3;\r\nvar DATE_TO_GROUP = 4;\r\nvar MONTH_NAME_GROUP = 5;\r\nvar YEAR_GROUP = 6;\r\nvar YEAR_BE_GROUP = 7;\r\n\r\nexports.Parser = function FRMonthNameLittleEndianParser(){\r\n    parser.Parser.apply(this, arguments);\r\n\r\n    this.pattern = function() { return PATTERN; }\r\n\r\n    this.extract = function(text, ref, match, opt){\r\n\r\n        var result = new ParsedResult({\r\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\r\n            index: match.index + match[1].length,\r\n            ref: ref,\r\n        });\r\n\r\n        var month = match[MONTH_NAME_GROUP];\r\n        month = util.MONTH_OFFSET[month.toLowerCase()];\r\n\r\n        var day = match[DATE_GROUP];\r\n        day = parseInt(day);\r\n\r\n        var year = null;\r\n        if (match[YEAR_GROUP]) {\r\n            year = match[YEAR_GROUP];\r\n            year = parseInt(year);\r\n\r\n            if(match[YEAR_BE_GROUP]){\r\n                if (/a/i.test(match[YEAR_BE_GROUP])) {\r\n                    // Ante Christe natum\r\n                    year = -year;\r\n                }\r\n            } else if (year < 100){\r\n\r\n                year = year + 2000;\r\n            }\r\n        }\r\n\r\n        if(year){\r\n            result.start.assign('day', day);\r\n            result.start.assign('month', month);\r\n            result.start.assign('year', year);\r\n        } else {\r\n            year = parser.findYearClosestToRef(ref, day, month)\r\n            result.start.assign('day', day);\r\n            result.start.assign('month', month);\r\n            result.start.imply('year', year);\r\n        }\r\n\r\n        // Weekday component\r\n        if (match[WEEKDAY_GROUP]) {\r\n            var weekday = match[WEEKDAY_GROUP];\r\n            weekday = util.WEEKDAY_OFFSET[weekday.toLowerCase()]\r\n            result.start.assign('weekday', weekday);\r\n        }\r\n\r\n        // Text can be 'range' value. Such as '12 - 13 janvier 2012'\r\n        if (match[DATE_TO_GROUP]) {\r\n            result.end = result.start.clone();\r\n            result.end.assign('day', parseInt(match[DATE_TO_GROUP]));\r\n        }\r\n\r\n        result.tags['FRMonthNameLittleEndianParser'] = true;\r\n        return result;\r\n    };\r\n}\r\n","/*\r\n    Date format with slash \"/\" (also \"-\" and \".\") between numbers\r\n    - Martes 3/11/2015\r\n    - 3/11/2015\r\n    - 3/11\r\n*/\r\nvar parser = require('../parser');\r\nvar ParsedResult = require('../../result').ParsedResult;\r\n\r\nvar PATTERN = new RegExp('(\\\\W|^)' +\r\n    '(?:' +\r\n        '((?:dimanche|dim|lundi|lun|mardi|mar|mercredi|mer|jeudi|jeu|vendredi|ven|samedi|sam|le))' +\r\n        '\\\\s*\\\\,?\\\\s*' +\r\n    ')?' +\r\n    '([0-3]{0,1}[0-9]{1})[\\\\/\\\\.\\\\-]([0-3]{0,1}[0-9]{1})' +\r\n    '(?:' +\r\n        '[\\\\/\\\\.\\\\-]' +\r\n        '([0-9]{4}\\s*\\,?\\s*|[0-9]{2}\\s*\\,?\\s*)' +\r\n    ')?' +\r\n    '(\\\\W|$)', 'i');\r\n\r\nvar DAYS_OFFSET = { 'dimanche': 0, 'dim': 0, 'lundi': 1, 'lun': 1,'mardi': 2, 'mar':2, 'mercredi': 3, 'mer': 3,\r\n    'jeudi': 4, 'jeu':4, 'vendredi': 5, 'ven': 5,'samedi': 6, 'sam': 6};\r\n\r\n\r\nvar OPENNING_GROUP = 1;\r\nvar ENDING_GROUP = 6;\r\n\r\n// In French we use day/month/year\r\nvar WEEKDAY_GROUP = 2;\r\nvar DAY_GROUP = 3;\r\nvar MONTH_GROUP = 4;\r\nvar YEAR_GROUP = 5;\r\n\r\nexports.Parser = function FRSlashDateFormatParser(argument) {\r\n    parser.Parser.apply(this, arguments);\r\n\r\n    this.pattern = function () { return PATTERN; };\r\n    this.extract = function(text, ref, match, opt){\r\n\r\n        if(match[OPENNING_GROUP] == '/' || match[ENDING_GROUP] == '/') {\r\n            // Long skip, if there is some overlapping like:\r\n            // XX[/YY/ZZ]\r\n            // [XX/YY/]ZZ\r\n            match.index += match[0].length\r\n            return;\r\n        }\r\n\r\n        var index = match.index + match[OPENNING_GROUP].length;\r\n        var text = match[0].substr(match[OPENNING_GROUP].length, match[0].length - match[ENDING_GROUP].length);\r\n\r\n\r\n        var result = new ParsedResult({\r\n            text: text,\r\n            index: index,\r\n            ref: ref,\r\n        });\r\n\r\n        if(text.match(/^\\d\\.\\d$/)) return;\r\n        if(text.match(/^\\d\\.\\d{1,2}\\.\\d{1,2}$/)) return;\r\n\r\n        // MM/dd -> OK\r\n        // MM.dd -> NG\r\n        if(!match[YEAR_GROUP] && match[0].indexOf('/') < 0) return;\r\n\r\n        var date = null;\r\n        var month = match[MONTH_GROUP];\r\n        var day   = match[DAY_GROUP];\r\n\r\n        day  = parseInt(day);\r\n        month = parseInt(month);\r\n\r\n        var year = null;\r\n        if (match[YEAR_GROUP]) {\r\n            year = match[YEAR_GROUP];\r\n            year = parseInt(year);\r\n\r\n            if (year < 100){\r\n                year = year + 2000;\r\n            }\r\n        }\r\n\r\n        if(month < 1 || month > 12) {\r\n            if(month > 12) {\r\n                // dd/mm/yyyy date format if day looks like a month, and month looks like a day.\r\n                if (day >= 1 && day <= 12 && month >= 13 && month <= 31) {\r\n                    // unambiguous\r\n                    var tday = month;\r\n                    month = day;\r\n                    day = tday;\r\n                }\r\n                else {\r\n                    // both month and day are <= 12\r\n                    return null;\r\n                }\r\n            }\r\n        }\r\n\r\n        if(day < 1 || day > 31) return null;\r\n\r\n        if(year){\r\n            result.start.assign('day', day);\r\n            result.start.assign('month', month);\r\n            result.start.assign('year', year);\r\n        } else {\r\n            year = parser.findYearClosestToRef(ref, day, month)\r\n            result.start.assign('day', day);\r\n            result.start.assign('month', month);\r\n            result.start.imply('year', year);\r\n        }\r\n\r\n        // Day of week\r\n        if(match[WEEKDAY_GROUP]) {\r\n            result.start.assign('weekday', DAYS_OFFSET[match[WEEKDAY_GROUP].toLowerCase()]);\r\n        }\r\n\r\n        result.tags['FRSlashDateFormatParser'] = true;\r\n        return result;\r\n    };\r\n};","const dayjs = require('dayjs');\r\nvar Parser = require('../parser').Parser;\r\nvar ParsedResult = require('../../result').ParsedResult;\r\n\r\nvar PATTERN = /(\\W|^)il y a\\s*([0-9]+|une?)\\s*(minutes?|heures?|semaines?|jours?|mois|années?|ans?)(?=(?:\\W|$))/i;\r\n\r\nexports.Parser = function FRTimeAgoFormatParser(){\r\n    Parser.apply(this, arguments);\r\n\r\n    this.pattern = function() {\r\n        return PATTERN;\r\n    }\r\n\r\n    this.extract = function(text, ref, match, opt){\r\n\r\n        if (match.index > 0 && text[match.index-1].match(/\\w/)) return null;\r\n\r\n        var text = match[0];\r\n        text  = match[0].substr(match[1].length, match[0].length - match[1].length);\r\n        let index = match.index + match[1].length;\r\n\r\n        var result = new ParsedResult({\r\n            index: index,\r\n            text: text,\r\n            ref: ref,\r\n        });\r\n        result.tags['FRTimeAgoFormatParser'] = true;\r\n        \r\n        var num = parseInt(match[2]);\r\n        if (isNaN(num)) {\r\n          if (match[2].match(/demi/)) {\r\n            num = 0.5;\r\n          } else {\r\n            num = 1;\r\n          }\r\n        }\r\n\r\n        var date = dayjs(ref);\r\n\r\n        if (match[3].match(/heure/) || match[3].match(/minute/)) {\r\n            if (match[3].match(/heure/)) {\r\n\r\n                date = date.add(-num, 'hour');\r\n\r\n            } else if (match[3].match(/minute/)) {\r\n\r\n                date = date.add(-num, 'minute');\r\n            }\r\n\r\n            result.start.imply('day', date.date());\r\n            result.start.imply('month', date.month() + 1);\r\n            result.start.imply('year', date.year());\r\n            result.start.assign('hour', date.hour());\r\n            result.start.assign('minute', date.minute());\r\n\r\n            return result;\r\n        }\r\n\r\n        if (match[3].match(/semaine/)) {\r\n            date = date.add(-num, 'week');\r\n\r\n            result.start.imply('day', date.date());\r\n            result.start.imply('month', date.month() + 1);\r\n            result.start.imply('year', date.year());\r\n            result.start.imply('weekday', date.day());\r\n            return result;\r\n        }\r\n\r\n        if (match[3].match(/jour/)) {\r\n            date = date.add(-num, 'd');\r\n        }\r\n\r\n        if (match[3].match(/mois/)) {\r\n            date = date.add(-num, 'month');\r\n        }\r\n\r\n        if (match[3].match(/années?|ans?/)) {\r\n            date = date.add(-num, 'year');\r\n        }\r\n\r\n        result.start.assign('day', date.date());\r\n        result.start.assign('month', date.month() + 1);\r\n        result.start.assign('year', date.year());\r\n        return result;\r\n\r\n    };\r\n}\r\n","const dayjs = require('dayjs');\r\nvar Parser = require('../parser').Parser;\r\nvar ParsedResult = require('../../result').ParsedResult;\r\nvar ParsedComponents = require('../../result').ParsedComponents;\r\n\r\nvar FIRST_REG_PATTERN  = new RegExp(\"(^|\\\\s|T)\" +\r\n    \"(?:(?:[àa])\\\\s*)?\" +\r\n    \"(\\\\d{1,2}(?:h)?|midi|minuit)\" +\r\n    \"(?:\" +\r\n        \"(?:\\\\.|\\\\:|\\\\：|h)(\\\\d{1,2})(?:m)?\" +\r\n        \"(?:\" +\r\n            \"(?:\\\\:|\\\\：|m)(\\\\d{0,2})(?:s)?\" +\r\n        \")?\" +\r\n    \")?\" +\r\n    \"(?:\\\\s*(A\\\\.M\\\\.|P\\\\.M\\\\.|AM?|PM?))?\" +\r\n    \"(?=\\\\W|$)\", 'i');\r\n\r\n\r\nvar SECOND_REG_PATTERN = new RegExp(\"^\\\\s*\" +\r\n    \"(\\\\-|\\\\–|\\\\~|\\\\〜|[àa]|\\\\?)\\\\s*\" +\r\n    \"(\\\\d{1,2}(?:h)?)\" +\r\n    \"(?:\" +\r\n        \"(?:\\\\.|\\\\:|\\\\：|h)(\\\\d{1,2})(?:m)?\" +\r\n        \"(?:\" +\r\n            \"(?:\\\\.|\\\\:|\\\\：|m)(\\\\d{1,2})(?:s)?\" +\r\n        \")?\" +\r\n    \")?\" +\r\n    \"(?:\\\\s*(A\\\\.M\\\\.|P\\\\.M\\\\.|AM?|PM?))?\" +\r\n    \"(?=\\\\W|$)\", 'i');\r\n\r\nvar HOUR_GROUP    = 2;\r\nvar MINUTE_GROUP  = 3;\r\nvar SECOND_GROUP  = 4;\r\nvar AM_PM_HOUR_GROUP = 5;\r\n\r\nexports.Parser = function FRTimeExpressionParser(){\r\n    Parser.apply(this, arguments);\r\n\r\n    this.pattern = function() { return FIRST_REG_PATTERN; }\r\n\r\n    this.extract = function(text, ref, match, opt){\r\n\r\n        // This pattern can be overlaped Ex. [12] AM, 1[2] AM\r\n        if (match.index > 0 && text[match.index-1].match(/\\w/)) return null;\r\n        var refMoment = dayjs(ref);\r\n        var result = new ParsedResult();\r\n        result.ref = ref;\r\n        result.index = match.index + match[1].length;\r\n        result.text  = match[0].substring(match[1].length);\r\n        result.tags['FRTimeExpressionParser'] = true;\r\n\r\n        result.start.imply('day',   refMoment.date());\r\n        result.start.imply('month', refMoment.month()+1);\r\n        result.start.imply('year',  refMoment.year());\r\n\r\n        var hour = 0;\r\n        var minute = 0;\r\n        var meridiem = -1;\r\n\r\n        // ----- Second\r\n        if(match[SECOND_GROUP] != null){\r\n            var second = parseInt(match[SECOND_GROUP]);\r\n            if(second >= 60) return null;\r\n\r\n            result.start.assign('second', second);\r\n        }\r\n\r\n        // ----- Hours\r\n        if (match[HOUR_GROUP].toLowerCase() == \"midi\"){\r\n            meridiem = 1;\r\n            hour = 12;\r\n        } else if (match[HOUR_GROUP].toLowerCase() == \"minuit\") {\r\n            meridiem = 0;\r\n            hour = 0;\r\n        } else {\r\n            hour = parseInt(match[HOUR_GROUP]);\r\n        }\r\n\r\n        // ----- Minutes\r\n        if(match[MINUTE_GROUP] != null){\r\n            minute = parseInt(match[MINUTE_GROUP]);\r\n        } else if(hour > 100) {\r\n            minute = hour%100;\r\n            hour   = parseInt(hour/100);\r\n        }\r\n\r\n        if(minute >= 60) {\r\n            return null;\r\n        }\r\n\r\n        if(hour > 24) {\r\n            return null;\r\n        }\r\n        if (hour >= 12) {\r\n            meridiem = 1;\r\n        }\r\n\r\n        // ----- AM & PM\r\n        if(match[AM_PM_HOUR_GROUP] != null) {\r\n            if(hour > 12) return null;\r\n            var ampm = match[AM_PM_HOUR_GROUP][0].toLowerCase();\r\n            if(ampm == \"a\"){\r\n                meridiem = 0;\r\n                if(hour == 12) hour = 0;\r\n            }\r\n\r\n            if(ampm == \"p\"){\r\n                meridiem = 1;\r\n                if(hour != 12) hour += 12;\r\n            }\r\n        }\r\n        result.start.assign('hour', hour);\r\n        result.start.assign('minute', minute);\r\n        if (meridiem >= 0) {\r\n            result.start.assign('meridiem', meridiem);\r\n        }\r\n\r\n        // ==============================================================\r\n        //                  Extracting the 'to' chunk\r\n        // ==============================================================\r\n        match = SECOND_REG_PATTERN.exec(text.substring(result.index + result.text.length));\r\n        if (!match) {\r\n            // Not accept number only result\r\n            if (result.text.match(/^\\d+$/)) {\r\n                return null;\r\n            }\r\n            return result;\r\n        }\r\n\r\n\r\n\r\n        // Pattern \"YY.YY -XXXX\" is more like timezone offset\r\n        if (match[0].match(/^\\s*(\\+|\\-)\\s*\\d{3,4}$/)) {\r\n            return result;\r\n        }\r\n\r\n        if(result.end == null){\r\n            result.end = new ParsedComponents(null, result.start.date());\r\n        }\r\n\r\n        var hour = 0;\r\n        var minute = 0;\r\n        var meridiem = -1;\r\n\r\n        // ----- Second\r\n        if(match[SECOND_GROUP] != null){\r\n            var second = parseInt(match[SECOND_GROUP]);\r\n            if(second >= 60) return null;\r\n\r\n            result.end.assign('second', second);\r\n        }\r\n\r\n        hour = parseInt(match[2]);\r\n\r\n        // ----- Minute\r\n        if (match[MINUTE_GROUP]!= null) {\r\n\r\n            minute = parseInt(match[MINUTE_GROUP]);\r\n            if(minute >= 60) return result;\r\n\r\n        } else if (hour > 100) {\r\n\r\n            minute = hour%100;\r\n            hour   = parseInt(hour/100);\r\n        }\r\n\r\n        if(minute >= 60) {\r\n            return null;\r\n        }\r\n\r\n        if(hour > 24) {\r\n            return null;\r\n        }\r\n        if (hour >= 12) {\r\n            meridiem = 1;\r\n        }\r\n\r\n        // ----- AM & PM\r\n        if (match[AM_PM_HOUR_GROUP] != null){\r\n\r\n            if (hour > 12) return null;\r\n\r\n            var ampm = match[AM_PM_HOUR_GROUP][0].toLowerCase();\r\n            if(ampm == \"a\"){\r\n                meridiem = 0;\r\n                if(hour == 12) {\r\n                    hour = 0;\r\n                    if (!result.end.isCertain('day')) {\r\n                        result.end.imply('day', result.end.get('day') + 1);\r\n                    }\r\n                }\r\n            }\r\n\r\n            if(ampm == \"p\"){\r\n                meridiem = 1;\r\n                if(hour != 12) hour += 12;\r\n            }\r\n\r\n            if (!result.start.isCertain('meridiem')) {\r\n                if (meridiem == 0) {\r\n\r\n                    result.start.imply('meridiem', 0);\r\n\r\n                    if (result.start.get('hour') == 12) {\r\n                        result.start.assign('hour', 0);\r\n                    }\r\n\r\n                } else {\r\n\r\n                    result.start.imply('meridiem', 1);\r\n\r\n                    if (result.start.get('hour') != 12) {\r\n                        result.start.assign('hour', result.start.get('hour') + 12);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        result.text = result.text + match[0];\r\n        result.end.assign('hour', hour);\r\n        result.end.assign('minute', minute);\r\n        if (meridiem >= 0) {\r\n            result.end.assign('meridiem', meridiem);\r\n        } else {\r\n            var startAtPM = result.start.isCertain('meridiem') && result.start.get('meridiem') == 1;\r\n            if (startAtPM && result.start.get('hour') > hour) {\r\n                // 10pm - 1 (am)\r\n                result.end.imply('meridiem', 0);\r\n\r\n            } else if (hour > 12) {\r\n                result.end.imply('meridiem', 1);\r\n            }\r\n        }\r\n\r\n        if (result.end.date().getTime() < result.start.date().getTime()) {\r\n            result.end.imply('day', result.end.get('day') + 1)\r\n        }\r\n\r\n        return result;\r\n    }\r\n}\r\n","var Parser = require('../parser').Parser;\r\nvar ParsedResult = require('../../result').ParsedResult;\r\nvar updateParsedComponent = require('../en/ENWeekdayParser').updateParsedComponent;\r\n\r\nvar DAYS_OFFSET = { 'dimanche': 0, 'dim': 0, 'lundi': 1, 'lun': 1,'mardi': 2, 'mar':2, 'mercredi': 3, 'mer': 3,\r\n    'jeudi': 4, 'jeu':4, 'vendredi': 5, 'ven': 5,'samedi': 6, 'sam': 6};\r\n\r\nvar PATTERN = new RegExp('(\\\\s|^)' +\r\n    '(?:(?:\\\\,|\\\\(|\\\\（)\\\\s*)?' +\r\n    '(?:(ce)\\\\s*)?' +\r\n    '(' + Object.keys(DAYS_OFFSET).join('|') + ')' +\r\n    '(?:\\\\s*(?:\\\\,|\\\\)|\\\\）))?' +\r\n    '(?:\\\\s*(dernier|prochain)\\\\s*)?' +\r\n    '(?=\\\\W|$)', 'i');\r\n\r\nvar PREFIX_GROUP = 2;\r\nvar WEEKDAY_GROUP = 3;\r\nvar POSTFIX_GROUP = 4;\r\n\r\nexports.Parser = function FRWeekdayParser() {\r\n    Parser.apply(this, arguments);\r\n\r\n    this.pattern = function() { return PATTERN; };\r\n\r\n    this.extract = function(text, ref, match, opt){\r\n        var index = match.index + match[1].length;\r\n        var text = match[0].substr(match[1].length, match[0].length - match[1].length);\r\n        var result = new ParsedResult({\r\n            index: index,\r\n            text: text,\r\n            ref: ref\r\n        });\r\n\r\n        var dayOfWeek = match[WEEKDAY_GROUP].toLowerCase();\r\n        var offset = DAYS_OFFSET[dayOfWeek];\r\n        if(offset === undefined) return null;\r\n\r\n        var modifier = null;\r\n        var prefix = match[PREFIX_GROUP];\r\n        var postfix = match[POSTFIX_GROUP];\r\n        if (prefix || postfix) {\r\n            var norm = prefix || postfix;\r\n            norm = norm.toLowerCase();\r\n\r\n            if(norm == 'dernier') {\r\n                modifier = 'last';\r\n            } else if(norm == 'prochain') {\r\n                modifier = 'next';\r\n            } else if(norm== 'ce') {\r\n                modifier = 'this';\r\n            }\r\n        }\r\n\r\n        updateParsedComponent(result, ref, offset, modifier);\r\n        result.tags['FRWeekdayParser'] = true;\r\n        return result;\r\n    }\r\n};\r\n\r\n","const quarterOfYear = require('dayjs/plugin/quarterOfYear');\nconst dayjs = require('dayjs');\ndayjs.extend(quarterOfYear);\n\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar util  = require('../../utils/FR');\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(?:les?|la|l\\'|du|des?)\\\\s*' +\n    '('+ util.INTEGER_WORDS_PATTERN + '|\\\\d+)?\\\\s*' +\n    '(prochaine?s?|derni[eè]re?s?|pass[ée]e?s?|pr[ée]c[ée]dents?|suivante?s?)?\\\\s*' +\n    '(secondes?|min(?:ute)?s?|heures?|jours?|semaines?|mois|trimestres?|années?)\\\\s*' +\n    '(prochaine?s?|derni[eè]re?s?|pass[ée]e?s?|pr[ée]c[ée]dents?|suivante?s?)?' +\n    '(?=\\\\W|$)', 'i'\n);\n\nvar MULTIPLIER_GROUP = 2;\nvar MODIFIER_1_GROUP = 3;\nvar RELATIVE_WORD_GROUP = 4;\nvar MODIFIER_2_GROUP = 5;\n\nexports.Parser = function FRRelativeDateFormatParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; };\n\n    this.extract = function(text, ref, match, opt){\n        var index = match.index + match[1].length;\n        var text  = match[0];\n        text  = match[0].substr(match[1].length, match[0].length - match[1].length);\n\n        // Multiplier\n        var multiplier = match[MULTIPLIER_GROUP] === undefined ? '1' : match[MULTIPLIER_GROUP];\n        if (util.INTEGER_WORDS[multiplier] !== undefined) {\n            multiplier = util.INTEGER_WORDS[multiplier];\n        } else {\n            multiplier = parseInt(multiplier);\n        }\n\n        // Modifier\n        var modifier = match[MODIFIER_1_GROUP] === undefined ?\n                    (match[MODIFIER_2_GROUP] === undefined ? '' : match[MODIFIER_2_GROUP].toLowerCase())\n                     : match[MODIFIER_1_GROUP].toLowerCase();\n        if(!modifier) {\n            // At least one modifier is mandatory to match this parser\n            return;\n        }\n\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref\n        });\n        result.tags['FRRelativeDateFormatParser'] = true;\n\n        var modifierFactor;\n        switch(true) {\n            case /prochaine?s?/.test(modifier):\n            case /suivants?/.test(modifier):\n                modifierFactor = 1;\n                break;\n            case /derni[eè]re?s?/.test(modifier):\n            case /pass[ée]e?s?/.test(modifier):\n            case /pr[ée]c[ée]dents?/.test(modifier):\n                modifierFactor = -1;\n                break;\n        }\n\n        var total = multiplier * modifierFactor;\n\n        var dateFrom = dayjs(ref);\n        var dateTo = dayjs(ref);\n\n        var relative = match[RELATIVE_WORD_GROUP];\n        var startOf;\n        switch(true) {\n            case /secondes?/.test(relative):\n                dateFrom = dateFrom.add(total, 's');\n                dateTo = dateTo.add(modifierFactor, 's');\n                startOf = 'second';\n                break;\n            case /min(?:ute)?s?/.test(relative):\n                dateFrom = dateFrom.add(total, 'm');\n                dateTo = dateTo.add(modifierFactor, 'm');\n                startOf = 'minute';\n                break;\n            case /heures?/.test(relative):\n                dateFrom = dateFrom.add(total, 'h');\n                dateTo = dateTo.add(modifierFactor, 'h');\n                startOf = 'hour';\n                break;\n            case /jours?/.test(relative):\n                dateFrom = dateFrom.add(total, 'd');\n                dateTo = dateTo.add(modifierFactor, 'd');\n                startOf = 'day';\n                break;\n            case /semaines?/.test(relative):\n                dateFrom = dateFrom.add(total, 'w');\n                dateTo = dateTo.add(modifierFactor, 'w');\n                startOf = 'week';\n                break;\n            case /mois?/.test(relative):\n                dateFrom = dateFrom.add(total, 'M');\n                dateTo = dateTo.add(modifierFactor, 'M');\n                startOf = 'month';\n                break;\n            case /trimestres?/.test(relative):\n                dateFrom = dateFrom.add(total, 'Q');\n                dateTo = dateTo.add(modifierFactor, 'Q');\n                startOf = 'quarter';\n                break;\n            case /années?/.test(relative):\n                dateFrom = dateFrom.add(total, 'y');\n                dateTo = dateTo.add(modifierFactor, 'y');\n                startOf = 'year';\n                break;\n        }\n\n        // if we go forward, switch the start and end dates\n        if(modifierFactor > 0) {\n            var dateTmp = dateFrom;\n            dateFrom = dateTo;\n            dateTo = dateTmp;\n        }\n\n        // Get start and end of dates\n        dateFrom = dateFrom.startOf(startOf);\n        dateTo = dateTo.endOf(startOf);\n        if (startOf == 'week') { // Weekday in FR start on Sat?\n            dateFrom = dateFrom.add(1, 'd')\n            dateTo = dateTo.add(1, 'd')\n        }\n        \n\n        // Assign results\n        result.start.assign('year', dateFrom.year());\n        result.start.assign('month', dateFrom.month() + 1);\n        result.start.assign('day', dateFrom.date());\n        result.start.assign('minute', dateFrom.minute());\n        result.start.assign('second', dateFrom.second());\n        result.start.assign('hour', dateFrom.hour());\n        result.start.assign('millisecond', dateFrom.millisecond());\n\n        result.end = result.start.clone();\n        result.end.assign('year', dateTo.year());\n        result.end.assign('month', dateTo.month() + 1);\n        result.end.assign('day', dateTo.date());\n        result.end.assign('minute', dateTo.minute());\n        result.end.assign('second', dateTo.second());\n        result.end.assign('hour', dateTo.hour());\n        result.end.assign('millisecond', dateTo.millisecond());\n        return result;\n    };\n};\n","!function(t,n){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=n():\"function\"==typeof define&&define.amd?define(n):t.dayjs_plugin_quarterOfYear=n()}(this,function(){\"use strict\";var t=\"month\",n=\"quarter\";return function(r,i){var e=i.prototype;e.quarter=function(t){return this.$utils().u(t)?Math.ceil((this.month()+1)/3):this.month(this.month()%3+3*(t-1))};var u=e.add;e.add=function(r,i){return r=Number(r),this.$utils().p(i)===n?this.add(3*r,t):u.bind(this)(r,i)};var s=e.startOf;e.startOf=function(r,i){var e=this.$utils(),u=!!e.u(i)||i;if(e.p(r)===n){var a=this.quarter()-1;return u?this.month(3*a).startOf(t).startOf(\"day\"):this.month(3*a+2).endOf(t).endOf(\"day\")}return s.bind(this)(r,i)}}});\n","const dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar util = require('../../utils/ZH-Hant.js');\n\nvar PATTERN = new RegExp(\n    '(\\\\d{2,4}|[' + Object.keys(util.NUMBER).join('') + ']{2,4})?' +\n    '(?:\\\\s*)' +\n    '(?:年)?' +\n    '(?:[\\\\s|,|，]*)' +\n    '(\\\\d{1,2}|[' + Object.keys(util.NUMBER).join('') + ']{1,2})' +\n    '(?:\\\\s*)' +\n    '(?:月)' +\n    '(?:\\\\s*)' +\n    '(\\\\d{1,2}|[' + Object.keys(util.NUMBER).join('') + ']{1,2})?' +\n    '(?:\\\\s*)' +\n    '(?:日|號)?'\n);\n\nvar YEAR_GROUP = 1;\nvar MONTH_GROUP = 2;\nvar DAY_GROUP = 3;\n\nexports.Parser = function ZHHantDateParser() {\n\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return PATTERN;\n    };\n\n    this.extract = function(text, ref, match, opt) {\n        var startMoment = dayjs(ref);\n        var result = new ParsedResult({\n            text: match[0],\n            index: match.index,\n            ref: ref,\n        });\n\n        //Month\n        var month = parseInt(match[MONTH_GROUP]);\n        if (isNaN(month)) month = util.zhStringToNumber(match[MONTH_GROUP]);\n        result.start.assign('month', month);\n\n        //Day\n        if (match[DAY_GROUP]) {\n            var day = parseInt(match[DAY_GROUP]);\n            if (isNaN(day)) day = util.zhStringToNumber(match[DAY_GROUP]);\n            result.start.assign('day', day);\n        } else {\n            result.start.imply('day', startMoment.date());\n        }\n\n        //Year\n        if (match[YEAR_GROUP]) {\n            var year = parseInt(match[YEAR_GROUP]);\n            if (isNaN(year)) year = util.zhStringToYear(match[YEAR_GROUP]);\n            result.start.assign('year', year);\n        } else {\n            result.start.imply('year', startMoment.year());\n        }\n\n        result.tags.ZHHantDateParser = true;\n        return result;\n    };\n};\n","var Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar updateParsedComponent = require('../en/ENWeekdayParser').updateParsedComponent;\n\nvar util = require('../../utils/ZH-Hant.js');\n\nvar PATTERN = new RegExp(\n    '(上|今|下|這|呢)?' +\n    '(?:個)?' +\n    '(?:星期|禮拜)' +\n    '(' + Object.keys(util.WEEKDAY_OFFSET).join('|') + ')'\n);\n\nvar PREFIX_GROUP = 1;\nvar WEEKDAY_GROUP = 2;\n\nexports.Parser = function ZHHantWeekdayParser() {\n\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return PATTERN;\n    };\n\n    this.extract = function(text, ref, match, opt) {\n        var index = match.index;\n        text = match[0];\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref\n        });\n\n        var dayOfWeek = match[WEEKDAY_GROUP];\n        var offset = util.WEEKDAY_OFFSET[dayOfWeek];\n        if(offset === undefined) return null;\n\n        var modifier = null;\n        var prefix = match[PREFIX_GROUP];\n\n        if(prefix == '上') {\n            modifier = 'last';\n        } else if(prefix == '下') {\n            modifier = 'next';\n        } else if(prefix == '今' || prefix == '這' || prefix == '呢') {\n            modifier = 'this';\n        }\n\n        updateParsedComponent(result, ref, offset, modifier);\n        result.tags['ZHHantWeekdayParser'] = true;\n        return result;\n    };\n};\n","const dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar ParsedComponents = require('../../result').ParsedComponents;\n\nvar util = require('../../utils/ZH-Hant.js');\n\nvar patternString1 = '(?:由|從|自)?' +\n    '(?:' +\n    '(今|明|前|大前|後|大後|聽|昨|尋|琴)(早|朝|晚)|' +\n    '(上(?:午|晝)|朝(?:早)|早(?:上)|下(?:午|晝)|晏(?:晝)|晚(?:上)|夜(?:晚)?|中(?:午)|凌(?:晨))|' +\n    '(今|明|前|大前|後|大後|聽|昨|尋|琴)(?:日|天)' +\n    '(?:[\\\\s,，]*)' +\n    '(?:(上(?:午|晝)|朝(?:早)|早(?:上)|下(?:午|晝)|晏(?:晝)|晚(?:上)|夜(?:晚)?|中(?:午)|凌(?:晨)))?' +\n    ')?' +\n    '(?:[\\\\s,，]*)' +\n    '(?:(\\\\d+|[' + Object.keys(util.NUMBER).join('') + ']+)(?:\\\\s*)(?:點|時|:|：)' +\n    '(?:\\\\s*)' +\n    '(\\\\d+|半|正|整|[' + Object.keys(util.NUMBER).join('') + ']+)?(?:\\\\s*)(?:分|:|：)?' +\n    '(?:\\\\s*)' +\n    '(\\\\d+|[' + Object.keys(util.NUMBER).join('') + ']+)?(?:\\\\s*)(?:秒)?)' +\n    '(?:\\\\s*(A\\.M\\.|P\\.M\\.|AM?|PM?))?';\n\nvar patternString2 = '(?:^\\\\s*(?:到|至|\\\\-|\\\\–|\\\\~|\\\\〜)\\\\s*)' +\n    '(?:' +\n    '(今|明|前|大前|後|大後|聽|昨|尋|琴)(早|朝|晚)|' +\n    '(上(?:午|晝)|朝(?:早)|早(?:上)|下(?:午|晝)|晏(?:晝)|晚(?:上)|夜(?:晚)?|中(?:午)|凌(?:晨))|' +\n    '(今|明|前|大前|後|大後|聽|昨|尋|琴)(?:日|天)' +\n    '(?:[\\\\s,，]*)' +\n    '(?:(上(?:午|晝)|朝(?:早)|早(?:上)|下(?:午|晝)|晏(?:晝)|晚(?:上)|夜(?:晚)?|中(?:午)|凌(?:晨)))?' +\n    ')?' +\n    '(?:[\\\\s,，]*)' +\n    '(?:(\\\\d+|[' + Object.keys(util.NUMBER).join('') + ']+)(?:\\\\s*)(?:點|時|:|：)' +\n    '(?:\\\\s*)' +\n    '(\\\\d+|半|正|整|[' + Object.keys(util.NUMBER).join('') + ']+)?(?:\\\\s*)(?:分|:|：)?' +\n    '(?:\\\\s*)' +\n    '(\\\\d+|[' + Object.keys(util.NUMBER).join('') + ']+)?(?:\\\\s*)(?:秒)?)' +\n    '(?:\\\\s*(A\\.M\\.|P\\.M\\.|AM?|PM?))?';\n\nvar FIRST_REG_PATTERN = new RegExp(patternString1, 'i');\nvar SECOND_REG_PATTERN = new RegExp(patternString2, 'i');\n\nvar DAY_GROUP_1 = 1;\nvar ZH_AM_PM_HOUR_GROUP_1 = 2;\nvar ZH_AM_PM_HOUR_GROUP_2 = 3;\nvar DAY_GROUP_3 = 4;\nvar ZH_AM_PM_HOUR_GROUP_3 = 5;\nvar HOUR_GROUP = 6;\nvar MINUTE_GROUP = 7;\nvar SECOND_GROUP = 8;\nvar AM_PM_HOUR_GROUP = 9;\n\nexports.Parser = function ZHHantTimeExpressionParser() {\n\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return FIRST_REG_PATTERN;\n    };\n\n    this.extract = function(text, ref, match, opt) {\n\n        // This pattern can be overlaped Ex. [12] AM, 1[2] AM\n        if (match.index > 0 && text[match.index - 1].match(/\\w/)) return null;\n        var refMoment = dayjs(ref);\n        var result = new ParsedResult();\n        result.ref = ref;\n        result.index = match.index;\n        result.text = match[0];\n        result.tags.ZHTimeExpressionParser = true;\n\n        var startMoment = refMoment.clone();\n\n        // ----- Day\n        if (match[DAY_GROUP_1]) {\n            var day1 = match[DAY_GROUP_1];\n            if (day1 == '明' || day1 == '聽') {\n              // Check not \"Tomorrow\" on late night\n              if(refMoment.hour() > 1) {\n                  startMoment.add(1, 'day');\n              }\n            } else if (day1 == '昨' || day1 == '尋' || day1 == '琴') {\n                startMoment.add(-1, 'day');\n            } else if (day1 == \"前\"){\n                startMoment.add(-2, 'day');\n            } else if (day1 == \"大前\"){\n                startMoment.add(-3, 'day');\n            } else if (day1 == \"後\"){\n                startMoment.add(2, 'day');\n            } else if (day1 == \"大後\"){\n                startMoment.add(3, 'day');\n            }\n            result.start.assign('day', startMoment.date());\n            result.start.assign('month', startMoment.month() + 1);\n            result.start.assign('year', startMoment.year());\n        } else if (match[DAY_GROUP_3]) {\n            var day3 = match[DAY_GROUP_3];\n            if (day3 == '明' || day3 == '聽') {\n                startMoment.add(1, 'day');\n            } else if (day3 == '昨' || day3 == '尋' || day3 == '琴') {\n                startMoment.add(-1, 'day');\n            } else if (day3 == \"前\"){\n                startMoment.add(-2, 'day');\n            } else if (day3 == \"大前\"){\n                startMoment.add(-3, 'day');\n            } else if (day3 == \"後\"){\n                startMoment.add(2, 'day');\n            } else if (day3 == \"大後\"){\n                startMoment.add(3, 'day');\n            }\n            result.start.assign('day', startMoment.date());\n            result.start.assign('month', startMoment.month() + 1);\n            result.start.assign('year', startMoment.year());\n        } else {\n            result.start.imply('day', startMoment.date());\n            result.start.imply('month', startMoment.month() + 1);\n            result.start.imply('year', startMoment.year());\n        }\n\n        var hour = 0;\n        var minute = 0;\n        var meridiem = -1;\n\n        // ----- Second\n        if (match[SECOND_GROUP]) {\n            var second = parseInt(match[SECOND_GROUP]);\n            if (isNaN(second)) {\n                second = util.zhStringToNumber(match[SECOND_GROUP]);\n            }\n            if (second >= 60) return null;\n            result.start.assign('second', second);\n        }\n\n        hour = parseInt(match[HOUR_GROUP]);\n        if (isNaN(hour)) {\n            hour = util.zhStringToNumber(match[HOUR_GROUP]);\n        }\n\n        // ----- Minutes\n        if (match[MINUTE_GROUP]) {\n            if (match[MINUTE_GROUP] == '半') {\n                minute = 30;\n            } else if (match[MINUTE_GROUP] == '正' || match[MINUTE_GROUP] == '整') {\n                minute = 0;\n            } else {\n                minute = parseInt(match[MINUTE_GROUP]);\n                if (isNaN(minute)) {\n                    minute = util.zhStringToNumber(match[MINUTE_GROUP]);\n                }\n            }\n        } else if (hour > 100) {\n            minute = hour % 100;\n            hour = parseInt(hour / 100);\n        }\n\n        if (minute >= 60) {\n            return null;\n        }\n\n        if (hour > 24) {\n            return null;\n        }\n        if (hour >= 12) {\n            meridiem = 1;\n        }\n\n        // ----- AM & PM\n        if (match[AM_PM_HOUR_GROUP]) {\n            if (hour > 12) return null;\n            var ampm = match[AM_PM_HOUR_GROUP][0].toLowerCase();\n            if (ampm == \"a\") {\n                meridiem = 0;\n                if (hour == 12) hour = 0;\n            }\n\n            if (ampm == \"p\") {\n                meridiem = 1;\n                if (hour != 12) hour += 12;\n            }\n        } else if (match[ZH_AM_PM_HOUR_GROUP_1]) {\n            var zhAMPMString1 = match[ZH_AM_PM_HOUR_GROUP_1];\n            var zhAMPM1 = zhAMPMString1[0];\n            if (zhAMPM1 == '朝' || zhAMPM1 == '早') {\n                meridiem = 0;\n                if (hour == 12) hour = 0;\n            } else if (zhAMPM1 == '晚') {\n                meridiem = 1;\n                if (hour != 12) hour += 12;\n            }\n        } else if (match[ZH_AM_PM_HOUR_GROUP_2]) {\n            var zhAMPMString2 = match[ZH_AM_PM_HOUR_GROUP_2];\n            var zhAMPM2 = zhAMPMString2[0];\n            if (zhAMPM2 == '上' || zhAMPM2 == '朝' || zhAMPM2 == '早' || zhAMPM2 == '凌') {\n                meridiem = 0;\n                if (hour == 12) hour = 0;\n            } else if (zhAMPM2 == '下' || zhAMPM2 == '晏' || zhAMPM2 == '晚') {\n                meridiem = 1;\n                if (hour != 12) hour += 12;\n            }\n        } else if (match[ZH_AM_PM_HOUR_GROUP_3]) {\n            var zhAMPMString3 = match[ZH_AM_PM_HOUR_GROUP_3];\n            var zhAMPM3 = zhAMPMString3[0];\n            if (zhAMPM3 == '上' || zhAMPM3 == '朝' || zhAMPM3 == '早' || zhAMPM3 == '凌') {\n                meridiem = 0;\n                if (hour == 12) hour = 0;\n            } else if (zhAMPM3 == '下' || zhAMPM3 == '晏' || zhAMPM3 == '晚') {\n                meridiem = 1;\n                if (hour != 12) hour += 12;\n            }\n        }\n\n        result.start.assign('hour', hour);\n        result.start.assign('minute', minute);\n\n        if (meridiem >= 0) {\n            result.start.assign('meridiem', meridiem);\n        } else {\n            if (hour < 12) {\n                result.start.imply('meridiem', 0);\n            } else {\n                result.start.imply('meridiem', 1);\n            }\n        }\n\n        // ==============================================================\n        //                  Extracting the 'to' chunk\n        // ==============================================================\n\n        match = SECOND_REG_PATTERN.exec(text.substring(result.index + result.text.length));\n        if (!match) {\n            // Not accept number only result\n            if (result.text.match(/^\\d+$/)) {\n                return null;\n            }\n            return result;\n        }\n\n        var endMoment = startMoment.clone();\n        result.end = new ParsedComponents(null, null);\n\n        // ----- Day\n        if (match[DAY_GROUP_1]) {\n            var day1 = match[DAY_GROUP_1];\n            if (day1 == '明' || day1 == '聽') {\n              // Check not \"Tomorrow\" on late night\n              if(refMoment.hour() > 1) {\n                  endMoment.add(1, 'day');\n              }\n            } else if (day1 == '昨' || day1 == '尋' || day1 == '琴') {\n                endMoment.add(-1, 'day');\n            } else if (day1 == \"前\"){\n                endMoment.add(-2, 'day');\n            } else if (day1 == \"大前\"){\n                endMoment.add(-3, 'day');\n            } else if (day1 == \"後\"){\n                endMoment.add(2, 'day');\n            } else if (day1 == \"大後\"){\n                endMoment.add(3, 'day');\n            }\n            result.end.assign('day', endMoment.date());\n            result.end.assign('month', endMoment.month() + 1);\n            result.end.assign('year', endMoment.year());\n        } else if (match[DAY_GROUP_3]) {\n            var day3 = match[DAY_GROUP_3];\n            if (day3 == '明' || day3 == '聽') {\n                endMoment.add(1, 'day');\n            } else if (day3 == '昨' || day3 == '尋' || day3 == '琴') {\n                endMoment.add(-1, 'day');\n            } else if (day3 == \"前\"){\n                endMoment.add(-2, 'day');\n            } else if (day3 == \"大前\"){\n                endMoment.add(-3, 'day');\n            } else if (day3 == \"後\"){\n                endMoment.add(2, 'day');\n            } else if (day3 == \"大後\"){\n                endMoment.add(3, 'day');\n            }\n            result.end.assign('day', endMoment.date());\n            result.end.assign('month', endMoment.month() + 1);\n            result.end.assign('year', endMoment.year());\n        } else {\n            result.end.imply('day', endMoment.date());\n            result.end.imply('month', endMoment.month() + 1);\n            result.end.imply('year', endMoment.year());\n        }\n\n        hour = 0;\n        minute = 0;\n        meridiem = -1;\n\n        // ----- Second\n        if (match[SECOND_GROUP]) {\n            var second = parseInt(match[SECOND_GROUP]);\n            if (isNaN(second)) {\n                second = util.zhStringToNumber(match[SECOND_GROUP]);\n            }\n\n            if (second >= 60) return null;\n            result.end.assign('second', second);\n        }\n\n        hour = parseInt(match[HOUR_GROUP]);\n        if (isNaN(hour)) {\n            hour = util.zhStringToNumber(match[HOUR_GROUP]);\n        }\n\n        // ----- Minutes\n        if (match[MINUTE_GROUP]) {\n            if (match[MINUTE_GROUP] == '半') {\n                minute = 30;\n            } else if (match[MINUTE_GROUP] == '正' || match[MINUTE_GROUP] == '整') {\n                minute = 0;\n            } else {\n                minute = parseInt(match[MINUTE_GROUP]);\n                if (isNaN(minute)) {\n                    minute = util.zhStringToNumber(match[MINUTE_GROUP]);\n                }\n            }\n        } else if (hour > 100) {\n            minute = hour % 100;\n            hour = parseInt(hour / 100);\n        }\n\n        if (minute >= 60) {\n            return null;\n        }\n\n        if (hour > 24) {\n            return null;\n        }\n        if (hour >= 12) {\n            meridiem = 1;\n        }\n\n        // ----- AM & PM\n        if (match[AM_PM_HOUR_GROUP]) {\n            if (hour > 12) return null;\n            var ampm = match[AM_PM_HOUR_GROUP][0].toLowerCase();\n            if (ampm == \"a\") {\n                meridiem = 0;\n                if (hour == 12) hour = 0;\n            }\n\n            if (ampm == \"p\") {\n                meridiem = 1;\n                if (hour != 12) hour += 12;\n            }\n\n            if (!result.start.isCertain('meridiem')) {\n                if (meridiem == 0) {\n\n                    result.start.imply('meridiem', 0);\n\n                    if (result.start.get('hour') == 12) {\n                        result.start.assign('hour', 0);\n                    }\n\n                } else {\n\n                    result.start.imply('meridiem', 1);\n\n                    if (result.start.get('hour') != 12) {\n                        result.start.assign('hour', result.start.get('hour') + 12);\n                    }\n                }\n            }\n\n        } else if (match[ZH_AM_PM_HOUR_GROUP_1]) {\n            var zhAMPMString1 = match[ZH_AM_PM_HOUR_GROUP_1];\n            var zhAMPM1 = zhAMPMString1[0];\n            if (zhAMPM1 == '朝' || zhAMPM1 == '早') {\n                meridiem = 0;\n                if (hour == 12) hour = 0;\n            } else if (zhAMPM1 == '晚') {\n                meridiem = 1;\n                if (hour != 12) hour += 12;\n            }\n        } else if (match[ZH_AM_PM_HOUR_GROUP_2]) {\n            var zhAMPMString2 = match[ZH_AM_PM_HOUR_GROUP_2];\n            var zhAMPM2 = zhAMPMString2[0];\n            if (zhAMPM2 == '上' || zhAMPM2 == '朝' || zhAMPM2 == '早' || zhAMPM2 == '凌') {\n                meridiem = 0;\n                if (hour == 12) hour = 0;\n            } else if (zhAMPM2 == '下' || zhAMPM2 == '晏' || zhAMPM2 == '晚') {\n                meridiem = 1;\n                if (hour != 12) hour += 12;\n            }\n        } else if (match[ZH_AM_PM_HOUR_GROUP_3]) {\n            var zhAMPMString3 = match[ZH_AM_PM_HOUR_GROUP_3];\n            var zhAMPM3 = zhAMPMString3[0];\n            if (zhAMPM3 == '上' || zhAMPM3 == '朝' || zhAMPM3 == '早' || zhAMPM3 == '凌') {\n                meridiem = 0;\n                if (hour == 12) hour = 0;\n            } else if (zhAMPM3 == '下' || zhAMPM3 == '晏' || zhAMPM3 == '晚') {\n                meridiem = 1;\n                if (hour != 12) hour += 12;\n            }\n        }\n\n        result.text = result.text + match[0];\n        result.end.assign('hour', hour);\n        result.end.assign('minute', minute);\n        if (meridiem >= 0) {\n            result.end.assign('meridiem', meridiem);\n        } else {\n            var startAtPM = result.start.isCertain('meridiem') && result.start.get('meridiem') == 1;\n            if (startAtPM && result.start.get('hour') > hour) {\n                // 10pm - 1 (am)\n                result.end.imply('meridiem', 0);\n\n            } else if (hour > 12) {\n                result.end.imply('meridiem', 1);\n            }\n        }\n\n        if (result.end.date().getTime() < result.start.date().getTime()) {\n            result.end.imply('day', result.end.get('day') + 1)\n        }\n\n        return result;\n    };\n};\n","const dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = new RegExp(\n    '(而家|立(?:刻|即)|即刻)|' +\n    '(今|明|前|大前|後|大後|聽|昨|尋|琴)(早|朝|晚)|' +\n    '(上(?:午|晝)|朝(?:早)|早(?:上)|下(?:午|晝)|晏(?:晝)|晚(?:上)|夜(?:晚)?|中(?:午)|凌(?:晨))|' +\n    '(今|明|前|大前|後|大後|聽|昨|尋|琴)(?:日|天)' +\n    '(?:[\\\\s|,|，]*)' +\n    '(?:(上(?:午|晝)|朝(?:早)|早(?:上)|下(?:午|晝)|晏(?:晝)|晚(?:上)|夜(?:晚)?|中(?:午)|凌(?:晨)))?', 'i');\n\nvar NOW_GROUP = 1;\nvar DAY_GROUP_1 = 2;\nvar TIME_GROUP_1 = 3;\nvar TIME_GROUP_2 = 4;\nvar DAY_GROUP_3 = 5;\nvar TIME_GROUP_3 = 6;\n\nexports.Parser = function ZHHantCasualDateParser() {\n\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return PATTERN;\n    };\n\n    this.extract = function(text, ref, match, opt) {\n        text = match[0];\n        var index = match.index;\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref,\n        });\n\n        var refMoment = dayjs(ref);\n        var startMoment = refMoment;\n\n        if (match[NOW_GROUP]) {\n            result.start.imply('hour', refMoment.hour());\n            result.start.imply('minute', refMoment.minute());\n            result.start.imply('second', refMoment.second());\n            result.start.imply('millisecond', refMoment.millisecond());\n        } else if (match[DAY_GROUP_1]) {\n            var day1 = match[DAY_GROUP_1];\n            var time1 = match[TIME_GROUP_1];\n\n            if (day1 == '明' || day1 == '聽') {\n              // Check not \"Tomorrow\" on late night\n                if(refMoment.hour() > 1) {\n                    startMoment = startMoment.add(1, 'day');\n                }\n            } else if (day1 == '昨' || day1 == '尋' || day1 == '琴') {\n                startMoment = startMoment.add(-1, 'day');\n            } else if (day1 == \"前\"){\n                startMoment = startMoment.add(-2, 'day');\n            } else if (day1 == \"大前\"){\n                startMoment = startMoment.add(-3, 'day');\n            } else if ( day1 == \"後\"){\n                startMoment = startMoment.add(2, 'day');\n            } else if (day1 == \"大後\"){\n                startMoment = startMoment.add(3, 'day');\n            }\n\n            if (time1 == '早' || time1 == '朝') {\n                result.start.imply('hour', 6);\n            } else if (time1 == '晚') {\n                result.start.imply('hour', 22);\n                result.start.imply('meridiem', 1);\n            }\n\n        } else if (match[TIME_GROUP_2]) {\n            var timeString2 = match[TIME_GROUP_2];\n            var time2 = timeString2[0];\n            if (time2 == '早' || time2 == '朝' || time2 == '上') {\n                result.start.imply('hour', 6);\n            } else if (time2 == '下' || time2 == '晏') {\n                result.start.imply('hour', 15);\n                result.start.imply('meridiem', 1);\n            } else if (time2 == '中') {\n                result.start.imply('hour', 12);\n                result.start.imply('meridiem', 1);\n            } else if (time2 == '夜' || time2 == '晚') {\n                result.start.imply('hour', 22);\n                result.start.imply('meridiem', 1);\n            } else if (time2 == '凌') {\n                result.start.imply('hour', 0);\n            }\n\n        } else if (match[DAY_GROUP_3]) {\n            var day3 = match[DAY_GROUP_3];\n\n            if (day3 == '明' || day3 == '聽') {\n                // Check not \"Tomorrow\" on late night\n                if(refMoment.hour() > 1) {\n                    startMoment = startMoment.add(1, 'day');\n                }\n            } else if (day3 == '昨' || day3 == '尋' || day3 == '琴') {\n                startMoment = startMoment.add(-1, 'day');\n            } else if (day3 == \"前\"){\n                startMoment = startMoment.add(-2, 'day');\n            } else if (day3 == \"大前\"){\n                startMoment = startMoment.add(-3, 'day');\n            } else if (day3 == \"後\"){\n                startMoment = startMoment.add(2, 'day');\n            } else if (day3 == \"大後\"){\n                startMoment = startMoment.add(3, 'day');\n            }\n\n\n            var timeString3 = match[TIME_GROUP_3];\n            if (timeString3) {\n                var time3 = timeString3[0];\n                if (time3 == '早' || time3 == '朝' || time3 == '上') {\n                    result.start.imply('hour', 6);\n                } else if (time3 == '下' || time3 == '晏') {\n                    result.start.imply('hour', 15);\n                    result.start.imply('meridiem', 1);\n                } else if (time3 == '中') {\n                    result.start.imply('hour', 12);\n                    result.start.imply('meridiem', 1);\n                } else if (time3 == '夜' || time3 == '晚') {\n                    result.start.imply('hour', 22);\n                    result.start.imply('meridiem', 1);\n                } else if (time3 == '凌') {\n                    result.start.imply('hour', 0);\n                }\n            }\n        }\n\n        result.start.assign('day', startMoment.date())\n        result.start.assign('month', startMoment.month() + 1)\n        result.start.assign('year', startMoment.year())\n        result.tags.ZHHantCasualDateParser = true;\n        return result;\n    };\n};\n","const dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar util = require('../../utils/ZH-Hant.js');\n\nvar PATTERN = new RegExp(\n    '(\\\\d+|[' + Object.keys(util.NUMBER).join('') + ']+|半|幾)(?:\\\\s*)' +\n    '(?:個)?' +\n    '(秒(?:鐘)?|分鐘|小時|鐘|日|天|星期|禮拜|月|年)' +\n    '(?:(?:之|過)?後|(?:之)?內)', 'i'\n);\n\nvar NUMBER_GROUP = 1;\nvar UNIT_GROUP = 2;\n\nexports.Parser = function ZHHantCasualDateParser() {\n\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return PATTERN;\n    };\n\n    this.extract = function(text, ref, match, opt) {\n      var index = match.index;\n      text  = match[0];\n\n      var result = new ParsedResult({\n          index: index,\n          text: text,\n          ref: ref\n      });\n\n      var number = parseInt(match[NUMBER_GROUP]);\n      if (isNaN(number)){\n        number = util.zhStringToNumber(match[NUMBER_GROUP]);\n      }\n\n      if (isNaN(number)){\n        var string = match[NUMBER_GROUP];\n        if (string === '幾'){\n          number = 3;\n        }else if(string === '半'){\n          number = 0.5;\n        }else{\n\n          //just in case\n          return null;\n        }\n      }\n\n      var date = dayjs(ref);\n      var unit = match[UNIT_GROUP];\n      var unitAbbr = unit[0];\n\n      if (unitAbbr.match(/[日天星禮月年]/)){\n          if(unitAbbr == '日' || unitAbbr == '天'){\n            date = date.add(number, 'd');\n          }else if(unitAbbr == '星' || unitAbbr == '禮'){\n            date = date.add(number * 7, 'd');\n          }else if(unitAbbr == '月'){\n            date = date.add(number, 'month');\n          }else if(unitAbbr == '年'){\n            date = date.add(number, 'year');\n          }\n\n        result.start.assign('year', date.year());\n        result.start.assign('month', date.month() + 1);\n        result.start.assign('day', date.date());\n        return result;\n      }\n\n      if(unitAbbr == '秒'){\n        date = date.add(number, 'second');\n      }else if(unitAbbr == '分'){\n        date = date.add(number, 'minute');\n      }else if(unitAbbr == '小' || unitAbbr == '鐘'){\n        date = date.add(number, 'hour');\n      }\n\n      result.start.imply('year', date.year());\n      result.start.imply('month', date.month() + 1);\n      result.start.imply('day', date.date());\n      result.start.assign('hour', date.hour());\n      result.start.assign('minute', date.minute());\n      result.start.assign('second', date.second());\n      result.tags.ZHHantDeadlineFormatParser = true;\n      return result;\n    };\n};\n","/*\n\n\n*/\n\nvar dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar util  = require('../../utils/DE');\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(in|nach)\\\\s*' +\n    '('+ util.INTEGER_WORDS_PATTERN + '|[0-9]+|einigen|eine[rm]\\\\s*halben|eine[rm])\\\\s*' +\n    '(sekunden?|min(?:ute)?n?|stunden?|tag(?:en)?|wochen?|monat(?:en)?|jahr(?:en)?)\\\\s*' +\n    '(?=\\\\W|$)', 'i'\n);\n\nvar STRICT_PATTERN = new RegExp('(\\\\W|^)' +\n    '(in|nach)\\\\s*' +\n    '('+ util.INTEGER_WORDS_PATTERN + '|[0-9]+|eine(?:r|m)?)\\\\s*' +\n    '(sekunden?|minuten?|stunden?|tag(?:en)?)\\\\s*' +\n    '(?=\\\\W|$)', 'i'\n);\n\nexports.Parser = function DEDeadlineFormatParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return this.isStrictMode()? STRICT_PATTERN : PATTERN;\n    };\n\n    this.extract = function(text, ref, match, opt){\n\n        var index = match.index + match[1].length;\n        var text  = match[0];\n        text  = match[0].substr(match[1].length, match[0].length - match[1].length);\n\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref\n        });\n\n        var num = match[3].toLowerCase();\n        if (util.INTEGER_WORDS[num] !== undefined) {\n            num = util.INTEGER_WORDS[num];\n        } else if (num === 'einer' || num === 'einem') {\n            num = 1;\n        } else if (num === 'einigen') {\n            num = 3;\n        } else if (/halben/.test(num)) {\n            num = 0.5;\n        } else {\n            num = parseInt(num);\n        }\n\n        var date = dayjs(ref);\n        if (/tag|woche|monat|jahr/i.test(match[4])) {\n\n            if (/tag/i.test(match[4])) {\n                date = date.add(num, 'd');\n            } else if (/woche/i.test(match[4])) {\n                date = date.add(num * 7, 'd');\n            } else if (/monat/i.test(match[4])) {\n                date = date.add(num, 'month');\n            } else if (/jahr/i.test(match[4])) {\n                date = date.add(num, 'year');\n            }\n\n            result.start.assign('year', date.year());\n            result.start.assign('month', date.month() + 1);\n            result.start.assign('day', date.date());\n            return result;\n        }\n\n        if (/stunde/i.test(match[4])) {\n\n            date = date.add(num, 'hour');\n\n        } else if (/min/i.test(match[4])) {\n\n            date = date.add(num, 'minute');\n\n        } else if (/sekunde/i.test(match[4])) {\n\n            date = date.add(num, 'second');\n        }\n\n        result.start.imply('year', date.year());\n        result.start.imply('month', date.month() + 1);\n        result.start.imply('day', date.date());\n        result.start.assign('hour', date.hour());\n        result.start.assign('minute', date.minute());\n        result.start.assign('second', date.second());\n        result.tags['DEDeadlineFormatParser'] = true;\n        return result;\n    };\n};\n","const dayjs = require('dayjs');\nconst parser = require('../parser');\nconst ParsedResult = require('../../result').ParsedResult;\nconst util  = require('../../utils/DE');\n\nconst PATTERN = new RegExp('(\\\\W|^)' +\n        '(?:am\\\\s*?)?' +\n        '(?:(Sonntag|Montag|Dienstag|Mittwoch|Donnerstag|Freitag|Samstag|So|Mo|Di|Mi|Do|Fr|Sa)\\\\s*,?\\\\s*)?' +\n        '(?:den\\\\s*)?' +\n        '([0-9]{1,2})\\\\.' +\n        '(?:\\\\s*(?:bis(?:\\\\s*(?:am|zum))?|\\\\-|\\\\–|\\\\s)\\\\s*([0-9]{1,2})\\\\.)?\\\\s*' +\n        '(Jan(?:uar|\\\\.)?|Feb(?:ruar|\\\\.)?|Mär(?:z|\\\\.)?|Maerz|Mrz\\\\.?|Apr(?:il|\\\\.)?|Mai|Jun(?:i|\\\\.)?|Jul(?:i|\\\\.)?|Aug(?:ust|\\\\.)?|Sep(?:t|t\\\\.|tember|\\\\.)?|Okt(?:ober|\\\\.)?|Nov(?:ember|\\\\.)?|Dez(?:ember|\\\\.)?)' +\n        '(?:' +\n            ',?\\\\s*([0-9]{1,4}(?![^\\\\s]\\\\d))' +\n            '(\\\\s*[vn]\\\\.?\\\\s*C(?:hr)?\\\\.?)?' +\n        ')?' +\n        '(?=\\\\W|$)', 'i'\n    );\n\nconst WEEKDAY_GROUP = 2;\nconst DATE_GROUP = 3;\nconst DATE_TO_GROUP = 4;\nconst MONTH_NAME_GROUP = 5;\nconst YEAR_GROUP = 6;\nconst YEAR_BE_GROUP = 7;\n\nexports.Parser = function DEMonthNameLittleEndianParser(){\n    parser.Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n\n        const result = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index: match.index + match[1].length,\n            ref: ref,\n        });\n\n        var month = match[MONTH_NAME_GROUP];\n        month = util.MONTH_OFFSET[month.toLowerCase()];\n\n        var day = match[DATE_GROUP];\n        day = parseInt(day);\n\n        var year = null;\n        if (match[YEAR_GROUP]) {\n            year = match[YEAR_GROUP];\n            year = parseInt(year);\n\n            if(match[YEAR_BE_GROUP]){\n                if (/v/i.test(match[YEAR_BE_GROUP])) {\n                    // v.Chr.\n                    year = -year;\n                }\n            } else if (year < 100){\n\n                year = year + 2000;\n            }\n        }\n\n        if(year){\n            result.start.assign('day', day);\n            result.start.assign('month', month);\n            result.start.assign('year', year);\n        } else {\n            year = parser.findYearClosestToRef(ref, day, month);\n            result.start.assign('day', day);\n            result.start.assign('month', month);\n            result.start.imply('year', year);\n        }\n\n        // Weekday component\n        if (match[WEEKDAY_GROUP]) {\n            var weekday = match[WEEKDAY_GROUP];\n            weekday = util.WEEKDAY_OFFSET[weekday.toLowerCase()]\n            result.start.assign('weekday', weekday);\n        }\n\n        // Text can be 'range' value. Such as '12 - 13 January 2012'\n        if (match[DATE_TO_GROUP]) {\n            result.end = result.start.clone();\n            result.end.assign('day', parseInt(match[DATE_TO_GROUP]));\n        }\n\n        result.tags['DEMonthNameLittleEndianParser'] = true;\n        return result;\n    };\n}\n","/*\n    \n    The parser for parsing month name and year.\n    \n    EX. \n        - Januar\n        - Januar 2012\n*/\n\nconst parser = require('../parser');\nconst ParsedResult = require('../../result').ParsedResult;\nconst util  = require('../../utils/DE');\n\nconst PATTERN = new RegExp('(^|\\\\D\\\\s+|[^\\\\w\\\\s])' +\n    '(Jan\\\\.?|Januar|Feb\\\\.?|Februar|Mär\\\\.?|M(?:ä|ae)rz|Mrz\\\\.?|Apr\\\\.?|April|Mai\\\\.?|Jun\\\\.?|Juni|Jul\\\\.?|Juli|Aug\\\\.?|August|Sep\\\\.?|Sept\\\\.?|September|Okt\\\\.?|Oktober|Nov\\\\.?|November|Dez\\\\.?|Dezember)' + \n    '\\\\s*' +\n    '(?:' +\n        ',?\\\\s*(?:([0-9]{4})(\\\\s*[vn]\\\\.?\\\\s*C(?:hr)?\\\\.?)?|([0-9]{1,4})\\\\s*([vn]\\\\.?\\\\s*C(?:hr)?\\\\.?))' +\n    ')?' +\n    '(?=[^\\\\s\\\\w]|$)', 'i');\n\nconst MONTH_NAME_GROUP = 2;\nconst YEAR_GROUP = 3;\nconst YEAR_BE_GROUP = 4;\nconst YEAR_GROUP2 = 5;\nconst YEAR_BE_GROUP2 = 6;\n\nexports.Parser = function ENMonthNameParser(){\n    parser.Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n    \n    this.extract = function(text, ref, match, opt){\n        var result = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index: match.index + match[1].length,\n            ref: ref,\n        });\n\n        \n        var month = match[MONTH_NAME_GROUP];\n        month = util.MONTH_OFFSET[month.toLowerCase()];\n\n        var day = 1;\n\n        var year = null;\n        if (match[YEAR_GROUP] || match[YEAR_GROUP2]) {\n            year = match[YEAR_GROUP] || match[YEAR_GROUP2];\n            year = parseInt(year);\n\n            if (match[YEAR_BE_GROUP] || match[YEAR_BE_GROUP2]) {\n                if (/v/i.test(match[YEAR_BE_GROUP] || match[YEAR_BE_GROUP2])) {\n                    // v.Chr.\n                    year = -year;\n                }\n\n            } else if (year < 100){ \n\n                year = year + 2000;\n            }\n        }\n\n        if(year){\n            result.start.imply('day', day);\n            result.start.assign('month', month);\n            result.start.assign('year', year);\n        } else {\n            \n            year = parser.findYearClosestToRef(ref, day, month);\n            result.start.imply('day', day);\n            result.start.assign('month', month);\n            result.start.imply('year', year);\n        }\n\n        if (this.isStrictMode() && result.text.match(/^\\w+$/)) {\n            return false;\n        }\n\n        result.tags['DEMonthNameParser'] = true;\n        return result;\n    }\n}\n\n","/*\n    Date format with slash \"/\" (also \"-\" and \".\") between numbers\n    - Tuesday 11/3/2015\n    - 11/3/2015\n    - 11/3\n*/\nvar dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(?:' +\n        '(?:am\\\\s*?)?' +\n        '((?:sonntag|so|montag|mo|dienstag|di|mittwoch|mi|donnerstag|do|freitag|fr|samstag|sa))' +\n        '\\\\s*\\\\,?\\\\s*' +\n        '(?:den\\\\s*)?' +\n    ')?' +\n    '([0-3]{0,1}[0-9]{1})[\\\\/\\\\.\\\\-]([0-3]{0,1}[0-9]{1})' +\n    '(?:' +\n        '[\\\\/\\\\.\\\\-]' +\n        '([0-9]{4}\\s*\\,?\\s*|[0-9]{2}\\s*\\,?\\s*)' +\n    ')?' +\n    '(\\\\W|$)', 'i');\n\nvar DAYS_OFFSET = {\n    'sonntag': 0, 'so': 0,\n    'montag': 1, 'mo': 1,\n    'dienstag': 2, 'di': 2,\n    'mittwoch': 3, 'mi': 3,\n    'donnerstag': 4, 'do': 4,\n    'freitag': 5, 'fr': 5,\n    'samstag': 6, 'sa': 6\n};\n\n\nvar OPENNING_GROUP = 1;\nvar ENDING_GROUP = 6;\n\nvar WEEKDAY_GROUP = 2;\nvar DAY_GROUP = 3;\nvar MONTH_GROUP = 4;\nvar YEAR_GROUP = 5;\n\nexports.Parser = function DESlashDateFormatParser(argument) {\n    Parser.apply(this, arguments);\n\n    this.pattern = function () { return PATTERN; };\n    this.extract = function(text, ref, match, opt){\n\n        if(match[OPENNING_GROUP] == '/' || match[ENDING_GROUP] == '/') {\n            // Long skip, if there is some overlapping like:\n            // XX[/YY/ZZ]\n            // [XX/YY/]ZZ\n            match.index += match[0].length\n            return;\n        }\n\n        var index = match.index + match[OPENNING_GROUP].length;\n        var text = match[0].substr(match[OPENNING_GROUP].length, match[0].length - match[ENDING_GROUP].length);\n\n\n        var result = new ParsedResult({\n            text: text,\n            index: index,\n            ref: ref,\n        });\n\n        if(text.match(/^\\d\\.\\d$/)) return;\n        if(text.match(/^\\d\\.\\d{1,2}\\.\\d{1,2}$/)) return;\n\n        // MM/dd -> OK\n        // MM.dd -> NG\n        if(!match[YEAR_GROUP] && match[0].indexOf('/') < 0) return;\n\n        var year = match[YEAR_GROUP] || dayjs(ref).year() + '';\n        var month = match[MONTH_GROUP];\n        var day   = match[DAY_GROUP];\n\n        month = parseInt(month);\n        day  = parseInt(day);\n        year = parseInt(year);\n\n        if (month < 1 || month > 12) return null;\n        if(day < 1 || day > 31) return null;\n\n        if(year < 100){\n            if (year > 50) {\n                year = year + 1900;\n            } else {\n                year = year + 2000;\n            }\n        }\n\n        result.start.assign('day', day);\n        result.start.assign('month', month);\n        result.start.assign('year', year);\n\n        //Day of week\n        if(match[WEEKDAY_GROUP]) {\n            result.start.assign('weekday', DAYS_OFFSET[match[WEEKDAY_GROUP].toLowerCase()]);\n        }\n\n        result.tags['DESlashDateFormatParser'] = true;\n        return result;\n    };\n};\n","const dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar util  = require('../../utils/DE');\n\nvar PATTERN = new RegExp('' +\n    '(\\\\W|^)vor\\\\s*' +\n    '(' + util.INTEGER_WORDS_PATTERN + '|[0-9]+|einigen|eine[rm]\\\\s*halben|eine[rm])\\\\s*' +\n    '(sekunden?|min(?:ute)?n?|stunden?|wochen?|tag(?:en)?|monat(?:en)?|jahr(?:en)?)\\\\s*' +\n    '(?=(?:\\\\W|$))', 'i');\n\nvar STRICT_PATTERN = new RegExp('' +\n    '(\\\\W|^)vor\\\\s*' +\n    '([0-9]+|eine(?:r|m))\\\\s*' +\n    '(sekunden?|minuten?|stunden?|tag(?:en)?)' +\n    '(?=(?:\\\\W|$))', 'i');\n\nexports.Parser = function DETimeAgoFormatParser(){\n    Parser.apply(this, arguments);\n\n    this.pattern = function() {\n        return this.isStrictMode()? STRICT_PATTERN : PATTERN;\n    };\n\n    this.extract = function(text, ref, match, opt){\n\n        if (match.index > 0 && text[match.index-1].match(/\\w/)) return null;\n\n        var text = match[0];\n        text  = match[0].substr(match[1].length, match[0].length - match[1].length);\n        let index = match.index + match[1].length;\n\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref\n        });\n\n        var num = match[2].toLowerCase() ;\n        if (util.INTEGER_WORDS[num] !== undefined) {\n            num = util.INTEGER_WORDS[num];\n        } else if (num === 'einer' || num === 'einem') {\n            num = 1;\n        } else if (num === 'einigen') {\n            num = 3;\n        } else if (/halben/.test(num)) {\n            num = 0.5;\n        } else {\n            num = parseInt(num);\n        }\n\n        var date = dayjs(ref);\n\n        if (/stunde|min|sekunde/i.test(match[3])) {\n            if (/stunde/i.test(match[3])) {\n\n                date = date.add(-num, 'hour');\n\n            } else if (/min/i.test(match[3])) {\n\n                date = date.add(-num, 'minute');\n\n            } else if (/sekunde/i.test(match[3])) {\n\n                date = date.add(-num, 'second');\n            }\n\n            result.start.imply('day', date.date());\n            result.start.imply('month', date.month() + 1);\n            result.start.imply('year', date.year());\n            result.start.assign('hour', date.hour());\n            result.start.assign('minute', date.minute());\n            result.start.assign('second', date.second());\n            result.tags['DETimeAgoFormatParser'] = true;\n            return result;\n        }\n\n        if (/woche/i.test(match[3])) {\n            date = date.add(-num, 'week');\n\n            result.start.imply('day', date.date());\n            result.start.imply('month', date.month() + 1);\n            result.start.imply('year', date.year());\n            result.start.imply('weekday', date.day());\n            return result;\n        }\n\n        if (/tag/i.test(match[3])) {\n            date = date.add(-num, 'd');\n        }\n\n        if (/monat/i.test(match[3])) {\n            date = date.add(-num, 'month');\n        }\n\n        if (/jahr/i.test(match[3])) {\n\n            date = date.add(-num, 'year');\n        }\n\n        result.start.assign('day', date.date());\n        result.start.assign('month', date.month() + 1);\n        result.start.assign('year', date.year());\n        return result;\n\n    };\n}\n","/*\n\n\n*/\n\nconst dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar ParsedComponents = require('../../result').ParsedComponents;\n\nvar FIRST_REG_PATTERN  = new RegExp(\"(^|\\\\s|T)\" +\n    \"(?:(?:um|von)\\\\s*)?\" +\n    \"(\\\\d{1,4}|mittags?|mitternachts?)\" +\n    \"(?:\" +\n        \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" +\n        \"(?:\" +\n            \"(?:\\\\:|\\\\：)(\\\\d{2})\" +\n        \")?\" +\n    \")?\" +\n    \"(?:\\\\s*uhr)?\" +\n    \"(?:\\\\s*(morgens|vormittags|mittags|nachmittags|abends|nachts))?\" +\n    \"(?=\\\\W|$)\", 'i');\n\n\nvar SECOND_REG_PATTERN = new RegExp(\"^\\\\s*\" +\n    \"(\\\\-|\\\\–|\\\\~|\\\\〜|bis|\\\\?)\\\\s*\" +\n    \"(\\\\d{1,4})\" +\n    \"(?:\" +\n        \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" +\n        \"(?:\" +\n            \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" +\n        \")?\" +\n    \")?\" +\n    \"(?:\\\\s*(morgens|vormittags|mittags|nachmittags|abends|nachts))?\" +\n    \"(?=\\\\W|$)\", 'i');\n\nvar HOUR_GROUP    = 2;\nvar MINUTE_GROUP  = 3;\nvar SECOND_GROUP  = 4;\nvar AM_PM_HOUR_GROUP = 5;\n\n\nexports.Parser = function DETimeExpressionParser() {\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return FIRST_REG_PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n\n        // This pattern can be overlaped Ex. [12] AM, 1[2] AM\n        if (match.index > 0 && text[match.index-1].match(/\\w/)) return null;\n        var refMoment = dayjs(ref);\n        var result = new ParsedResult();\n        result.ref = ref;\n        result.index = match.index + match[1].length;\n        result.text  = match[0].substring(match[1].length);\n        result.tags['DETimeExpressionParser'] = true;\n\n        result.start.imply('day',   refMoment.date());\n        result.start.imply('month', refMoment.month()+1);\n        result.start.imply('year',  refMoment.year());\n\n        var hour = 0;\n        var minute = 0;\n        var meridiem = -1;\n\n        // ----- Second\n        if(match[SECOND_GROUP] != null){\n            var second = parseInt(match[SECOND_GROUP]);\n            if(second >= 60) return null;\n\n            result.start.assign('second', second);\n        }\n\n        // ----- Hours\n        if (/mittags?/i.test(match[HOUR_GROUP])) {\n            meridiem = 1;\n            hour = 12;\n        } else if (/mitternachts?/i.test(match[HOUR_GROUP])) {\n            meridiem = 0;\n            hour = 0;\n        } else {\n            hour = parseInt(match[HOUR_GROUP]);\n        }\n\n        // ----- Minutes\n        if(match[MINUTE_GROUP] != null){\n            minute = parseInt(match[MINUTE_GROUP]);\n        } else if(hour > 100) {\n            minute = hour%100;\n            hour   = parseInt(hour/100);\n        }\n\n        if(minute >= 60) {\n            return null;\n        }\n\n        if(hour > 24) {\n            return null;\n        }\n        if (hour >= 12) {\n            meridiem = 1;\n        }\n\n        // ----- AM & PM\n        if (match[AM_PM_HOUR_GROUP] != null) {\n            if (hour > 12) return null;\n            var ampm = match[AM_PM_HOUR_GROUP].toLowerCase();\n            if (ampm === 'morgens' || ampm === 'vormittags') {\n                meridiem = 0;\n                if(hour == 12) hour = 0;\n            } else {\n                meridiem = 1;\n                if(hour != 12) hour += 12;\n            }\n        }\n\n        result.start.assign('hour', hour);\n        result.start.assign('minute', minute);\n\n        if (meridiem >= 0) {\n            result.start.assign('meridiem', meridiem);\n        } else {\n            if (hour < 12) {\n                result.start.imply('meridiem', 0);\n            } else {\n                result.start.imply('meridiem', 1);\n            }\n        }\n\n        // ==============================================================\n        //                  Extracting the 'to' chunk\n        // ==============================================================\n        match = SECOND_REG_PATTERN.exec(text.substring(result.index + result.text.length));\n        if (!match) {\n            // Not accept number only result\n            if (result.text.match(/^\\d+$/)) {\n                return null;\n            }\n            return result;\n        }\n\n\n\n        // Pattern \"YY.YY -XXXX\" is more like timezone offset\n        if (match[0].match(/^\\s*(\\+|\\-)\\s*\\d{3,4}$/)) {\n            return result;\n        }\n\n        if(result.end == null){\n            result.end = new ParsedComponents(null, result.start.date());\n        }\n\n        var hour = 0;\n        var minute = 0;\n        var meridiem = -1;\n\n        // ----- Second\n        if(match[SECOND_GROUP] != null){\n            var second = parseInt(match[SECOND_GROUP]);\n            if(second >= 60) return null;\n\n            result.end.assign('second', second);\n        }\n\n        hour = parseInt(match[2]);\n\n        // ----- Minute\n        if (match[MINUTE_GROUP]!= null) {\n\n            minute = parseInt(match[MINUTE_GROUP]);\n            if(minute >= 60) return result;\n\n        } else if (hour > 100) {\n\n            minute = hour%100;\n            hour   = parseInt(hour/100);\n        }\n\n        if(minute >= 60) {\n            return null;\n        }\n\n        if(hour > 24) {\n            return null;\n        }\n        if (hour >= 12) {\n            meridiem = 1;\n        }\n\n        // ----- AM & PM\n        if (match[AM_PM_HOUR_GROUP] != null) {\n\n            if (hour > 12) return null;\n\n            var ampm = match[AM_PM_HOUR_GROUP].toLowerCase();\n            if (ampm === 'morgens' || ampm === 'vormittags') {\n                meridiem = 0;\n                if(hour == 12) {\n                    hour = 0;\n                    if (!result.end.isCertain('day')) {\n                        result.end.imply('day', result.end.get('day') + 1);\n                    }\n                }\n            } else {\n                meridiem = 1;\n                if(hour != 12) hour += 12;\n            }\n\n            if (!result.start.isCertain('meridiem')) {\n                if (meridiem == 0) {\n\n                    result.start.imply('meridiem', 0);\n\n                    if (result.start.get('hour') == 12) {\n                        result.start.assign('hour', 0);\n                    }\n\n                } else {\n\n                    result.start.imply('meridiem', 1);\n\n                    if (result.start.get('hour') != 12) {\n                        result.start.assign('hour', result.start.get('hour') + 12);\n                    }\n                }\n            }\n        }\n\n        result.text = result.text + match[0];\n        result.end.assign('hour', hour);\n        result.end.assign('minute', minute);\n        if (meridiem >= 0) {\n            result.end.assign('meridiem', meridiem);\n        } else {\n            var startAtPM = result.start.isCertain('meridiem') && result.start.get('meridiem') == 1;\n            if (startAtPM && result.start.get('hour') > hour) {\n                // 10pm - 1 (am)\n                result.end.imply('meridiem', 0);\n\n            } else if (hour > 12) {\n                result.end.imply('meridiem', 1);\n            }\n        }\n\n        if (result.end.date().getTime() < result.start.date().getTime()) {\n            result.end.imply('day', result.end.get('day') + 1)\n        }\n\n        return result;\n    }\n}\n","/*\n\n\n*/\nconst dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar DAYS_OFFSET = {\n    'sonntag': 0, 'so': 0,\n    'montag': 1, 'mo': 1,\n    'dienstag': 2, 'di': 2,\n    'mittwoch': 3, 'mi': 3,\n    'donnerstag': 4, 'do': 4,\n    'freitag': 5, 'fr': 5,\n    'samstag': 6, 'sa': 6\n};\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(?:(?:\\\\,|\\\\(|\\\\（)\\\\s*)?' +\n    '(?:a[mn]\\\\s*?)?' +\n    '(?:(diese[mn]|letzte[mn]|n(?:ä|ae)chste[mn])\\\\s*)?' +\n    '(' + Object.keys(DAYS_OFFSET).join('|') + ')' +\n    '(?:\\\\s*(?:\\\\,|\\\\)|\\\\）))?' +\n    '(?:\\\\s*(diese|letzte|n(?:ä|ae)chste)\\\\s*woche)?' +\n    '(?=\\\\W|$)', 'i');\n\nvar PREFIX_GROUP = 2;\nvar WEEKDAY_GROUP = 3;\nvar POSTFIX_GROUP = 4;\n\nexports.Parser = function DEWeekdayParser() {\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; };\n\n    this.extract = function(text, ref, match, opt){\n        var index = match.index + match[1].length;\n        var text = match[0].substr(match[1].length, match[0].length - match[1].length);\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref,\n        });\n\n        var dayOfWeek = match[WEEKDAY_GROUP].toLowerCase();\n        var offset = DAYS_OFFSET[dayOfWeek];\n        if(offset === undefined) return null;\n\n        var startMoment = dayjs(ref);\n        var prefix = match[PREFIX_GROUP];\n        var postfix = match[POSTFIX_GROUP];\n\n        var refOffset = startMoment.day();\n        var norm = prefix || postfix;\n        norm = norm || '';\n        norm = norm.toLowerCase();\n        if (/letzte/.test(norm)) {\n            startMoment = startMoment.day(offset - 7);\n        } else if (/n(?:ä|ae)chste/.test(norm)) {\n            startMoment = startMoment.day(offset + 7);\n        } else if (/diese/.test(norm)) {\n            if ( opt.forwardDate && refOffset > offset ) {\n                startMoment = startMoment.day(offset + 7);\n            } else {\n                startMoment = startMoment.day(offset);\n            }\n        } else {\n            if ( opt.forwardDate && refOffset > offset ) {\n                startMoment = startMoment.day(offset + 7);\n            } else if (!opt.forwardDate && Math.abs(offset - 7 - refOffset) < Math.abs(offset - refOffset)) {\n                startMoment = startMoment.day(offset - 7);\n            } else if (!opt.forwardDate && Math.abs(offset + 7 - refOffset) < Math.abs(offset - refOffset)) {\n                startMoment = startMoment.day(offset + 7);\n            } else {\n                startMoment = startMoment.day(offset);\n            }\n        }\n\n        result.start.assign('weekday', offset);\n        result.start.imply('day', startMoment.date());\n        result.start.imply('month', startMoment.month() + 1);\n        result.start.imply('year', startMoment.year());\n        return result;\n    }\n};\n","var dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = new RegExp(\n    '(\\\\W|^)(' +\n        'jetzt|' +\n        '(?:heute|diesen)\\\\s*(morgen|vormittag|mittag|nachmittag|abend)|' +\n        '(?:heute|diese)\\\\s*nacht|' +\n        'heute|' +\n        '(?:(?:ü|ue)ber)?morgen(?:\\\\s*(morgen|vormittag|mittag|nachmittag|abend|nacht))?|' +\n        '(?:vor)?gestern(?:\\\\s*(morgen|vormittag|mittag|nachmittag|abend|nacht))?|' +\n        'letzte\\\\s*nacht' +\n    ')(?=\\\\W|$)', 'i');\n\nexports.Parser = function DECasualDateParser() {\n\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt) {\n        text = match[0].substr(match[1].length);\n        \n        const index = match.index + match[1].length;\n        const result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref,\n        });\n\n        const refMoment = dayjs(ref);\n        const lowerText = text.toLowerCase();\n\n        var startMoment = refMoment;\n\n        if (/(?:heute|diese)\\s*nacht/.test(lowerText)) {\n            // Normally means this coming midnight\n            result.start.imply('hour', 22);\n            result.start.imply('meridiem', 1);\n        } else if (/^(?:ü|ue)bermorgen/.test(lowerText)) {\n            startMoment = startMoment.add(refMoment.hour() > 1 ? 2 : 1, 'day');\n        } else if (/^morgen/.test(lowerText)) {\n            // Check not \"Tomorrow\" on late night\n            if (refMoment.hour() > 1) {\n                startMoment = startMoment.add(1, 'day');\n            }\n        } else if (/^gestern/.test(lowerText)) {\n            startMoment = startMoment.add(-1, 'day');\n        } else if (/^vorgestern/.test(lowerText)) {\n            startMoment = startMoment.add(-2, 'day');\n        } else if (/letzte\\s*nacht/.test(lowerText)) {\n            result.start.imply('hour', 0);\n            if (refMoment.hour() > 6) {\n                startMoment = startMoment.add(-1, 'day');\n            }\n        } else if (lowerText === 'jetzt') {\n            result.start.imply('hour', refMoment.hour());\n            result.start.imply('minute', refMoment.minute());\n            result.start.imply('second', refMoment.second());\n            result.start.imply('millisecond', refMoment.millisecond());\n        }\n\n        var secondMatch = match[3] || match[4] || match[5];\n        if (secondMatch) {\n            switch (secondMatch.toLowerCase()) {\n                case 'morgen':\n                    result.start.imply('hour', 6);\n                    break;\n                case 'vormittag':\n                    result.start.imply('hour', 9);\n                    break;\n                case 'mittag':\n                    result.start.imply('hour', 12);\n                    break;\n                case 'nachmittag':\n                    result.start.imply('hour', 15);\n                    result.start.imply('meridiem', 1);\n                    break;\n                case 'abend':\n                    result.start.imply('hour', 18);\n                    result.start.imply('meridiem', 1);\n                    break;\n                case 'nacht':\n                    result.start.imply('hour', 0);\n                    break;\n            }\n        }\n\n        result.start.assign('day', startMoment.date())\n        result.start.assign('month', startMoment.month() + 1)\n        result.start.assign('year', startMoment.year())\n        result.tags['DECasualDateParser'] = true;\n        return result;\n    }\n}\n","/*\n\n    The parser for parsing month name and year.\n\n    EX.\n        - januari\n        - januari 2012\n        - januari, 2012\n*/\nvar parser = require('../parser');\nvar ParsedResult = require('../../result').ParsedResult;\nvar util  = require('../../utils/NL');\n\nvar PATTERN = new RegExp('(^|\\\\D\\\\s+|[^\\\\w\\\\s])' +\n    '('+ util.MONTH_PATTERN +')' +\n    '\\\\s*' +\n    '(?:' +\n    '[,-]?\\\\s*([0-9]{4})(\\\\s*BE|n\\.Chr\\.|v\\.Chr\\.)?' +\n    ')?' +\n    '(?=[^\\\\s\\\\w]|\\\\s+[^0-9]|\\\\s+$|$)', 'i');\n\nvar MONTH_NAME_GROUP = 2;\nvar YEAR_GROUP = 3;\nvar YEAR_BE_GROUP = 4;\n\nexports.Parser = function ENMonthNameParser(){\n    parser.Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n        const result = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index: match.index + match[1].length,\n            ref: ref,\n        });\n\n        const day = 1;\n        const monthName = match[MONTH_NAME_GROUP];\n        const month = util.MONTH_OFFSET[monthName.toLowerCase()];\n\n        var year = null;\n        if (match[YEAR_GROUP]) {\n            year = match[YEAR_GROUP];\n            year = parseInt(year);\n\n            if(match[YEAR_BE_GROUP]){\n                if (match[YEAR_BE_GROUP].match(/BE/)) {\n                    // Buddhist Era\n                    year = year - 543;\n                } else if (match[YEAR_BE_GROUP].match(/v\\.Chr\\./)) {\n                    // Before Christ\n                    year = -year;\n                }\n\n            } else if (year < 100){\n\n                year = year + 2000;\n            }\n        }\n\n        if(year){\n            result.start.imply('day', day);\n            result.start.assign('month', month);\n            result.start.assign('year', year);\n        } else {\n            year = parser.findYearClosestToRef(ref, day, month)\n            result.start.imply('day', day);\n            result.start.assign('month', month);\n            result.start.imply('year', year);\n        }\n\n        if (result.text.match(/^\\w{3}$/)) {\n            return false;\n        }\n\n        result.tags['NLMonthNameParser'] = true;\n        return result;\n    }\n}\n","const parser = require('../parser');\nvar ParsedResult = require('../../result').ParsedResult;\nvar util  = require('../../utils/NL');\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n        '(?:op\\\\s*?)?' +\n        '(?:'+ '(' + util.WEEKDAY_PATTERN + ')' + '\\\\s*,?\\\\s*)?' +\n        '([0-9]{1,2})\\.?' +\n        '(?:\\\\s*(?:tot|\\\\-|\\\\–|tot en met|t\\\\/m)\\\\s*([0-9]{1,2})\\.?)?\\\\s*' +\n        '(' + util.MONTH_PATTERN + ')' +\n        '(?:' +\n            '(?:-|\\/|,?\\\\s*)' +\n            '((?:' +\n                '[1-9][0-9]{0,3}\\\\s*(?:BE|n\\.Chr\\.|v\\.Chr\\.)|' +\n                '[1-2][0-9]{3}|' +\n                '[5-9][0-9]' +\n            ')(?![^\\\\s]\\\\d))' +\n        ')?' +\n        '(?=\\\\W|$)', 'i'\n    );\nvar WEEKDAY_GROUP = 2;\nvar DATE_GROUP = 3;\nvar DATE_TO_GROUP = 4;\nvar MONTH_NAME_GROUP = 5;\nvar YEAR_GROUP = 6;\n\nexports.Parser = function ENMonthNameLittleEndianParser(){\n    parser.Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; };\n\n    this.extract = function(text, ref, match, opt){\n\n        var result = new ParsedResult({\n            text: match[0].substr(match[1].length, match[0].length - match[1].length),\n            index: match.index + match[1].length,\n            ref: ref\n        });\n\n        var month = match[MONTH_NAME_GROUP];\n        month = util.MONTH_OFFSET[month.toLowerCase()];\n\n        var day = match[DATE_GROUP];\n        day = parseInt(day);\n\n        var year = null;\n        if (match[YEAR_GROUP]) {\n            year = match[YEAR_GROUP];\n\n            if (/BE/i.test(year)) {\n                // Buddhist Era\n                year = year.replace(/BE/i, '');\n                year = parseInt(year) - 543;\n            } else if (/v\\.Chr\\./i.test(year)){\n                // Before Christ\n                year = year.replace(/v\\.Chr\\./i, '');\n                year = -parseInt(year);\n            } else if (/n\\.Chr\\./i.test(year)){\n                year = year.replace(/n\\.Chr\\./i, '');\n                year = parseInt(year);\n            } else {\n                year = parseInt(year);\n                if (year < 100){\n                    if (year > 50) {\n                        year = year + 1900;\n                    } else {\n                        year = year + 2000;\n                    }\n                }\n            }\n        }\n\n        if(year){\n            result.start.assign('day', day);\n            result.start.assign('month', month);\n            result.start.assign('year', year);\n        } else {\n            year = parser.findYearClosestToRef(ref, day, month);\n            result.start.assign('day', day);\n            result.start.assign('month', month);\n            result.start.imply('year', year);\n        }\n\n        // Weekday component\n        if (match[WEEKDAY_GROUP]) {\n            var weekday = match[WEEKDAY_GROUP];\n            weekday = util.WEEKDAY_OFFSET[weekday.toLowerCase()];\n            result.start.assign('weekday', weekday);\n        }\n\n        // Text can be 'range' value. Such as '12 - 13 januari 2012'\n        if (match[DATE_TO_GROUP]) {\n            var endDate = parseInt(match[DATE_TO_GROUP]);\n            result.end = result.start.clone();\n            result.end.assign('day', endDate);\n        }\n\n        result.tags['NLMonthNameLittleEndianParser'] = true;\n        return result;\n    };\n};\n","/*\n    Date format with slash \"/\" (also \"-\" and \".\") between numbers\n    - dinsdag 11/3/2015\n    - 11/3/2015\n    - 11/3\n    - dinsdag 11.mrt.15\n*/\nvar dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar util  = require('../../utils/NL');\n\nvar PATTERN = new RegExp(\n    '(\\\\W|^)' +\n    '(?:' +\n        '(?:op\\\\s*?)?' +\n        '(' + util.WEEKDAY_PATTERN + ')' +\n        '\\\\s*\\\\,?\\\\s*' +\n        '(?:de\\\\s*)?' +\n    ')?' +\n    '([0-3]{0,1}[0-9]{1})[\\\\/\\\\.\\\\-]([0-1]{0,1}[0-9]{1}|' +\n    util.MONTH_PATTERN +\n    ')' +\n    '(?:' +\n        '[\\\\/\\\\.\\\\-]' +\n        '([0-9]{4}\\s*\\,?\\s*|[0-9]{2}\\s*\\,?\\s*)' +\n    ')?' +\n    '(\\\\W|$)', 'i');\n\nvar OPENNING_GROUP = 1;\nvar ENDING_GROUP = 6;\n\nvar WEEKDAY_GROUP = 2;\nvar DAY_GROUP = 3;\nvar MONTH_GROUP = 4;\nvar YEAR_GROUP = 5;\n\nexports.Parser = function DESlashDateFormatParser(argument) {\n    Parser.apply(this, arguments);\n\n    this.pattern = function () { return PATTERN; };\n    this.extract = function(text, ref, match, opt){\n\n        if(match[OPENNING_GROUP] == '/' || match[ENDING_GROUP] == '/') {\n            // Long skip, if there is some overlapping like:\n            // XX[/YY/ZZ]\n            // [XX/YY/]ZZ\n            match.index += match[0].length\n            return;\n        }\n\n        var index = match.index + match[OPENNING_GROUP].length;\n        var text = match[0].substr(match[OPENNING_GROUP].length, match[0].length - match[ENDING_GROUP].length);\n\n\n        let result = new ParsedResult({\n            text: text,\n            index: index,\n            ref: ref,\n        });\n\n        if(text.match(/^\\d\\.\\d$/)) return;\n        if(text.match(/^\\d\\.\\d{1,2}\\.\\d{1,2}$/)) return;\n\n        // MM/dd -> OK\n        // MM.dd -> NG\n        if(!match[YEAR_GROUP] && match[0].indexOf('/') < 0) return;\n\n        let year = match[YEAR_GROUP] || dayjs(ref).year() + '';\n        let month = match[MONTH_GROUP];\n        let day   = match[DAY_GROUP];\n\n        month = parseInt(month);\n        if(!month) {\n            month = util.MONTH_OFFSET[match[MONTH_GROUP].trim().toLowerCase()];\n        }\n        day  = parseInt(day);\n        year = parseInt(year);\n\n        if (month < 1 || month > 12) return null;\n        if(day < 1 || day > 31) return null;\n\n        if(year < 100){\n            if (year > 50) {\n                year = year + 1900;\n            } else {\n                year = year + 2000;\n            }\n        }\n\n        result.start.assign('day', day);\n        result.start.assign('month', month);\n        result.start.assign('year', year);\n\n        //Day of week\n        if(match[WEEKDAY_GROUP]) {\n            result.start.assign('weekday', util.WEEKDAY_OFFSET[match[WEEKDAY_GROUP].toLowerCase()]);\n        }\n\n        result.tags['NLSlashDateFormatParser'] = true;\n        return result;\n    };\n};\n","const dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar DAYS_OFFSET = {\n    'zondag': 0, 'zo': 0,\n    'maandag': 1, 'ma': 1,\n    'dinsdag': 2, 'di': 2,\n    'woensdag': 3, 'wo': 3,\n    'donderdag': 4, 'do': 4,\n    'vrijdag': 5, 'vr': 5,\n    'zaterdag': 6, 'za': 6\n};\n\nvar PATTERN = new RegExp('(\\\\W|^)' +\n    '(?:(?:\\\\,|\\\\(|\\\\（)\\\\s*)?' +\n    '(?:on\\\\s*?)?' +\n    '(?:(deze|afgelopen|vorige|volgende|komende)\\\\s*(?:week)?\\\\s*)?' +\n    '(' + Object.keys(DAYS_OFFSET).join('|') + ')' +\n    '(?:\\\\s*(?:\\\\,|\\\\)|\\\\）))?' +\n    '(?:\\\\s*(deze|afgelopen|vorige|volgende|komende)\\\\s*week)?' +\n    '(?=\\\\W|$)', 'i');\n\nvar PREFIX_GROUP = 2;\nvar WEEKDAY_GROUP = 3;\nvar POSTFIX_GROUP = 4;\n\n\nexports.updateParsedComponent = function updateParsedComponent(result, ref, offset, modifier) {\n\n    var startMoment = dayjs(ref);\n    var startMomentFixed = false;\n    var refOffset = startMoment.day();\n\n    if(modifier == 'afgelopen' || modifier == 'vorige') {\n        startMoment =startMoment.day(offset - 7);\n        startMomentFixed = true;\n    } else if(modifier == 'volgende') {\n        startMoment = startMoment.day(offset + 7);\n        startMomentFixed = true;\n    } else if(modifier == 'deze' || modifier == 'komende') {\n        startMoment = startMoment.day(offset);\n    } else {\n        if (Math.abs(offset - 7 - refOffset) < Math.abs(offset - refOffset)) {\n            startMoment = startMoment.day(offset - 7);\n        } else if (Math.abs(offset + 7 - refOffset) < Math.abs(offset - refOffset)) {\n            startMoment = startMoment.day(offset + 7);\n        } else {\n            startMoment = startMoment.day(offset);\n        }\n    }\n\n    result.start.assign('weekday', offset);\n    if (startMomentFixed) {\n        result.start.assign('day', startMoment.date());\n        result.start.assign('month', startMoment.month() + 1);\n        result.start.assign('year', startMoment.year());\n    } else {\n        result.start.imply('day', startMoment.date());\n        result.start.imply('month', startMoment.month() + 1);\n        result.start.imply('year', startMoment.year());\n    }\n\n    return result;\n};\n\n\nexports.Parser = function NLWeekdayParser() {\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; };\n\n    this.extract = function(text, ref, match, opt){\n        var index = match.index + match[1].length;\n        var text = match[0].substr(match[1].length, match[0].length - match[1].length);\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref\n        });\n\n        var dayOfWeek = match[WEEKDAY_GROUP].toLowerCase();\n        var offset = DAYS_OFFSET[dayOfWeek];\n        if(offset === undefined) {\n            return null;\n        }\n\n        var prefix = match[PREFIX_GROUP];\n        var postfix = match[POSTFIX_GROUP];\n        var norm = prefix || postfix;\n        norm = norm || '';\n        norm = norm.toLowerCase();\n\n        exports.updateParsedComponent(result, ref, offset, norm);\n        result.tags['NLWeekdayParser'] = true;\n\n        return result;\n    }\n};\n","/*\n\n\n*/\n\nconst dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\nvar ParsedComponents = require('../../result').ParsedComponents;\n\nvar FIRST_REG_PATTERN  = new RegExp(\"(^|\\\\s|T)\" +\n    \"(?:(?:om|van)\\\\s*)?\" +\n    \"(\\\\d{1,4}|tussen de middag|middernachts?)\" +\n    \"(?:\" +\n        \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" +\n        \"(?:\" +\n            \"(?:\\\\:|\\\\：)(\\\\d{2})\" +\n        \")?\" +\n    \")?\" +\n    \"(?:\\\\s*uur)?\" +\n    \"(?:\\\\s*(\\'s morgens|\\'s ochtends|in de ochtend|\\'s middags|in de middag|\\'s avonds|in de avond|\\'s nachts))?\" +\n    \"(?=\\\\W|$)\", 'i');\n\n\nvar SECOND_REG_PATTERN = new RegExp(\"^\\\\s*\" +\n    \"(\\\\-|\\\\–|\\\\~|\\\\〜|tot|\\\\?)\\\\s*\" +\n    \"(\\\\d{1,4})\" +\n    \"(?:\" +\n        \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" +\n        \"(?:\" +\n            \"(?:\\\\.|\\\\:|\\\\：)(\\\\d{1,2})\" +\n        \")?\" +\n    \")?\" +\n    \"(?:\\\\s*(\\'s morgens|\\'s ochtends|in de ochtend|\\'s middags|in de middag|\\'s avonds|in de avond|\\'s nachts))?\" +\n    \"(?=\\\\W|$)\", 'i');\n\nvar HOUR_GROUP    = 2;\nvar MINUTE_GROUP  = 3;\nvar SECOND_GROUP  = 4;\nvar AM_PM_HOUR_GROUP = 5;\n\n\nexports.Parser = function NLTimeExpressionParser() {\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return FIRST_REG_PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n\n        // This pattern can be overlaped Ex. [12] AM, 1[2] AM\n        if (match.index > 0 && text[match.index-1].match(/\\w/)) return null;\n        var refMoment = dayjs(ref);\n        var result = new ParsedResult();\n        result.ref = ref;\n        result.index = match.index + match[1].length;\n        result.text  = match[0].substring(match[1].length);\n        result.tags['NLTimeExpressionParser'] = true;\n\n        result.start.imply('day',   refMoment.date());\n        result.start.imply('month', refMoment.month()+1);\n        result.start.imply('year',  refMoment.year());\n\n        var hour = 0;\n        var minute = 0;\n        var meridiem = -1;\n\n        // ----- Second\n        if(match[SECOND_GROUP] != null){\n            var second = parseInt(match[SECOND_GROUP]);\n            if(second >= 60) return null;\n\n            result.start.assign('second', second);\n        }\n\n        // ----- Hours\n        if (/tussen de middag/i.test(match[HOUR_GROUP])) {\n            meridiem = 1;\n            hour = 12;\n        } else if (/middernachts?/i.test(match[HOUR_GROUP])) {\n            meridiem = 0;\n            hour = 0;\n        } else {\n            hour = parseInt(match[HOUR_GROUP]);\n        }\n\n        // ----- Minutes\n        if(match[MINUTE_GROUP] != null){\n            minute = parseInt(match[MINUTE_GROUP]);\n        } else if(hour > 100) {\n            minute = hour%100;\n            hour   = parseInt(hour/100);\n        }\n\n        if(minute >= 60) {\n            return null;\n        }\n\n        if(hour > 24) {\n            return null;\n        }\n        if (hour >= 12) {\n            meridiem = 1;\n        }\n\n        // ----- AM & PM\n        if (match[AM_PM_HOUR_GROUP] != null) {\n            if (hour > 12) return null;\n            var ampm = match[AM_PM_HOUR_GROUP].toLowerCase();\n            if (ampm === \"'s ochtends\" ||  ampm === 'in de ochtend' || ampm === \"'s morgens\") {\n                meridiem = 0;\n                if(hour == 12) hour = 0;\n            } else {\n                meridiem = 1;\n                if(hour != 12) hour += 12;\n            }\n        }\n\n        result.start.assign('hour', hour);\n        result.start.assign('minute', minute);\n\n        if (meridiem >= 0) {\n            result.start.assign('meridiem', meridiem);\n        } else {\n            if (hour < 12) {\n                result.start.imply('meridiem', 0);\n            } else {\n                result.start.imply('meridiem', 1);\n            }\n        }\n\n        // ==============================================================\n        //                  Extracting the 'to' chunk\n        // ==============================================================\n        match = SECOND_REG_PATTERN.exec(text.substring(result.index + result.text.length));\n        if (!match) {\n            // Not accept number only result\n            if (result.text.match(/^\\d+$/)) {\n                return null;\n            }\n            return result;\n        }\n\n\n\n        // Pattern \"YY.YY -XXXX\" is more like timezone offset\n        if (match[0].match(/^\\s*(\\+|\\-)\\s*\\d{3,4}$/)) {\n            return result;\n        }\n\n        if(result.end == null){\n            result.end = new ParsedComponents(null, result.start.date());\n        }\n\n        var hour = 0;\n        var minute = 0;\n        var meridiem = -1;\n\n        // ----- Second\n        if(match[SECOND_GROUP] != null){\n            var second = parseInt(match[SECOND_GROUP]);\n            if(second >= 60) return null;\n\n            result.end.assign('second', second);\n        }\n\n        hour = parseInt(match[2]);\n\n        // ----- Minute\n        if (match[MINUTE_GROUP]!= null) {\n\n            minute = parseInt(match[MINUTE_GROUP]);\n            if(minute >= 60) return result;\n\n        } else if (hour > 100) {\n\n            minute = hour%100;\n            hour   = parseInt(hour/100);\n        }\n\n        if(minute >= 60) {\n            return null;\n        }\n\n        if(hour > 24) {\n            return null;\n        }\n        if (hour >= 12) {\n            meridiem = 1;\n        }\n\n        // ----- AM & PM\n        if (match[AM_PM_HOUR_GROUP] != null) {\n\n            if (hour > 12) return null;\n\n            var ampm = match[AM_PM_HOUR_GROUP].toLowerCase();\n            if (ampm === '\\'s ochtends' ||  ampm === 'in de ochtend' || ampm === '\\'s morgens') {\n                meridiem = 0;\n                if(hour == 12) {\n                    hour = 0;\n                    if (!result.end.isCertain('day')) {\n                        result.end.imply('day', result.end.get('day') + 1);\n                    }\n                }\n            } else {\n                meridiem = 1;\n                if(hour != 12) hour += 12;\n            }\n\n            if (!result.start.isCertain('meridiem')) {\n                if (meridiem == 0) {\n\n                    result.start.imply('meridiem', 0);\n\n                    if (result.start.get('hour') == 12) {\n                        result.start.assign('hour', 0);\n                    }\n\n                } else {\n\n                    result.start.imply('meridiem', 1);\n\n                    if (result.start.get('hour') != 12) {\n                        result.start.assign('hour', result.start.get('hour') + 12);\n                    }\n                }\n            }\n        }\n\n        result.text = result.text + match[0];\n        result.end.assign('hour', hour);\n        result.end.assign('minute', minute);\n        if (meridiem >= 0) {\n            result.end.assign('meridiem', meridiem);\n        } else {\n            var startAtPM = result.start.isCertain('meridiem') && result.start.get('meridiem') == 1;\n            if (startAtPM && result.start.get('hour') > hour) {\n                // 10pm - 1 (am)\n                result.end.imply('meridiem', 0);\n\n            } else if (hour > 12) {\n                result.end.imply('meridiem', 1);\n            }\n        }\n\n        if (result.end.date().getTime() < result.start.date().getTime()) {\n            result.end.imply('day', result.end.get('day') + 1)\n        }\n\n        return result;\n    }\n}\n","var dayjs = require('dayjs');\nvar Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = new RegExp(\n    '(\\\\W|^)(' +\n        'nu|' +\n        'vroeg in de ochtend|'+\n        '(?:van|deze)\\\\s*(morgen|ochtend|middag|avond)|' +\n        '\\'s morgens|\\'s ochtends|tussen de middag|\\'s middags|\\'s avonds|'+\n        '(?:deze|van)\\\\s*nacht|' +\n        'vandaag|' +\n        '(?:over)?morgen(?:\\\\s*(ochtend|middag|avond|nacht))?|' +\n        '(?:eer)?gister(?:\\\\s*(ochtend|middag|avond|nacht))?|' +\n        'afgelopen\\\\s*nacht' +\n    ')(?=\\\\W|$)', 'i');\n\nexports.Parser = function DECasualDateParser() {\n\n    Parser.apply(this, arguments);\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt) {\n        text = match[0].substr(match[1].length);\n\n        const index = match.index + match[1].length;\n        const result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref,\n        });\n\n        const refMoment = dayjs(ref);\n        const lowerText = text.toLowerCase();\n\n        var startMoment = refMoment;\n\n        if (/(?:van|deze)\\s*nacht/.test(lowerText)) {\n            // Normally means this coming midnight\n            result.start.imply('hour', 22);\n            result.start.imply('meridiem', 1);\n        } else if (/^overmorgen/.test(lowerText)) {\n            startMoment = startMoment.add(refMoment.hour() > 1 ? 2 : 1, 'day');\n        } else if (/^morgen/.test(lowerText)) {\n            // Check not \"Tomorrow\" on late night\n            if (refMoment.hour() > 1) {\n                startMoment = startMoment.add(1, 'day');\n            }\n        } else if (/^gisteren/.test(lowerText)) {\n            startMoment = startMoment.add(-1, 'day');\n        } else if (/^eergisteren/.test(lowerText)) {\n            startMoment = startMoment.add(-2, 'day');\n        } else if (/afgelopen\\s*nacht/.test(lowerText)) {\n            result.start.imply('hour', 0);\n            if (refMoment.hour() > 6) {\n                startMoment = startMoment.add(-1, 'day');\n            }\n        } else if (lowerText === 'nu') {\n            result.start.imply('hour', refMoment.hour());\n            result.start.imply('minute', refMoment.minute());\n            result.start.imply('second', refMoment.second());\n            result.start.imply('millisecond', refMoment.millisecond());\n        }\n\n        var secondMatch = match[3] || match[4] || match[5];\n        if (secondMatch) {\n            switch (secondMatch.toLowerCase()) {\n                case 'vroeg in de ochtend':\n                    result.start.imply('hour', 6);\n                    break;\n                case 'ochtend':\n                case 'morgen':\n                case '\\'s ochtends':\n                case '\\'s morgends':\n                    result.start.imply('hour', 9);\n                    break;\n                case 'tussen de middag':\n                    result.start.imply('hour', 12);\n                    break;\n                case 'middag':\n                case 'in de middag':\n                case '\\'s middags':\n                    result.start.imply('hour', 15);\n                    result.start.imply('meridiem', 1);\n                    break;\n                case 'avond':\n                case \"'s avonds\":\n                    result.start.imply('hour', 18);\n                    result.start.imply('meridiem', 1);\n                    break;\n                case 'nacht':\n                case \"'s nachts\":\n                    result.start.imply('hour', 0);\n                    break;\n            }\n        }\n\n        result.start.assign('day', startMoment.date());\n        result.start.assign('month', startMoment.month() + 1);\n        result.start.assign('year', startMoment.year());\n        result.tags['NLCasualDateParser'] = true;\n        return result;\n    }\n}\n","var Parser = require('../parser').Parser;\nvar ParsedResult = require('../../result').ParsedResult;\n\nvar PATTERN = /(\\W|^)((deze)?\\s*('s morgens|'s ochtends|in de ochtend|'s middags|in de middag|'s avonds|in de avond|'s nachts|ochtend|tussen de middag|middag|avond|nacht))/i;\n\nvar TIME_MATCH = 4;\n\nexports.Parser = function ENCasualTimeParser(){\n\n    Parser.apply(this, arguments);\n\n\n    this.pattern = function() { return PATTERN; }\n\n    this.extract = function(text, ref, match, opt){\n\n        var text = match[0].substr(match[1].length);\n        var index = match.index + match[1].length;\n        var result = new ParsedResult({\n            index: index,\n            text: text,\n            ref: ref,\n        });\n\n        if(!match[TIME_MATCH]) TIME_MATCH = 3;\n\n        switch (match[TIME_MATCH].toLowerCase()) {\n            case 'middag':\n            case 'in de middag':\n            case '\\'s middags':\n                result.start.imply('meridiem', 1);\n                result.start.imply('hour', 15);\n                break;\n\n            case 'avond':\n            case 'in de avond':\n            case '\\'s avonds':\n                result.start.imply('meridiem', 1);\n                result.start.imply('hour', 20);\n                break;\n\n            case 'middernacht':\n            case 'nacht':\n            case '\\'s nachts':\n                result.start.imply('meridiem', 0);\n                result.start.imply('hour', 0);\n                break;\n\n            case 'ochtend':\n            case '\\s morgens':\n            case '\\s ochtends':\n            case 'in de ochtend':\n                result.start.imply('meridiem', 0);\n                result.start.imply('hour', 9);\n                break;\n\n            case 'tussen de middag':\n                result.start.imply('meridiem', 0);\n                result.start.imply('hour', 12);\n                break;\n        }\n\n        result.tags['NLCasualTimeParser'] = true;\n        return result;\n    };\n};\n","/*\n  \n*/\nvar Refiner = require('./refiner').Refiner;\n\nexports.Refiner = function OverlapRemovalRefiner() {\n\tRefiner.call(this);\n\t\n\n\tthis.refine = function(text, results, opt) { \n\n        if (results.length < 2) return results;\n        \n        var filteredResults = [];\n        var prevResult = results[0];\n        \n        for (var i=1; i<results.length; i++){\n            \n            var result = results[i];\n            \n            // If overlap, compare the length and discard the shorter one\n            if (result.index < prevResult.index + prevResult.text.length) {\n\n                if (result.text.length > prevResult.text.length){\n                    prevResult = result;\n                }\n                \n            } else {\n                filteredResults.push(prevResult);\n                prevResult = result;\n            }\n        }\n        \n        // The last one\n        if (prevResult != null) {\n            filteredResults.push(prevResult);\n        }\n\n        return filteredResults;\n    }\n}","/*\n  \n*/\nvar Refiner = require('./refiner').Refiner;\n\n\nvar TIMEZONE_OFFSET_PATTERN = new RegExp(\"^\\\\s*(GMT|UTC)?(\\\\+|\\\\-)(\\\\d{1,2}):?(\\\\d{2})\", 'i');\nvar TIMEZONE_OFFSET_SIGN_GROUP = 2;\nvar TIMEZONE_OFFSET_HOUR_OFFSET_GROUP = 3;\nvar TIMEZONE_OFFSET_MINUTE_OFFSET_GROUP = 4;\n\nexports.Refiner = function ExtractTimezoneOffsetRefiner() {\n    Refiner.call(this);\n\n    this.refine = function(text, results, opt) {\n\n        results.forEach(function(result) {\n\n            if (result.start.isCertain('timezoneOffset')) {\n                return;\n            }\n\n            var match = TIMEZONE_OFFSET_PATTERN.exec(text.substring(result.index + result.text.length));\n            if (!match) {\n                return;\n            }\n\n            var hourOffset = parseInt(match[TIMEZONE_OFFSET_HOUR_OFFSET_GROUP]);\n            var minuteOffset = parseInt(match[TIMEZONE_OFFSET_MINUTE_OFFSET_GROUP]);\n            var timezoneOffset = hourOffset * 60 + minuteOffset;\n            if (match[TIMEZONE_OFFSET_SIGN_GROUP] === '-') {\n                timezoneOffset = -timezoneOffset;\n            }\n\n            if (result.end != null) {\n                result.end.assign('timezoneOffset', timezoneOffset);\n            }\n\n            result.start.assign('timezoneOffset', timezoneOffset);\n            result.text += match[0];\n            result.tags['ExtractTimezoneOffsetRefiner'] = true;\n        });\n\n        return results;\n    }\n}\n","/*\n\n*/\nvar Refiner = require('./refiner').Refiner;\n\n// Map ABBR -> Offset in minute\nvar TIMEZONE_NAME_PATTERN = new RegExp(\"^\\\\s*\\\\(?([A-Z]{2,4})\\\\)?(?=\\\\W|$)\", 'i');\nvar DEFAULT_TIMEZONE_ABBR_MAP = {\n    \"ACDT\":630,\"ACST\":570,\"ADT\":-180,\"AEDT\":660,\"AEST\":600,\"AFT\":270,\"AKDT\":-480,\"AKST\":-540,\"ALMT\":360,\"AMST\":-180,\"AMT\":-240,\"ANAST\":720,\"ANAT\":720,\"AQTT\":300,\"ART\":-180,\"AST\":-240,\"AWDT\":540,\"AWST\":480,\"AZOST\":0,\"AZOT\":-60,\"AZST\":300,\"AZT\":240,\"BNT\":480,\"BOT\":-240,\"BRST\":-120,\"BRT\":-180,\"BST\":60,\"BTT\":360,\"CAST\":480,\"CAT\":120,\"CCT\":390,\"CDT\":-300,\"CEST\":120,\"CET\":60,\"CHADT\":825,\"CHAST\":765,\"CKT\":-600,\"CLST\":-180,\"CLT\":-240,\"COT\":-300,\"CST\":-360,\"CVT\":-60,\"CXT\":420,\"ChST\":600,\"DAVT\":420,\"EASST\":-300,\"EAST\":-360,\"EAT\":180,\"ECT\":-300,\"EDT\":-240,\"EEST\":180,\"EET\":120,\"EGST\":0,\"EGT\":-60,\"EST\":-300,\"ET\":-300,\"FJST\":780,\"FJT\":720,\"FKST\":-180,\"FKT\":-240,\"FNT\":-120,\"GALT\":-360,\"GAMT\":-540,\"GET\":240,\"GFT\":-180,\"GILT\":720,\"GMT\":0,\"GST\":240,\"GYT\":-240,\"HAA\":-180,\"HAC\":-300,\"HADT\":-540,\"HAE\":-240,\"HAP\":-420,\"HAR\":-360,\"HAST\":-600,\"HAT\":-90,\"HAY\":-480,\"HKT\":480,\"HLV\":-210,\"HNA\":-240,\"HNC\":-360,\"HNE\":-300,\"HNP\":-480,\"HNR\":-420,\"HNT\":-150,\"HNY\":-540,\"HOVT\":420,\"ICT\":420,\"IDT\":180,\"IOT\":360,\"IRDT\":270,\"IRKST\":540,\"IRKT\":540,\"IRST\":210,\"IST\":330,\"JST\":540,\"KGT\":360,\"KRAST\":480,\"KRAT\":480,\"KST\":540,\"KUYT\":240,\"LHDT\":660,\"LHST\":630,\"LINT\":840,\"MAGST\":720,\"MAGT\":720,\"MART\":-510,\"MAWT\":300,\"MDT\":-360,\"MESZ\":120,\"MEZ\":60,\"MHT\":720,\"MMT\":390,\"MSD\":240,\"MSK\":240,\"MST\":-420,\"MUT\":240,\"MVT\":300,\"MYT\":480,\"NCT\":660,\"NDT\":-90,\"NFT\":690,\"NOVST\":420,\"NOVT\":360,\"NPT\":345,\"NST\":-150,\"NUT\":-660,\"NZDT\":780,\"NZST\":720,\"OMSST\":420,\"OMST\":420,\"PDT\":-420,\"PET\":-300,\"PETST\":720,\"PETT\":720,\"PGT\":600,\"PHOT\":780,\"PHT\":480,\"PKT\":300,\"PMDT\":-120,\"PMST\":-180,\"PONT\":660,\"PST\":-480,\"PT\":-480,\"PWT\":540,\"PYST\":-180,\"PYT\":-240,\"RET\":240,\"SAMT\":240,\"SAST\":120,\"SBT\":660,\"SCT\":240,\"SGT\":480,\"SRT\":-180,\"SST\":-660,\"TAHT\":-600,\"TFT\":300,\"TJT\":300,\"TKT\":780,\"TLT\":540,\"TMT\":300,\"TVT\":720,\"ULAT\":480,\"UTC\":0,\"UYST\":-120,\"UYT\":-180,\"UZT\":300,\"VET\":-210,\"VLAST\":660,\"VLAT\":660,\"VUT\":660,\"WAST\":120,\"WAT\":60,\"WEST\":60,\"WESZ\":60,\"WET\":0,\"WEZ\":0,\"WFT\":720,\"WGST\":-120,\"WGT\":-180,\"WIB\":420,\"WIT\":540,\"WITA\":480,\"WST\":780,\"WT\":0,\"YAKST\":600,\"YAKT\":600,\"YAPT\":600,\"YEKST\":360,\"YEKT\":360\n};\n\nexports.Refiner = function ExtractTimezoneAbbrRefiner(config) {\n\tRefiner.call(this, arguments);\n\n\tthis.refine = function(text, results, opt) {\n\n\t    var timezones = new Object(DEFAULT_TIMEZONE_ABBR_MAP);\n\t    if (opt.timezones) {\n\t        for (var name in opt.timezones) {\n                timezones[name] = opt.timezones[name];\n            }\n        }\n\n\t\tresults.forEach(function(result) {\n\n            if (!result.tags['ENTimeExpressionParser'] &&\n                !result.tags['ENCasualTimeParser'] &&\n                !result.tags['ZHTimeExpressionParser'] &&\n                !result.tags['FRTimeExpressionParser'] &&\n                !result.tags['DETimeExpressionParser']) {\n                return;\n            }\n\n            var match = TIMEZONE_NAME_PATTERN.exec(text.substring(result.index + result.text.length));\n            if (match) {\n                var timezoneAbbr = match[1].toUpperCase();\n                if (timezones[timezoneAbbr] === undefined) {\n                    return;\n                }\n\n                var timezoneOffset = timezones[timezoneAbbr];\n                if (!result.start.isCertain('timezoneOffset')) {\n                    result.start.assign('timezoneOffset', timezoneOffset);\n                }\n\n                if (result.end != null && !result.end.isCertain('timezoneOffset')) {\n                    result.end.assign('timezoneOffset', timezoneOffset);\n                }\n\n                result.text += match[0];\n                result.tags['ExtractTimezoneAbbrRefiner'] = true;\n            }\n\t\t});\n\n        return results;\n\t}\n};","/*\n    Enforce 'forwardDate' option to on the results. When there are missing component,\n    e.g. \"March 12-13 (without year)\" or \"Thursday\", the refiner will try to adjust the result\n    into the future instead of the past.\n*/\nvar dayjs = require('dayjs');\nvar Refiner = require('./refiner').Refiner;\n\nexports.Refiner = function ForwardDateRefiner() {\n    Refiner.call(this);\n\n    this.refine = function(text, results, opt) {\n\n        if (!opt['forwardDate']) {\n            return results;\n        }\n\n        results.forEach(function(result) {\n\n            var refMoment = dayjs(result.ref);\n\n            if (result.start.isOnlyDayMonthComponent() && refMoment.isAfter(result.start.dayjs())\n            ) {\n                // Adjust year into the future\n                for (var i=0; i < 3 && refMoment.isAfter(result.start.dayjs()); i++) {\n                    result.start.imply('year', result.start.get('year') + 1);\n\n                    if (result.end && !result.end.isCertain('year')) {\n                        result.end.imply('year', result.end.get('year') + 1);\n                    }\n                }\n\n                result.tags['ForwardDateRefiner'] = true;\n            }\n\n            if (result.start.isOnlyWeekdayComponent() && refMoment.isAfter(result.start.dayjs())) {\n                // Adjust date to the coming week\n                if (refMoment.day() > result.start.get('weekday')) {\n                    refMoment = refMoment.day(result.start.get('weekday') + 7);\n                } else {\n                    refMoment = refMoment.day(result.start.get('weekday'));\n                }\n\n                result.start.imply('day', refMoment.date());\n                result.start.imply('month', refMoment.month() + 1);\n                result.start.imply('year', refMoment.year());\n                result.tags['ForwardDateRefiner'] = true;\n            }\n        });\n\n        return results;\n    }\n};\n","/*\n  \n*/\nvar Filter = require('./refiner').Filter;\n\nexports.Refiner = function UnlikelyFormatFilter() {\n    Filter.call(this);\n    \n\n    this.isValid = function(text, result, opt) { \n\n        if (result.text.replace(' ','').match(/^\\d*(\\.\\d*)?$/)) {\n            return false;\n        }\n\n        return true; \n    }\n}","/*\n\n*/\nvar ParsedComponents = require('../../result').ParsedComponents;\nvar Refiner = require('../refiner').Refiner;\n\n\nvar PATTERN = new RegExp(\"^\\\\s*(at|after|before|on|,|-|\\\\(|\\\\))?\\\\s*$\");\n\nfunction isMoreSpecific(prevResult, currResult) {\n    var moreSpecific = false;\n\n    if (prevResult.start.isCertain('year')) {\n        if (!currResult.start.isCertain('year')) {\n            moreSpecific = true;\n        } else {\n            if (prevResult.start.isCertain('month')) {\n                if (!currResult.start.isCertain('month')) {\n                    moreSpecific = true;\n                } else {\n                    if (prevResult.start.isCertain('day') && !currResult.start.isCertain('day')) {\n                        moreSpecific = true;\n                    }\n                }\n            }\n        }\n    }\n\n    return moreSpecific;\n}\n\n\nfunction isAbleToMerge(text, prevResult, currResult) {\n    var textBetween = text.substring(prevResult.index + prevResult.text.length, currResult.index);\n\n    // Only accepts merge if one of them comes from casual relative date\n    var includesRelativeResult = (prevResult.tags['ENRelativeDateFormatParser'] || currResult.tags['ENRelativeDateFormatParser']);\n\n    // We assume they refer to the same date if all date fields are implied\n    var referToSameDate = !prevResult.start.isCertain('day') && !prevResult.start.isCertain('month') && !prevResult.start.isCertain('year');\n\n    // If both years are certain, that determines if they refer to the same date\n    // but with one more specific than the other\n    if (prevResult.start.isCertain('year') && currResult.start.isCertain('year'))\n        referToSameDate = (prevResult.start.get('year') === currResult.start.get('year'));\n\n    // We now test with the next level (month) if they refer to the same date\n    if (prevResult.start.isCertain('month') && currResult.start.isCertain('month'))\n        referToSameDate = (prevResult.start.get('month') === currResult.start.get('month')) && referToSameDate;\n\n    return includesRelativeResult && textBetween.match(PATTERN) && referToSameDate;\n}\n\nfunction mergeResult(text, specificResult, nonSpecificResult){\n\n    var specificDate = specificResult.start;\n    var nonSpecificDate = nonSpecificResult.start;\n\n    var startIndex = Math.min(specificResult.index, nonSpecificResult.index);\n    var endIndex = Math.max(\n            specificResult.index + specificResult.text.length,\n            nonSpecificResult.index + nonSpecificResult.text.length);\n\n    specificResult.index = startIndex;\n    specificResult.text  = text.substring(startIndex, endIndex);\n\n    for (var tag in nonSpecificResult.tags) {\n        specificResult.tags[tag] = true;\n    }\n    specificResult.tags['ENPrioritizeSpecificDateRefiner'] = true;\n    return specificResult;\n}\n\nexports.Refiner = function ENPrioritizeSpecificDateRefiner() {\n    Refiner.call(this);\n\n    this.refine = function(text, results, opt) {\n\n        if (results.length < 2) return results;\n\n        var mergedResult = [];\n        var currResult = null;\n        var prevResult = null;\n\n        for (var i = 1; i < results.length; i++) {\n\n            currResult = results[i];\n            prevResult = results[i-1];\n\n            if (isMoreSpecific(prevResult, currResult)\n                    && isAbleToMerge(text, prevResult, currResult)) {\n\n                prevResult = mergeResult(text, prevResult, currResult);\n                currResult = null;\n                i += 1;\n\n            } else if (isMoreSpecific(currResult, prevResult)\n                    && isAbleToMerge(text, prevResult, currResult)) {\n\n                prevResult = mergeResult(text, currResult, prevResult);\n                currResult = null;\n                i += 1;\n            }\n\n            mergedResult.push(prevResult);\n        }\n\n        if (currResult != null) {\n            mergedResult.push(currResult);\n        }\n\n        return mergedResult;\n    }\n}\n","/*\n  \n*/\nvar ENMergeDateRangeRefiner = require('../en/ENMergeDateRangeRefiner').Refiner;\n\nexports.Refiner = function JPMergeDateRangeRefiner() {\n    ENMergeDateRangeRefiner.call(this);\n\n    this.pattern = function () { return /^\\s*(から|ー)\\s*$/i };\n}\n\n","/*\r\n  \r\n*/\r\nvar Refiner = require('../refiner').Refiner;\r\n\r\nexports.Refiner = function FRMergeDateRangeRefiner() {\r\n    Refiner.call(this);\r\n\r\n    this.pattern = function () { return /^\\s*(à|a|\\-)\\s*$/i };\r\n\r\n    this.refine = function(text, results, opt) {\r\n\r\n        if (results.length < 2) return results;\r\n        \r\n        var mergedResult = [];\r\n        var currResult = null;\r\n        var prevResult = null;\r\n        \r\n        for (var i=1; i<results.length; i++){\r\n            \r\n            currResult = results[i];\r\n            prevResult = results[i-1];\r\n            \r\n            if (!prevResult.end && !currResult.end \r\n                && this.isAbleToMerge(text, prevResult, currResult)) {\r\n              \r\n                prevResult = this.mergeResult(text, prevResult, currResult);\r\n                currResult = null;\r\n                i += 1;\r\n            }\r\n            \r\n            mergedResult.push(prevResult);\r\n        }\r\n        \r\n        if (currResult != null) {\r\n            mergedResult.push(currResult);\r\n        }\r\n\r\n\r\n        return mergedResult;\r\n    };\r\n\r\n    this.isAbleToMerge = function(text, result1, result2) {\r\n        var begin = result1.index + result1.text.length;\r\n        var end   = result2.index;\r\n        var textBetween = text.substring(begin,end);\r\n\r\n        return textBetween.match(this.pattern());\r\n    };\r\n\r\n    this.isWeekdayResult = function (result) {\r\n        return result.start.isCertain('weekday') && !result.start.isCertain('day');\r\n    };\r\n\r\n    this.mergeResult = function(text, fromResult, toResult) {\r\n\r\n        if (!this.isWeekdayResult(fromResult) && !this.isWeekdayResult(toResult)) {\r\n\r\n            for (var key in toResult.start.knownValues) {\r\n                if (!fromResult.start.isCertain(key)) {\r\n                    fromResult.start.assign(key, toResult.start.get(key));\r\n                }\r\n            }\r\n\r\n            for (var key in fromResult.start.knownValues) {\r\n                if (!toResult.start.isCertain(key)) {\r\n                    toResult.start.assign(key, fromResult.start.get(key));\r\n                }\r\n            }\r\n        }\r\n\r\n        if (fromResult.start.date().getTime() > toResult.start.date()) {\r\n            var tmp = toResult;\r\n            toResult = fromResult;\r\n            fromResult = tmp;\r\n        }\r\n        \r\n        fromResult.end = toResult.start;\r\n\r\n        \r\n\r\n        for (var tag in toResult.tags) {\r\n            fromResult.tags[tag] = true;\r\n        }\r\n\r\n            \r\n        var startIndex = Math.min(fromResult.index, toResult.index);\r\n        var endIndex = Math.max(\r\n            fromResult.index + fromResult.text.length, \r\n            toResult.index + toResult.text.length);\r\n            \r\n        fromResult.index = startIndex;\r\n        fromResult.text  = text.substring(startIndex, endIndex);\r\n        fromResult.tags[this.constructor.name] = true;\r\n        return fromResult;\r\n    }\r\n};\r\n\r\n","/*\r\n    \r\n*/\r\nvar ParsedComponents = require('../../result').ParsedComponents;\r\nvar Refiner = require('../refiner').Refiner;\r\nvar mergeDateTimeComponent = require('../en/ENMergeDateTimeRefiner').mergeDateTimeComponent;\r\n\r\nvar PATTERN = new RegExp(\"^\\\\s*(T|à|a|vers|de|,|-)?\\\\s*$\");\r\n\r\nfunction isDateOnly(result) {\r\n    return !result.start.isCertain('hour') || result.tags['FRCasualDateParser'];\r\n}\r\n    \r\nfunction isTimeOnly(result) {\r\n    return !result.start.isCertain('month') && !result.start.isCertain('weekday');\r\n}\r\n\r\n\r\nfunction isAbleToMerge(text, prevResult, curResult) {\r\n    var textBetween = text.substring(prevResult.index + prevResult.text.length, curResult.index);\r\n    return textBetween.match(PATTERN);\r\n}\r\n\r\nfunction mergeResult(text, dateResult, timeResult){\r\n\r\n    var beginDate = dateResult.start;\r\n    var beginTime = timeResult.start;\r\n    var beginDateTime = mergeDateTimeComponent(beginDate, beginTime);\r\n\r\n    if (dateResult.end != null || timeResult.end != null) {\r\n        \r\n        var endDate   = dateResult.end == null ? dateResult.start : dateResult.end;            \r\n        var endTime   = timeResult.end == null ? timeResult.start : timeResult.end;\r\n        var endDateTime = mergeDateTimeComponent(endDate, endTime);\r\n        \r\n        if (dateResult.end == null && endDateTime.date().getTime() < beginDateTime.date().getTime()) {\r\n            // Ex. 9pm - 1am\r\n            if (endDateTime.isCertain('day')) {\r\n                endDateTime.assign('day', endDateTime.get('day') + 1);\r\n            } else {\r\n                endDateTime.imply('day', endDateTime.get('day') + 1);\r\n            }\r\n        }\r\n\r\n        dateResult.end = endDateTime;\r\n    }\r\n\r\n    dateResult.start = beginDateTime;    \r\n\r\n    var startIndex = Math.min(dateResult.index, timeResult.index);\r\n    var endIndex = Math.max(\r\n            dateResult.index + dateResult.text.length, \r\n            timeResult.index + timeResult.text.length);\r\n    \r\n    dateResult.index = startIndex;\r\n    dateResult.text  = text.substring(startIndex, endIndex);\r\n\r\n    for (var tag in timeResult.tags) {\r\n        dateResult.tags[tag] = true;\r\n    }\r\n    dateResult.tags['FRMergeDateAndTimeRefiner'] = true;\r\n    return dateResult;\r\n}\r\n\r\nexports.Refiner = function FRMergeDateTimeRefiner() {\r\n    Refiner.call(this);\r\n\r\n\r\n    this.refine = function(text, results, opt) { \r\n\r\n        if (results.length < 2) return results;\r\n\r\n        var mergedResult = [];\r\n        var currResult = null;\r\n        var prevResult = null;\r\n\r\n        for (var i = 1; i < results.length; i++) {\r\n\r\n            currResult = results[i];\r\n            prevResult = results[i-1];\r\n            \r\n            if (isDateOnly(prevResult) && isTimeOnly(currResult) \r\n                    && isAbleToMerge(text, prevResult, currResult)) {\r\n                \r\n                prevResult = mergeResult(text, prevResult, currResult);\r\n                currResult = null;\r\n                i += 1;\r\n                \r\n            } else if (isDateOnly(currResult) && isTimeOnly(prevResult)\r\n                    && isAbleToMerge(text, prevResult, currResult)) {\r\n                \r\n                prevResult = mergeResult(text, currResult, prevResult);\r\n                currResult = null;\r\n                i += 1;\r\n            }\r\n            \r\n            mergedResult.push(prevResult);\r\n        }\r\n\r\n        if (currResult != null) {\r\n            mergedResult.push(currResult);\r\n        }\r\n\r\n        return mergedResult;\r\n    }\r\n}","/*\n  \n*/\nvar ENMergeDateRangeRefiner = require('../en/ENMergeDateRangeRefiner').Refiner;\n\nexports.Refiner = function DEMergeDateRangeRefiner() {\n    ENMergeDateRangeRefiner.call(this);\n\n    this.pattern = function () {\n        return /^\\s*(bis(?:\\s*(?:am|zum))?|\\-)\\s*$/i\n    };\n};\n","/*\n    \n*/\nvar ParsedComponents = require('../../result').ParsedComponents;\nvar Refiner = require('../refiner').Refiner;\n\nvar mergeDateTimeComponent = require('../en/ENMergeDateTimeRefiner').mergeDateTimeComponent;\nvar isDateOnly = require('../en/ENMergeDateTimeRefiner').isDateOnly;\nvar isTimeOnly = require('../en/ENMergeDateTimeRefiner').isTimeOnly;\n\nvar PATTERN = new RegExp(\"^\\\\s*(T|um|am|,|-)?\\\\s*$\");\n\nfunction isAbleToMerge(text, prevResult, curResult) {\n    var textBetween = text.substring(prevResult.index + prevResult.text.length, curResult.index);\n    return textBetween.match(PATTERN);\n}\n\nfunction mergeResult(text, dateResult, timeResult){\n\n    var beginDate = dateResult.start;\n    var beginTime = timeResult.start;    \n    var beginDateTime = mergeDateTimeComponent(beginDate, beginTime);\n\n    if (dateResult.end != null || timeResult.end != null) {\n        \n        var endDate   = dateResult.end == null ? dateResult.start : dateResult.end;            \n        var endTime   = timeResult.end == null ? timeResult.start : timeResult.end;\n        var endDateTime = mergeDateTimeComponent(endDate, endTime);\n        \n        if (dateResult.end == null && endDateTime.date().getTime() < beginDateTime.date().getTime()) {\n            // Ex. 9pm - 1am\n            if (endDateTime.isCertain('day')) {\n                endDateTime.assign('day', endDateTime.get('day') + 1);\n            } else {\n                endDateTime.imply('day', endDateTime.get('day') + 1);\n            }\n        }\n\n        dateResult.end = endDateTime;\n    }\n\n    dateResult.start = beginDateTime;    \n\n    var startIndex = Math.min(dateResult.index, timeResult.index);\n    var endIndex = Math.max(\n            dateResult.index + dateResult.text.length, \n            timeResult.index + timeResult.text.length);\n    \n    dateResult.index = startIndex;\n    dateResult.text  = text.substring(startIndex, endIndex);\n\n    for (var tag in timeResult.tags) {\n        dateResult.tags[tag] = true;\n    }\n    dateResult.tags['DEMergeDateAndTimeRefiner'] = true;\n    return dateResult;\n}\n\nexports.Refiner = function DEMergeDateTimeRefiner() {\n    Refiner.call(this);\n\n\n    this.refine = function(text, results, opt) { \n\n        if (results.length < 2) return results;\n\n        var mergedResult = [];\n        var currResult = null;\n        var prevResult = null;\n\n        for (var i = 1; i < results.length; i++) {\n\n            currResult = results[i];\n            prevResult = results[i-1];\n            \n            if (isDateOnly(prevResult) && isTimeOnly(currResult) \n                    && isAbleToMerge(text, prevResult, currResult)) {\n                \n                prevResult = mergeResult(text, prevResult, currResult);\n                currResult = null;\n                i += 1;\n                \n            } else if (isDateOnly(currResult) && isTimeOnly(prevResult)\n                    && isAbleToMerge(text, prevResult, currResult)) {\n                \n                prevResult = mergeResult(text, currResult, prevResult);\n                currResult = null;\n                i += 1;\n            }\n            \n            mergedResult.push(prevResult);\n        }\n\n        if (currResult != null) {\n            mergedResult.push(currResult);\n        }\n\n        return mergedResult;\n    }\n}","/*\n\n*/\nvar ENMergeDateRangeRefiner = require('../en/ENMergeDateRangeRefiner').Refiner;\n\nexports.Refiner = function NLMergeDateRangeRefiner() {\n    ENMergeDateRangeRefiner.call(this);\n\n    this.pattern = function () {\n        return /^\\s*(tot|t\\/m|tot en met|\\\\-)\\s*$/i;\n    };\n};\n","/*\n\n*/\nvar ParsedComponents = require('../../result').ParsedComponents;\nvar Refiner = require('../refiner').Refiner;\n\nvar mergeDateTimeComponent = require('../en/ENMergeDateTimeRefiner').mergeDateTimeComponent;\nvar isDateOnly = require('../en/ENMergeDateTimeRefiner').isDateOnly;\nvar isTimeOnly = require('../en/ENMergeDateTimeRefiner').isTimeOnly;\n\nvar PATTERN = new RegExp(\"^\\\\s*(T|op|om|voor|na|van|,|-)\\\\s*$\");\n\nfunction isAbleToMerge(text, prevResult, curResult) {\n    var textBetween = text.substring(prevResult.index + prevResult.text.length, curResult.index);\n    return textBetween.match(PATTERN);\n}\n\nfunction mergeResult(text, dateResult, timeResult){\n\n    var beginDate = dateResult.start;\n    var beginTime = timeResult.start;\n    var beginDateTime = mergeDateTimeComponent(beginDate, beginTime);\n\n    if (dateResult.end != null || timeResult.end != null) {\n\n        var endDate   = dateResult.end == null ? dateResult.start : dateResult.end;\n        var endTime   = timeResult.end == null ? timeResult.start : timeResult.end;\n        var endDateTime = mergeDateTimeComponent(endDate, endTime);\n\n        if (dateResult.end == null && endDateTime.date().getTime() < beginDateTime.date().getTime()) {\n            // Ex. 9pm - 1am\n            if (endDateTime.isCertain('day')) {\n                endDateTime.assign('day', endDateTime.get('day') + 1);\n            } else {\n                endDateTime.imply('day', endDateTime.get('day') + 1);\n            }\n        }\n\n        dateResult.end = endDateTime;\n    }\n\n    dateResult.start = beginDateTime;\n\n    var startIndex = Math.min(dateResult.index, timeResult.index);\n    var endIndex = Math.max(\n            dateResult.index + dateResult.text.length,\n            timeResult.index + timeResult.text.length);\n\n    dateResult.index = startIndex;\n    dateResult.text  = text.substring(startIndex, endIndex);\n\n    for (var tag in timeResult.tags) {\n        dateResult.tags[tag] = true;\n    }\n    dateResult.tags['NLMergeDateAndTimeRefiner'] = true;\n    return dateResult;\n}\n\nexports.Refiner = function NLMergeDateTimeRefiner() {\n    Refiner.call(this);\n\n\n    this.refine = function(text, results, opt) {\n\n        if (results.length < 2) return results;\n\n        var mergedResult = [];\n        var currResult = null;\n        var prevResult = null;\n\n        for (var i = 1; i < results.length; i++) {\n\n            currResult = results[i];\n            prevResult = results[i-1];\n            if (isDateOnly(currResult) && isTimeOnly(prevResult)\n                    && isAbleToMerge(text, prevResult, currResult)) {\n\n                prevResult = mergeResult(text, currResult, prevResult);\n                currResult = null;\n                i += 1;\n                mergedResult.push(prevResult);\n            } else {\n                mergedResult.push(prevResult);\n            }\n\n        }\n\n        if (currResult != null) {\n            mergedResult.push(currResult);\n        }\n\n        return mergedResult;\n    }\n}\n","import * as parser from './parsers/parser';\nimport * as refiner from './refiners/refiner';\n\nexport function mergeOptions(options) {\n\n    var addedTypes = {};\n    var mergedOption = {\n        parsers: [],\n        refiners: []\n    };\n\n    options.forEach(function (option) {\n\n        if (option.call) {\n            option = option.call();\n        }\n\n        if (option.parsers) {\n            option.parsers.forEach(function (p) {\n                if (!addedTypes[p.constructor]) {\n                    mergedOption.parsers.push(p);\n                    addedTypes[p.constructor] = true;\n                }\n            });\n        }\n\n        if (option.refiners) {\n            option.refiners.forEach(function (r) {\n                if (!addedTypes[r.constructor]) {\n                    mergedOption.refiners.push(r);\n                    addedTypes[r.constructor] = true;\n                }\n            });\n        }\n    });\n\n    return mergedOption;\n}\n\n\nexport function commonPostProcessing() {\n    return {\n        refiners: [\n            // These should be after all other refiners\n            new refiner.ExtractTimezoneOffsetRefiner(),\n            new refiner.ExtractTimezoneAbbrRefiner(),\n            new refiner.UnlikelyFormatFilter()\n        ]\n    }\n}\n\n\n// -------------------------------------------------------------\n\nexport function strictOption() {\n    var strictConfig = {\n        strict: true\n    };\n\n    return exports.mergeOptions([\n        exports.en(strictConfig),\n        exports.de(strictConfig),\n        exports.nl(strictConfig),\n        exports.pt(strictConfig),\n        exports.es(strictConfig),\n        exports.fr(strictConfig),\n        exports.ja(strictConfig),\n        exports.zh,\n        exports.commonPostProcessing\n    ]);\n}\n\nexport function casualOption() {\n    return exports.mergeOptions([\n        exports.en.casual,\n        // Some German abbriviate overlap with common English\n        exports.de({ strict: true }),\n        exports.nl,\n        exports.pt,\n        exports.es,\n        exports.fr,\n        exports.ja,\n        exports.zh,\n        exports.commonPostProcessing\n    ]);\n}\n\n// -------------------------------------------------------------\n\nexport const de = function(config) {\n    return {\n        parsers: [\n            new parser.DEDeadlineFormatParser(config),\n            new parser.DEMonthNameLittleEndianParser(config),\n            new parser.DEMonthNameParser(config),\n            new parser.DESlashDateFormatParser(config),\n            new parser.DETimeAgoFormatParser(config),\n            new parser.DETimeExpressionParser(config)\n        ],\n        refiners: [\n            new refiner.OverlapRemovalRefiner(),\n            new refiner.ForwardDateRefiner(),\n            new refiner.DEMergeDateTimeRefiner(),\n            new refiner.DEMergeDateRangeRefiner()\n        ]\n    }\n};\n\nde.casual = function() {\n    var option = exports.de({\n        strict: false\n    });\n    option.parsers.unshift(new parser.DECasualDateParser());\n    option.parsers.unshift(new parser.DEWeekdayParser());\n    return option;\n};\n\n\n\n// -------------------------------------------------------------\n\nexport const nl = function(config) {\n    return {\n        parsers: [\n            new parser.NLMonthNameLittleEndianParser(config),\n            new parser.NLMonthNameParser(config),\n            new parser.NLSlashDateFormatParser(config),\n            new parser.NLTimeExpressionParser(config),\n        ],\n        refiners: [\n            new refiner.OverlapRemovalRefiner(),\n            new refiner.ForwardDateRefiner(),\n            new refiner.NLMergeDateTimeRefiner(),\n            new refiner.NLMergeDateRangeRefiner()\n        ]\n    }\n};\n\nnl.casual = function() {\n    var option = exports.nl({\n        strict: false\n    });\n    option.parsers.unshift(new parser.NLCasualDateParser());\n    option.parsers.unshift(new parser.NLCasualTimeParser());\n    option.parsers.unshift(new parser.NLWeekdayParser());\n    return option;\n};\n\n\n\n// -------------------------------------------------------------\n\n\nexport const en = function(config) {\n    return {\n        parsers: [\n            new parser.ENISOFormatParser(config),\n            new parser.ENDeadlineFormatParser(config),\n            new parser.ENMonthNameLittleEndianParser(config),\n            new parser.ENMonthNameMiddleEndianParser(config),\n            new parser.ENMonthNameParser(config),\n            new parser.ENSlashDateFormatParser(config),\n            new parser.ENSlashDateFormatStartWithYearParser(config),\n            new parser.ENSlashMonthFormatParser(config),\n            new parser.ENTimeAgoFormatParser(config),\n            new parser.ENTimeLaterFormatParser(config),\n            new parser.ENTimeExpressionParser(config)\n        ],\n        refiners: [\n            new refiner.OverlapRemovalRefiner(),\n            new refiner.ForwardDateRefiner(),\n\n            // English\n            new refiner.ENMergeDateTimeRefiner(),\n            new refiner.ENMergeDateRangeRefiner(),\n            new refiner.ENPrioritizeSpecificDateRefiner()\n        ]\n    }\n};\n\nen.casual = function(config) {\n    config = config || {};\n    config.strict = false;\n    var option = exports.en(config);\n\n    // en\n    option.parsers.unshift(new parser.ENCasualDateParser());\n    option.parsers.unshift(new parser.ENCasualTimeParser());\n    option.parsers.unshift(new parser.ENWeekdayParser());\n    option.parsers.unshift(new parser.ENRelativeDateFormatParser());\n    return option;\n};\n\n\nexport const en_GB = function(config) {\n    config = config || {};\n    config.littleEndian = true;\n    return exports.en(config);\n};\n\nen_GB.casual = function(config) {\n    config = config || {};\n    config.littleEndian = true;\n    return exports.en.casual(config);\n};\n\n// -------------------------------------------------------------\n\nexport const ja = function() {\n    return {\n        parsers: [\n            new parser.JPStandardParser()\n        ],\n        refiners: [\n            new refiner.OverlapRemovalRefiner(),\n            new refiner.ForwardDateRefiner(),\n            new refiner.JPMergeDateRangeRefiner()\n        ]\n    }\n};\n\nja.casual = function() {\n    var option = exports.ja();\n    option.parsers.unshift(new parser.JPCasualDateParser());\n    return option;\n};\n\n// -------------------------------------------------------------\n\n\nexport const pt = function(config) {\n    return {\n        parsers: [\n            new parser.PTTimeAgoFormatParser(config),\n            new parser.PTDeadlineFormatParser(config),\n            new parser.PTTimeExpressionParser(config),\n            new parser.PTMonthNameLittleEndianParser(config),\n            new parser.PTSlashDateFormatParser(config)\n        ],\n        refiners: [\n            new refiner.OverlapRemovalRefiner(),\n            new refiner.ForwardDateRefiner()\n        ]\n    }\n};\n\npt.casual = function() {\n    var option = exports.pt({\n        strict: false\n    });\n\n    option.parsers.unshift(new parser.PTCasualDateParser());\n    option.parsers.unshift(new parser.PTWeekdayParser());\n    return option;\n};\n\n// -------------------------------------------------------------\n\n\nexport const es = function(config) {\n    return {\n        parsers: [\n            new parser.ESTimeAgoFormatParser(config),\n            new parser.ESDeadlineFormatParser(config),\n            new parser.ESTimeExpressionParser(config),\n            new parser.ESMonthNameLittleEndianParser(config),\n            new parser.ESSlashDateFormatParser(config)\n        ],\n        refiners: [\n            new refiner.OverlapRemovalRefiner(),\n            new refiner.ForwardDateRefiner()\n        ]\n    }\n};\n\nes.casual = function() {\n    var option = exports.es({\n        strict: false\n    });\n\n    option.parsers.unshift(new parser.ESCasualDateParser());\n    option.parsers.unshift(new parser.ESWeekdayParser());\n    return option;\n};\n\n\n// -------------------------------------------------------------\n\nexport const fr = function(config) {\n    return {\n        parsers: [\n            new parser.FRDeadlineFormatParser(config),\n            new parser.FRMonthNameLittleEndianParser(config),\n            new parser.FRSlashDateFormatParser(config),\n            new parser.FRTimeAgoFormatParser(config),\n            new parser.FRTimeExpressionParser(config)\n        ],\n        refiners: [\n            new refiner.OverlapRemovalRefiner(),\n            new refiner.ForwardDateRefiner(),\n            new refiner.FRMergeDateRangeRefiner(),\n            new refiner.FRMergeDateTimeRefiner()\n        ]\n    }\n};\n\nfr.casual = function() {\n    var option = exports.fr({\n        strict: false\n    });\n\n    option.parsers.unshift(new parser.FRCasualDateParser());\n    option.parsers.unshift(new parser.FRWeekdayParser());\n    option.parsers.unshift(new parser.FRRelativeDateFormatParser());\n    return option;\n};\n\n\n// -------------------------------------------------------------\n\nexport const zh = function() {\n    return {\n        parsers: [\n            new parser.ZHHantDateParser(),\n            new parser.ZHHantWeekdayParser(),\n            new parser.ZHHantTimeExpressionParser(),\n            new parser.ZHHantCasualDateParser(),\n            new parser.ZHHantDeadlineFormatParser()\n        ],\n        refiners: [\n            new refiner.OverlapRemovalRefiner(),\n            new refiner.ForwardDateRefiner()\n        ]\n    }\n};\n","export class Chrono {\n\n    constructor(option) {\n        option = option || exports.options.casualOption();\n        this.parsers = new Object(option.parsers);\n        this.refiners = new Object(option.refiners);\n    }\n\n    parse(text, refDate, opt) {\n\n        refDate = refDate || new Date();\n        opt = opt || {};\n        opt.forwardDate = opt.forwardDate || opt.forwardDate;\n\n        var allResults = [];\n\n        this.parsers.forEach(function (parser) {\n            var results = parser.execute(text, refDate, opt);\n            allResults = allResults.concat(results);\n        });\n\n        allResults.sort(function(a, b) {\n            return a.index - b.index;\n        });\n\n        this.refiners.forEach(function (refiner) {\n            allResults = refiner.refine(text, allResults, opt);\n        });\n\n        return allResults;\n    }\n\n    parseDate(text, refDate, opt) {\n        var results = this.parse(text, refDate, opt);\n        if (results.length > 0) {\n            return results[0].start.date();\n        }\n        return null;\n    }\n}\n\nimport * as _options from './options';\nimport * as _parser from './parsers/parser';\nimport * as _refiner from './refiners/refiner';\nimport * as _result from './result';\n\nexport const options = _options;\nexport const parser = _parser;\nexport const refiner = _refiner;\n\nexport const Parser = parser.Parser;\nexport const Refiner = refiner.Refiner;\nexport const Filter = refiner.Filter;\n\nexport const ParsedResult = _result.ParsedResult;\nexport const ParsedComponents = _result.ParsedComponents;\n\nexport const strict = new Chrono( options.strictOption() );\nexport const casual = new Chrono( options.casualOption() );\n\nexport const en = new Chrono( options.mergeOptions([\n    options.en.casual, options.commonPostProcessing]));\n\nexport const en_GB = new Chrono( options.mergeOptions([\n    options.en_GB.casual, options.commonPostProcessing]));\n\nexport const de = new Chrono( options.mergeOptions([\n    options.de.casual, options.en, options.commonPostProcessing]));\n\nexport const nl = new Chrono( options.mergeOptions([\n    options.nl.casual, options.en, options.commonPostProcessing]));\n\nexport const pt = new Chrono( options.mergeOptions([\n    options.pt.casual, options.en, options.commonPostProcessing]));\n\nexport const es = new Chrono( options.mergeOptions([\n    options.es.casual, options.en, options.commonPostProcessing]));\n\nexport const fr = new Chrono( options.mergeOptions([\n    options.fr.casual, options.en, options.commonPostProcessing]));\n\nexport const ja = new Chrono( options.mergeOptions([\n    options.ja.casual, options.en, options.commonPostProcessing]));\n\n\nexport function parse () {\n    return casual.parse.apply(casual, arguments);\n}\n\nexport function parseDate() {\n    return casual.parseDate.apply(casual, arguments);\n}\n\n\n\n\n"],"sourceRoot":""}